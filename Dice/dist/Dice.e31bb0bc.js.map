{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/cannon-es/dist/cannon-es.js","node_modules/three/examples/jsm/controls/OrbitControls.js","node_modules/cannon-es-debugger/dist/cannon-es-debugger.js","node_modules/plane.js/dist/plane.es.js","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","theta","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","document","Quaternion","_Symbol$iterator2","z","w","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","EPSILON","angleTo","acos","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","getZ","getW","_onChange","callback","_context3","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator3","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$d","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","u","_context4","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","_vector$c","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","setRGB","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_TO_LINEAR","_defineProperty","FROM_LINEAR","_FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","encoding","_this2","isTexture","_assertThisInitialized","source","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","Vector4","_Symbol$iterator4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_context5","WebGLRenderTarget","_EventDispatcher2","_super2","options","_this3","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_super3","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super4","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super5","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super6","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super7","count","_this8","isWebGLMultipleRenderTargets","il","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","size","halfSize","_vector$b","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","p","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","copyColorsArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","Float64BufferAttribute","_BufferAttribute10","_super20","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super21","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super22","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","boneTransform","raycaster","intersects","intersection","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super23","widthSegments","heightSegments","depthSegments","_this15","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputEncoding","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","_Material2","_super24","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super25","_this17","PerspectiveCamera","_Camera","_super26","fov","aspect","_this18","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super27","renderTarget","_this19","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","scene","_this$children","_slicedToArray","currentRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super28","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super29","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super30","_this22","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super31","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","useLegacyLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator","_createForOfIteratorHelper","_step","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super32","_this24","isMeshDepthMaterial","_Material4","_super33","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearEncoding","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super34","_this26","isArrayCamera","cameras","Group","_Object3D4","_super35","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator2","_step2","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","visibilityState","_iterator3","_step3","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super36","_this28","WebXRManager","_EventDispatcher6","_super37","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","planesLastChangedTimes","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","getPlanes","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","planesToRemove","_iterator4","_step4","_iterator5","_step5","_iterator6","_step6","lastChangedTime","lastKnownTime","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","physicallyCorrectLights","WebGL1Renderer","_WebGLRenderer","_super38","FogExp2","Fog","Scene","_Object3D5","_super39","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super40","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super41","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super42","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","_Mesh","_super43","_this34","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_super44","_this35","isBone","DataTexture","_Texture5","_super45","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super46","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_identity","_mesh","InstancedMesh","_Mesh2","_super47","_this38","setMatrixAt","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","_Material6","_super48","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super49","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super50","_this41","LineLoop","_Line2","_super51","_this42","_Material7","_super52","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super53","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super54","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super55","_this46","CompressedTexture","_Texture8","_super56","_this47","CompressedArrayTexture","_CompressedTexture","_super57","_this48","CanvasTexture","_Texture9","_super58","_this49","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super59","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this50","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super60","aRadius","_this51","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super61","curveType","_this52","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super62","v3","_this53","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super63","_this54","isCubicBezierCurve3","LineCurve","_Curve5","_super64","_this55","isLineCurve","LineCurve3","_Curve6","_super65","_this56","isLineCurve3","QuadraticBezierCurve","_Curve7","_super66","_this57","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super67","_this58","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super68","_this59","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super69","_this60","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super70","_this61","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super71","phiStart","phiLength","_this62","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super72","capSegments","radialSegments","_this63","CircleGeometry","_BufferGeometry4","_super73","thetaStart","thetaLength","_this64","segment","CylinderGeometry","_BufferGeometry5","_super74","radiusTop","radiusBottom","openEnded","_this65","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super75","_this66","PolyhedronGeometry","_BufferGeometry6","_super76","_this67","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super77","_this68","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super78","thresholdAngle","_this69","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super79","_this70","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super80","_this71","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super81","_this72","OctahedronGeometry","_PolyhedronGeometry3","_super82","_this73","RingGeometry","_BufferGeometry9","_super83","innerRadius","outerRadius","thetaSegments","phiSegments","_this74","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super84","_this75","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super85","_this76","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super86","_this77","TorusGeometry","_BufferGeometry12","_super87","tube","tubularSegments","_this78","TorusKnotGeometry","_BufferGeometry13","_super88","_this79","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super89","_this80","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super90","_this81","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super91","_this82","RawShaderMaterial","_ShaderMaterial","_super92","_this83","_Material9","_super93","_this84","_MeshStandardMaterial","_super94","_this85","_sheen","_clearcoat","_iridescence","_transmission","_toConsumableArray","_Material10","_super95","_this86","_Material11","_super96","_this87","_Material12","_super97","_this88","_Material13","_super98","_this89","_Material14","_super99","_this90","_LineBasicMaterial","_super100","_this91","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super101","_this92","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super102","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super103","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","getInterpolation","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super104","ColorKeyframeTrack","_KeyframeTrack2","_super105","NumberKeyframeTrack","_KeyframeTrack3","_super106","QuaternionLinearInterpolant","_Interpolant4","_super107","QuaternionKeyframeTrack","_KeyframeTrack4","_super108","StringKeyframeTrack","_KeyframeTrack5","_super109","VectorKeyframeTrack","_KeyframeTrack6","_super110","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","HttpError","_Error","_super111","response","_this93","_wrapNativeSuper","FileLoader","_Loader","_super112","_this94","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super113","CompressedTextureLoader","_Loader3","_super114","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super115","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super116","urls","DataTextureLoader","_Loader6","_super117","texData","TextureLoader","_Loader7","_super118","Light","_Object3D11","_super119","_this95","HemisphereLight","_Light","_super120","_this96","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super121","_this97","isSpotLightShadow","SpotLight","_Light2","_super122","_this98","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super123","_this99","_cubeDirections","_cubeUps","PointLight","_Light3","_super124","_this100","DirectionalLightShadow","_LightShadow3","_super125","_this101","isDirectionalLightShadow","DirectionalLight","_Light4","_super126","_this102","AmbientLight","_Light5","_super127","_this103","RectAreaLight","_Light6","_super128","_this104","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super129","_this105","MaterialLoader","_Loader8","_super130","_this106","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super131","_this107","BufferGeometryLoader","_Loader9","_super132","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super133","_loadAsync","_callee2","_callee2$","_context9","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context10","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context12","_deserializeImage3","_callee4","_url","_callee4$","_context11","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super134","_this108","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super135","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","_LightProbe","_super136","_this109","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super137","_this110","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super138","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super139","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super140","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super141","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super142","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super143","_this116","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super144","_this117","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super145","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super146","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super147","_this120","GridHelper","_LineSegments2","_super148","_this121","PolarGridHelper","_LineSegments3","_super149","sectors","rings","_this122","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super150","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super151","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super152","_this125","Box3Helper","_LineSegments6","_super153","_this126","PlaneHelper","_Line3","_super154","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super155","headLength","headWidth","_this128","setDirection","setColor","AxesHelper","_LineSegments7","_super156","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_tables","_generateTables","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","BoxBufferGeometry","_BoxGeometry","_super157","CapsuleBufferGeometry","_CapsuleGeometry","_super158","CircleBufferGeometry","_CircleGeometry","_super159","ConeBufferGeometry","_ConeGeometry","_super160","CylinderBufferGeometry","_CylinderGeometry2","_super161","DodecahedronBufferGeometry","_DodecahedronGeometry","_super162","ExtrudeBufferGeometry","_ExtrudeGeometry","_super163","IcosahedronBufferGeometry","_IcosahedronGeometry","_super164","LatheBufferGeometry","_LatheGeometry2","_super165","OctahedronBufferGeometry","_OctahedronGeometry","_super166","PlaneBufferGeometry","_PlaneGeometry","_super167","PolyhedronBufferGeometry","_PolyhedronGeometry5","_super168","RingBufferGeometry","_RingGeometry","_super169","ShapeBufferGeometry","_ShapeGeometry","_super170","SphereBufferGeometry","_SphereGeometry","_super171","TetrahedronBufferGeometry","_TetrahedronGeometry","_super172","TorusBufferGeometry","_TorusGeometry","_super173","TorusKnotBufferGeometry","_TorusKnotGeometry","_super174","TubeBufferGeometry","_TubeGeometry","_super175","revision","__THREE__","ObjectCollisionMatrix","bi","temp","setNumObjects","Mat3","setZero","setTrace","getTrace","Vec3","vmult","smult","mmult","A","solve","nr","nc","eqns","np","kp","multiplier","row","column","sep","reverse_eqns","M","vx","vy","vz","vadd","vsub","crossmat","invN","ninv","lengthSquared","distanceSquared","vmul","isZero","norm","Vec3_tangents_n","inorm","randVec","Vec3_tangents_randVec","almostEquals","almostZero","isAntiparallelTo","antip_neg","ZERO","UNIT_X","UNIT_Y","UNIT_Z","AABB","lowerBound","upperBound","skinSize","tmp$1","aabb","extend","overlaps","l1","l2","overlapsX","overlapsY","overlapsZ","volume","contains","getCorners","toLocalFrame","corners","transformIntoFrame_corners","corner","pointToLocal","toWorldFrame","pointToWorld","overlapsRay","dirFracX","dirFracY","dirFracZ","t4","t5","t6","ArrayCollisionMatrix","EventTarget","includes","hasAnyEventListener","toAxisAngle","targetAxis","setFromVectors","sfv_t1","sfv_t2","mult","quat","aw","bw","inorm2","normalizeFast","toEuler","heading","attitude","bank","sqx","sqy","sqz","toQuat","omega","cosom","sinom","scale0","scale1","integrate","angularFactor","half_dt","SHAPE_TYPES","SPHERE","PLANE","BOX","COMPOUND","CONVEXPOLYHEDRON","HEIGHTFIELD","PARTICLE","CYLINDER","TRIMESH","idCounter","boundingSphereRadius","collisionResponse","collisionFilterGroup","collisionFilterMask","updateBoundingSphereRadius","calculateLocalInertia","mass","calculateWorldAABB","pos","types","Transform","worldPoint","pointToLocalFrame","localPoint","pointToWorldFrame","vectorToWorldFrame","localVector","tmpQuat$1","vectorToLocalFrame","worldVector","ConvexPolyhedron","faceNormals","computeNormals","worldVertices","worldVerticesNeedsUpdate","worldFaceNormals","worldFaceNormalsNeedsUpdate","uniqueAxes","uniqueEdges","computeEdges","edge","numVertices","found","getFaceNormal","computeNormal","clipAgainstHull","posA","quatA","hullB","posB","quatB","separatingNormal","minDist","maxDist","WorldNormal","closestFaceB","dmax","worldVertsB1","worldb","clipFaceAgainstHull","findSeparatingAxis","faceListA","faceListB","faceANormalWS3","Worldnormal1","deltaC","worldEdge0","worldEdge1","Cross","dmin","hullA","numFacesA","fi","testSepAxis","numFacesB","e0","e1","dist","maxminA","maxminB","maxA","minA","maxB","minB","aabbmax","aabbmin","computeLocalAABB","getPlaneConstantOfFace","face_i","faceANormalWS","edge0","WorldEdge0","worldPlaneAnormal1","planeNormalWS1","worldA1","localPlaneNormal","planeNormalWS","worldVertsB2","pVtxIn","pVtxOut","closestFaceA","polyA","connectedFaces","numVerticesA","otherFace","localPlaneEq","planeEqWS","clipFaceAgainstPlane","inVertices","outVertices","planeConstant","n_dot_first","n_dot_last","numVerts","firstVertex","lastVertex","vi","newv","computeWorldVertices","verts","worldVerts","computeWorldFaceNormals","worldNormals","max2","norm2","minx","miny","minz","maxx","maxy","maxz","tempWorldVertex","getAveragePointLocal","transformAllPoints","pointIsInside","positiveResult","pointInside","vToP","r1","vToPointInside","r2","project_worldVertex","localAxis","project_localAxis","localOrigin","project_localOrigin","vs","Box","halfExtents","convexPolyhedronRepresentation","updateConvexPolyhedronRepresentation","V","calculateInertia","getSideNormals","sixTargetVectors","sides","ex","forEachWorldCorner","worldCornerTempPos","worldCornersTemp","wc","BODY_TYPES","DYNAMIC","STATIC","KINEMATIC","BODY_SLEEP_STATES","AWAKE","SLEEPY","SLEEPING","Body","world","vlambda","previousPosition","interpolatedPosition","initPosition","velocity","initVelocity","invMass","linearDamping","allowSleep","sleepState","sleepSpeedLimit","sleepTimeLimit","timeLastSleepy","wakeUpAfterNarrowphase","torque","initQuaternion","previousQuaternion","interpolatedQuaternion","initAngularVelocity","shapeOffsets","shapeOrientations","inertia","invInertia","invInertiaWorld","invMassSolve","invInertiaSolve","invInertiaWorldSolve","fixedRotation","angularDamping","linearFactor","aabbNeedsUpdate","boundingRadius","wlambda","isTrigger","Boolean","updateMassProperties","wakeUp","prevState","wakeupEvent","sleep","sleepTick","speedSquared","speedLimitSquared","sleepyEvent","sleepEvent","updateSolveMassProperties","orientation","updateBoundingRadius","removeShape","updateAABB","tmpVec","tmpQuat","bodyQuat","shapeAABB","updateAABB_shapeAABB","updateInertiaWorld","I","m1","uiw_m1","m2","uiw_m2","uiw_m3","applyForce","relativePoint","rotForce","Body_applyForce_rotForce","applyLocalForce","localForce","worldForce","Body_applyLocalForce_worldForce","relativePointWorld","Body_applyLocalForce_relativePointWorld","applyTorque","applyImpulse","impulse","velo","Body_applyImpulse_velo","rotVelo","Body_applyImpulse_rotVelo","applyLocalImpulse","localImpulse","worldImpulse","Body_applyLocalImpulse_worldImpulse","Body_applyLocalImpulse_relativePoint","Body_updateMassProperties_halfExtents","fixed","getVelocityAtWorldPoint","quatNormalize","quatNormalizeFast","angularVelo","iMdt","COLLIDE_EVENT_NAME","Broadphase","useBoundingBoxes","dirty","collisionPairs","needBroadphaseCollision","bodyA","bodyB","intersectionTest","pairs1","pairs2","doBoundingBoxBroadphase","doBoundingSphereBroadphase","Broadphase_collisionPairs_r","boundingRadiusSum2","makePairsUnique","Broadphase_makePairsUnique_temp","Broadphase_makePairsUnique_p1","Broadphase_makePairsUnique_p2","id1","id2","pairIndex","setWorld","boundingSphereCheck","sa","sb","aabbQuery","GridBroadphase","aabbMin","aabbMax","nx","ny","nz","nbins","bins","binLengths","bodies","xstep","ystep","zstep","zmax","ymin","zmin","xmult","ymult","zmult","binsizeX","binsizeY","binsizeZ","binRadius","Nbins","addBoxToBins","xoff0","yoff0","zoff0","xoff1","yoff1","zoff1","xoff","yoff","zoff","idx","si","worldNormalNeedsUpdate","computeWorldNormal","worldNormal","xreset","yreset","zreset","GridBroadphase_collisionPairs_d","xi","yi","zi","binLength","bin","NaiveBroadphase","RaycastResult","rayFromWorld","rayToWorld","hitNormalWorld","hitPointWorld","hasHit","hitFaceIndex","shouldStop","abort","_Shape$types$SPHERE","_Shape$types$PLANE","_Shape$types$BOX","_Shape$types$CYLINDER","_Shape$types$CONVEXPO","_Shape$types$HEIGHTFI","_Shape$types$TRIMESH","RAY_MODES","CLOSEST","ANY","ALL","_intersectSphere","_intersectPlane","_intersectBox","_intersectConvex","_intersectHeightfield","_intersectTrimesh","checkCollisionResponse","skipBackfaces","intersectWorld","updateDirection","getAABB","tmpAABB$1","tmpArray","broadphase","intersectBodies","intersectBody","intersectBody_xi","qi","intersectBody_qi","intersectShape","distanceFromIntersection","intersectMethod","reportedShape","planeToFrom","planeToTo","n_dot_dir","planePointToFrom","dir_scaled_with_t","reportIntersection","localRay","intersectHeightfield_localRay","intersectHeightfield_index","iMinX","iMinY","iMaxX","iMaxY","getIndexOfPosition","getAabbAtIndex","getConvexTrianglePillar","pillarOffset","worldPillarOffset","pillarConvex","intersectConvexOptions","intersectionPoint","Ray_intersectSphere_intersectionPoint","Ray_intersectSphere_normal","intersectConvex_minDistNormal","intersectConvex_normal","intersectConvex_vector","intersectConvex_minDistIntersect","faceList","fromToDistance","Nfaces","faceNormal","intersectTrimesh_normal","intersectTrimesh_triangles","treeTransform","intersectTrimesh_treeTransform","localDirection","intersectTrimesh_localDirection","localFrom","intersectTrimesh_localFrom","localTo","intersectTrimesh_localTo","worldIntersectPoint","intersectTrimesh_worldIntersectPoint","intersectTrimesh_worldNormal","fromToDistanceSquared","tree","rayQuery","trianglesIndex","getVertex","squaredDistance","SAPBroadphase","checkBounds","axisIndex","biPos","bjPos","ri","rj","boundA2","boundB1","insertionSortX","insertionSortY","insertionSortZ","axisList","_addBodyHandler","_removeBodyHandler","sortList","autoDetectAxis","sumX","sumX2","sumY","sumY2","sumZ","sumZ2","centerX","centerY","centerZ","varianceX","varianceY","varianceZ","Utils","defaults","Constraint","collideConnected","wakeUpBodies","equations","eqs","JacobianElement","spatial","rotational","multiplyElement","Equation","minForce","maxForce","eps","jacobianElementA","jacobianElementB","setSpookParams","stiffness","relaxation","timeStep","computeB","GW","computeGW","Gq","computeGq","GiMf","computeGiMf","GA","GB","xj","vj","wi","wj","computeGWlambda","ti","fj","tj","invMassi","invMassj","iMfi","iMfj","invIi_vmult_taui","invIj_vmult_tauj","computeGiMGt","invIi","invIj","addToWlambda","deltalambda","addToWlambda_temp","computeC","ContactEquation","restitution","ni","rixn","ContactEquation_computeB_temp1","rjxn","ContactEquation_computeB_temp2","penetrationVec","ContactEquation_computeB_temp3","ePlusOne","getImpactVelocityAlongNormal","ContactEquation_getImpactVelocityAlongNormal_vi","ContactEquation_getImpactVelocityAlongNormal_vj","ContactEquation_getImpactVelocityAlongNormal_xi","ContactEquation_getImpactVelocityAlongNormal_xj","relVel","ContactEquation_getImpactVelocityAlongNormal_relVel","PointToPointConstraint","pivotA","pivotB","equationX","equationY","equationZ","ConeEquation","axisA","axisB","nj","nixnj","tmpVec1$2","njxni","tmpVec2$2","RotationalEquation","maxAngle","tmpVec1$1","tmpVec2$1","ConeTwistConstraint","coneEquation","twistEquation","twistAngle","twist","DistanceConstraint","eq","distanceEquation","halfDist","LockConstraint","halfWay","xA","xB","yA","yB","zA","zB","rotationalEquation1","rotationalEquation2","r3","rotationalEquation3","motorEquation","LockConstraint_update_tmpVec1","LockConstraint_update_tmpVec2","RotationalMotorEquation","targetVelocity","HingeConstraint","rotational1","rotational2","motor","enableMotor","disableMotor","setMotorSpeed","speed","setMotorMaxForce","worldAxisA","HingeConstraint_update_tmpVec1","worldAxisB","HingeConstraint_update_tmpVec2","FrictionEquation","slipForce","rixt","FrictionEquation_computeB_temp1","rjxt","FrictionEquation_computeB_temp2","ContactMaterial","friction","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","Spring","restLength","damping","localAnchorA","localAnchorB","worldAnchorA","setWorldAnchorA","worldAnchorB","setWorldAnchorB","getWorldAnchorA","getWorldAnchorB","applyForce_r","r_unit","applyForce_r_unit","applyForce_u","applyForce_f","applyForce_tmp","applyForce_worldAnchorA","applyForce_worldAnchorB","applyForce_ri","applyForce_rj","ri_x_f","applyForce_ri_x_f","rj_x_f","applyForce_rj_x_f","rlen","WheelInfo","chassisConnectionPointLocal","chassisConnectionPointWorld","directionLocal","directionWorld","axleLocal","axleWorld","suspensionRestLength","suspensionMaxLength","suspensionStiffness","dampingCompression","dampingRelaxation","frictionSlip","forwardAcceleration","sideAcceleration","steering","deltaRotation","rollInfluence","maxSuspensionForce","isFrontWheel","clippedInvContactDotSuspension","suspensionRelativeVelocity","suspensionForce","slipInfo","skidInfo","suspensionLength","maxSuspensionTravel","useCustomSlidingRotationalSpeed","customSlidingRotationalSpeed","sliding","engineForce","brake","sideImpulse","forwardImpulse","raycastResult","worldTransform","isInContact","updateWheel","chassis","relpos","chassis_velocity_at_contactPoint","projVel","inv","RaycastVehicle","chassisBody","wheelInfos","indexRightAxis","indexForwardAxis","indexUpAxis","constraints","preStepCallback","currentVehicleSpeedKmHour","numWheelsOnGround","addWheel","setSteeringValue","wheelIndex","wheel","applyEngineForce","setBrake","addToWorld","addBody","that","updateVehicle","getVehicleAxisWorld","numWheels","updateWheelTransform","forwardWorld","castRay","updateSuspension","updateFriction","hitNormalWorldScaledWithProj","fwd","vel","proj","proj2","chassisMass","w_it","susp_length","current_length","length_diff","projected_rel_vel","susp_damping","removeFromWorld","removeBody","rayvector","castRay_rayvector","castRay_target","updateWheelTransformWorld","raylen","oldState","rayTest","groundObject","hitDistance","minSuspensionLength","maxSuspensionLength","tmpVec4","tmpVec5","tmpVec6","steeringOrn","rotatingOrn","getWheelTransformWorld","surfNormalWS_scaled_proj","updateFriction_surfNormalWS_scaled_proj","forwardWS","updateFriction_forwardWS","axle","updateFriction_axle","axlei","wheelTrans","directions","surfNormalWS","resolveSingleBilateral","sideFrictionStiffness2","sideFactor","fwdFactor","rollingFriction","defaultRollingFrictionImpulse","maxImpulse","calcRollingFriction","maximp","maximpSide","maximpSquared","impulseSquared","rel_pos","rel_pos2","sideImp","calcRollingFriction_vel1","calcRollingFriction_vel2","calcRollingFriction_vel","body0","body1","frictionPosWorld","frictionDirectionWorld","j1","contactPosWorld","vel1","vel2","vrel","denom0","computeImpulseDenominator","denom1","jacDiagABInv","computeImpulseDenominator_r0","computeImpulseDenominator_c0","computeImpulseDenominator_vec","computeImpulseDenominator_m","r0","resolveSingleBilateral_vel1","resolveSingleBilateral_vel2","resolveSingleBilateral_vel","pos1","body2","pos2","normalLenSqr","rel_vel","contactDamping","massTerm","RigidVehicle","wheelBodies","coordinateSystem","wheelAxes","wheelForces","wheelBody","worldPosition","hingeConstraint","motorTargetVelocity","setWheelForce","applyWheelForce","bodyTorque","addConstraint","removeConstraint","getWheelSpeed","worldAxis","SPHSystem","particles","smoothingRadius","speedOfSound","viscosity","pressures","densities","neighbors","particle","getNeighbors","R2","SPHSystem_getNeighbors_dist","SPHSystem_update_dist","numNeighbors","a_pressure","SPHSystem_update_a_pressure","a_visc","SPHSystem_update_a_visc","gradW","SPHSystem_update_gradW","r_vec","SPHSystem_update_r_vec","SPHSystem_update_u","Pij","nabla","neighbor","gradw","nablaw","rVec","resultVec","Cylinder","numSegments","bottomface","topface","thetaN","Particle","tempNormal","Heightfield","maxValue","minValue","updateMinValue","updateMaxValue","cacheEnabled","_cachedPillars","setHeightValueAtIndex","clearCachedConvexTrianglePillar","getRectMinMax","getTriangleAt","edgeClamp","getHeightAt_idx","lowerDist2","upperDist2","upper","getTriangle","getNormalAt","getNormalAt_a","getNormalAt_b","getNormalAt_c","getNormalAt_e0","getNormalAt_e1","getHeightAt","getHeightAt_a","getHeightAt_b","getHeightAt_c","barycentricWeights","getHeightAt_weights","getCacheConvexTrianglePillarKey","getUpperTriangle","getCachedConvexTrianglePillar","setCachedConvexTrianglePillar","convex","offsetResult","setHeightsFromImage","createElement","OctreeNode","insert","elementData","nodeData","maxDepth","subdivided","halfDiagonal","tmpAABB","removeEmptyNodes","Octree","Trimesh","updateEdges","updateNormals","updateTree","triangleAABB","i3","_getUnscaledVertex","getTrianglesInAABB","unscaledAABB","isx","isy","isz","setScale","wasUniform","isUniform","computeNormals_n","getEdgeVertex","edgeIndex","firstOrSecond","vertexStore","vertexIndex","getEdgeVector","vectorStore","getEdgeVector_va","getEdgeVector_vb","out","getWorldVertex","getTriangleVertices","cli_aabb","computeLocalAABB_worldVert","calculateWorldAABB_frame","calculateWorldAABB_aabb","createTorus","Solver","addEquation","removeEquation","removeAllEquations","GSSolver","iterations","tolerance","maxIter","tolSquared","Neq","Nbodies","invC","deltalambdaTot","GWlambda","lambdaj","invCs","GSSolver_solve_invCs","Bs","GSSolver_solve_Bs","GSSolver_solve_lambda","invDt","SplitSolver","subsolver","nodePool","createNode","visited","SplitSolver_solve_nodes","SplitSolver_solve_eqs","dummyWorld","SplitSolver_solve_dummyWorld","getUnvisitedNode","bfs","visitFunc","Neqs","sortById","Nnodes","bds","Pool","release","Nargs","constructObject","resize","Vec3Pool","COLLISION_TYPES","sphereSphere","spherePlane","boxBox","sphereBox","planeBox","convexConvex","sphereConvex","planeConvex","boxConvex","sphereHeightfield","boxHeightfield","convexHeightfield","sphereParticle","planeParticle","boxParticle","convexParticle","cylinderCylinder","sphereCylinder","planeCylinder","boxCylinder","convexCylinder","heightfieldCylinder","particleCylinder","sphereTrimesh","planeTrimesh","Narrowphase","contactPointPool","frictionEquationPool","frictionResult","v3pool","currentContactMaterial","defaultContactMaterial","enableFrictionReduction","createContactEquation","sj","overrideShapeA","overrideShapeB","cm","matA","matB","createFrictionEquationsFromContact","contactEquation","outArray","shapeA","shapeB","mug","frictionGravity","gravity","reducedMass","pool","createFrictionFromAverage","numContacts","f1","f2","averageNormal","averageContactPointA","averageContactPointB","invNumContacts","getContacts","oldcontacts","frictionPool","tmpQuat1","qj","tmpQuat2","tmpVec1","tmpVec2","bodyContactMaterial","getContactMaterial","justTest","shapeContactMaterial","resolverIndex","resolver","retval","shapeOverlapKeeper","bodyOverlapKeeper","rsi","rsj","contactEq","point_on_plane_to_sphere","plane_to_sphere_ortho","sphereBox_sides","box_to_sphere","R","side_ns","sphereBox_side_ns","side_ns1","sphereBox_side_ns1","side_ns2","sphereBox_side_ns2","side_h","side_penetrations","side_dot1","side_dot2","side_distance","nsides","ns","sphereBox_ns","ns1","sphereBox_ns1","ns2","sphereBox_ns2","h1","h2","dot1","dot2","sphere_to_corner","sphereBox_sphere_to_corner","edgeTangent","edgeCenter","orthogonal","Nsides","orthonorm","tdist","ndist","sepAxis","convexConvex_sepAxis","convexConvex_q","convex_to_sphere","worldCorner","sphereConvex_worldCorner","sphereConvex_sphereToCorner","nfaces","sphereConvex_worldNormal","sphereConvex_worldPoint","worldSpherePointClosestToPlane","sphereConvex_worldSpherePointClosestToPlane","sphereConvex_penetrationVec","penetration","worldPointToSphere","sphereConvex_sphereToWorldPoint","faceVerts","Nverts","worldVertex","pointInPolygon","penetrationVec2","penetrationSpherePoint","Nfaceverts","sphereConvex_edge","edgeUnit","sphereConvex_edgeUnit","v1_to_xi","xi_to_p","planeShape","convexShape","planePosition","convexPosition","planeQuat","convexQuat","planeBody","convexBody","planeConvex_v","planeConvex_normal","planeConvex_relpos","projected","planeConvex_projected","sphereShape","hfShape","spherePos","hfPos","sphereQuat","hfQuat","sphereBody","hfBody","sphereHeightfield_tmp2","localSpherePos","sphereHeightfield_tmp1","minMax","numContactsBefore","intersecting","convexPos","convexHeightfield_tmp2","convexHeightfield_faceList","localConvexPos","convexHeightfield_tmp1","particleSphere_normal","particlePlane_normal","particlePlane_relpos","particlePlane_projected","penetratedFaceIndex","penetratedFaceNormal","convexParticle_penetratedFaceNormal","worldPenetrationVec","convexParticle_worldPenetrationVec","minPenetration","local","convexParticle_local","cqj","convexParticle_vertexToParticle","trimeshShape","trimeshPos","trimeshQuat","trimeshBody","edgeVertexA","sphereTrimesh_edgeVertexA","edgeVertexB","sphereTrimesh_edgeVertexB","edgeVector","sphereTrimesh_edgeVector","edgeVectorUnit","sphereTrimesh_edgeVectorUnit","sphereTrimesh_localSpherePos","sphereTrimesh_tmp","localSphereAABB","sphereTrimesh_localSphereAABB","sphereTrimesh_v2","sphereTrimesh_relpos","sphereTrimesh_triangles","sphereRadius","sphereTrimesh_v","radiusSquared","positionAlongEdgeB","positionAlongEdgeA","sphereTrimesh_va","sphereTrimesh_vb","sphereTrimesh_vc","sphereTrimesh_normal","planePos","planeTrimesh_normal","planeTrimesh_relpos","planeTrimesh_projected","pointInPolygon_edge","pointInPolygon_edge_x_normal","pointInPolygon_vtp","edge_x_normal","vertex_to_p","OverlapKeeper","previous","getKey","tick","getDiff","additions","removals","al","bl","unpackAndPush","TupleDictionary","World","contacts","frictionEquations","quatNormalizeSkip","stepnumber","default_dt","nextId","hasActiveBodies","solver","narrowphase","collisionMatrix","collisionMatrixPrevious","contactmaterials","contactMaterialTable","defaultMaterial","doProfiling","profile","makeContactConstraints","accumulator","subsystems","addBodyEvent","removeBodyEvent","idToBodyMap","collisionMatrixTick","raycastClosest","raycastAll","tmpRay","raycastAny","getBodyById","getShapeById","addContactMaterial","cmat","removeContactMaterial","fixedStep","maxSubSteps","lastCallTime","timeSinceLastCalled","internalStep","substeps","World_step_p1","World_step_p2","profilingStart","World_step_frictionEquationPool","gx","gy","gz","Nsubsystems","Nconstraints","World_step_oldContacts","NoldContacts","NoldFrictionEquations","ncontacts","speedSquaredB","speedLimitSquaredB","speedSquaredA","speedLimitSquaredA","World_step_collideEvent","contact","emitContactEvents","ld","av","World_step_preStepEvent","clearForces","World_step_postStepEvent","hasBeginContact","hasEndContact","beginContactEvent","endContactEvent","hasBeginShapeContact","hasEndShapeContact","beginShapeContactEvent","endShapeContactEvent","globalThis","nowOffset","timing","navigationStart","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","valueOf","_changeEvent","_startEvent","_endEvent","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","NONE","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","MapControls","_OrbitControls","_cannonEs","CannonDebugger","_temp","onInit","_meshes","_material","_tempVec0","_tempVec1","_tempVec2","_tempQuat0","_sphereGeometry","_boxGeometry","_planeGeometry","createConvexPolyhedronGeometry","createTrimeshGeometry","createHeightfieldGeometry","flatMap","createMesh","scaleMesh","typeMatch","updateMesh","didCreateNewMesh","meshes","shapeWorldPosition","shapeWorldQuaternion","meshIndex","Function","streamer","character","lookAhead","peek","eof","fail","msg","KEYWORDS","OPERATORS","PUNCTUATIONS","WHITESPACE","NON_STARTING_IDENTIFIERS","isKeyword","keywords","isDigit","isIDStart","isID","isOpChar","isPunc","isWhitespace","readWhile","predicate","str","concatenated","readNumber","hasDot","number","readIdent","isTemplateExpression","readEscaped","expressions","quasis","escaped","readString","skipComment","readNext","lexer","token","isPunc$1","isKeyword$1","keyword","isOperator","operator","skipPunc","skipKeyword","unexpected","PRECEDENCE","FALSE","delimited","separator","first","parseConstName","parseCall","func","args","parseExpression","parseBool","maybeCall","expression","parseLambda","constants","parseIf","condition","conditional","else","parseProg","prog","parseTemplate","_input$value","parseAtom","maybeBinary","precedence","newPrecedence","makeTopLevel","currentLines","newLines","makeTopLevelFunc","standardLib","checkScope","kepler","lookup","div","applyOperator","makeFunction","env","evaluateFn","names","_len","_key","makeTemplateString","evaluated","run","script","tokenized","ast","_default","default","THREE","_interopRequireWildcard","CANNON","_cannonEsDebugger","_interopRequireDefault","__esModule","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","movementPlane","clickMarker","cubeMesh","jointBody","jointConstraint","cubeBody","isDragging","initThree","controls","initCannon","cannonDebugger","animate","innerWidth","innerHeight","appendChild","ambientLight","directionalLight","floorGeometry","floorMaterial","markerGeometry","markerMaterial","cubeGeometry","cubeMaterial","planeGeometry","onWindowResize","floorShape0","floorBody0","floorShape10","floorBody10","floorShape1","floorBody1","floorShape12","floorBody12","floorShape21","floorBody21","floorShape22","floorBody22","cubeShape","jointShape","hitPoint","getHitPoint","showClickMarker","moveClickMarker","moveMovementPlane","addJointConstraint","moveJoint","hideClickMarker","removeJointConstraint","mouse","hits","constrainedBody","antiRotation","pivot","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","deps","some"],"mappings":"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","file":"Dice.e31bb0bc.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '150';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, x,\n\t\t\t0, 1, y,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$d.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$d );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$d.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$d = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nconst _vector$c = new Vector3();\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\tcolor.convertSRGBToLinear();\n\n\t_vector$c.set( color.r, color.g, color.b ).applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n\treturn color.setRGB( _vector$c.x, _vector$c.y, _vector$c.z );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t_vector$c.set( color.r, color.g, color.b ).applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 );\n\n\treturn color.setRGB( _vector$c.x, _vector$c.y, _vector$c.z ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: false,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn clamp( _color.r * 255, 0, 255 ) << 16 ^ clamp( _color.g * 255, 0, 255 ) << 8 ^ clamp( _color.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${( r * 255 ) | 0},${( g * 255 ) | 0},${( b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tcopyColorsArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t// @deprecated since r144\n\n\tmerge() {\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tthis.boneTransform( index, target );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\t_ray$2.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$3.containsPoint( _ray$2.origin ) === false ) {\n\n\t\t\tif ( _ray$2.intersectSphere( _sphere$3, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$2.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, uv, uv2, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputEncoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, 1, 0 );\n\t\tcameraPX.lookAt( 1, 0, 0 );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, 1, 0 );\n\t\tcameraNX.lookAt( - 1, 0, 0 );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\tcameraPY.lookAt( 0, 1, 0 );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, 1 );\n\t\tcameraNY.lookAt( 0, - 1, 0 );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\tcameraPZ.lookAt( 0, 0, 1 );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\t\\n\\t\\tvec2 lodFudge = pow( 1.95, lod ) / fullSize;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec2 fullSize = vec2( textureSize( sampler, 0 ) );\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tuseLegacyLights: renderer.useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = 33984 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === 3553 || ( textureTarget >= 34069 && textureTarget <= 34074 ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return 6403;\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst planes = new Set();\n\t\tconst planesLastChangedTimes = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPlanes = function () {\n\n\t\t\treturn planes;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame.detectedPlanes } );\n\n\t\t\t\tlet planesToRemove = null;\n\n\t\t\t\tfor ( const plane of planes ) {\n\n\t\t\t\t\tif ( ! frame.detectedPlanes.has( plane ) ) {\n\n\t\t\t\t\t\tif ( planesToRemove === null ) {\n\n\t\t\t\t\t\t\tplanesToRemove = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplanesToRemove.push( plane );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( planesToRemove !== null ) {\n\n\t\t\t\t\tfor ( const plane of planesToRemove ) {\n\n\t\t\t\t\t\tplanes.delete( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.delete( plane );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeremoved', data: plane } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const plane of frame.detectedPlanes ) {\n\n\t\t\t\t\tif ( ! planes.has( plane ) ) {\n\n\t\t\t\t\t\tplanes.add( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.set( plane, frame.lastChangedTime );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeadded', data: plane } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst lastKnownTime = planesLastChangedTimes.get( plane );\n\n\t\t\t\t\t\tif ( plane.lastChangedTime > lastKnownTime ) {\n\n\t\t\t\t\t\t\tplanesLastChangedTimes.set( plane, plane.lastChangedTime );\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planechanged', data: plane } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( 35345, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.useLegacyLights = true;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle === true ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\t//\n\n\t\tconst drawRange = geometry.drawRange;\n\t\tconst position = geometry.attributes.position;\n\n\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\tif ( group !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t}\n\n\t\tconst drawCount = drawEnd - drawStart;\n\n\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t//\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tfunction prepare( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1024, 1024, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\t// @deprecated since r150\n\n\tphysicallyCorrectLights: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\t\treturn ! this.useLegacyLights;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\t\tthis.useLegacyLights = ! value;\n\n\t\t}\n\n\t}\n\n} );\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tget autoUpdate() {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\n// r144\n\nclass BoxBufferGeometry extends BoxGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\n// r144\n\nclass CapsuleBufferGeometry extends CapsuleGeometry {\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\n// r144\n\nclass CircleBufferGeometry extends CircleGeometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ConeBufferGeometry extends ConeGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass CylinderBufferGeometry extends CylinderGeometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\n// r144\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass LatheBufferGeometry extends LatheGeometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\n// r144\n\nclass OctahedronBufferGeometry extends OctahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass PlaneBufferGeometry extends PlaneGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\n// r144\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass RingBufferGeometry extends RingGeometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ShapeBufferGeometry extends ShapeGeometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\n// r144\n\nclass SphereBufferGeometry extends SphereGeometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass TorusBufferGeometry extends TorusGeometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\n// r144\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\n// r144\n\nclass TubeBufferGeometry extends TubeGeometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","/**\n * Records what objects are colliding with each other\n */\nclass ObjectCollisionMatrix {\n  /**\n   * The matrix storage.\n   */\n\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    this.matrix = {};\n  }\n  /**\n   * get\n   */\n\n\n  get(bi, bj) {\n    let {\n      id: i\n    } = bi;\n    let {\n      id: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return `${i}-${j}` in this.matrix;\n  }\n  /**\n   * set\n   */\n\n\n  set(bi, bj, value) {\n    let {\n      id: i\n    } = bi;\n    let {\n      id: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    if (value) {\n      this.matrix[`${i}-${j}`] = true;\n    } else {\n      delete this.matrix[`${i}-${j}`];\n    }\n  }\n  /**\n   * Empty the matrix\n   */\n\n\n  reset() {\n    this.matrix = {};\n  }\n  /**\n   * Set max number of objects\n   */\n\n\n  setNumObjects(n) {}\n\n}\n\n/**\n * A 3x3 matrix.\n * Authored by {@link http://github.com/schteppe/ schteppe}\n */\nclass Mat3 {\n  /**\n   * A vector of length 9, containing all matrix elements.\n   */\n\n  /**\n   * @param elements A vector of length 9, containing all matrix elements.\n   */\n  constructor(elements) {\n    if (elements === void 0) {\n      elements = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.elements = elements;\n  }\n  /**\n   * Sets the matrix to identity\n   * @todo Should perhaps be renamed to `setIdentity()` to be more clear.\n   * @todo Create another function that immediately creates an identity matrix eg. `eye()`\n   */\n\n\n  identity() {\n    const e = this.elements;\n    e[0] = 1;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 1;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 1;\n  }\n  /**\n   * Set all elements to zero\n   */\n\n\n  setZero() {\n    const e = this.elements;\n    e[0] = 0;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 0;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 0;\n  }\n  /**\n   * Sets the matrix diagonal elements from a Vec3\n   */\n\n\n  setTrace(vector) {\n    const e = this.elements;\n    e[0] = vector.x;\n    e[4] = vector.y;\n    e[8] = vector.z;\n  }\n  /**\n   * Gets the matrix diagonal elements\n   */\n\n\n  getTrace(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const e = this.elements;\n    target.x = e[0];\n    target.y = e[4];\n    target.z = e[8];\n    return target;\n  }\n  /**\n   * Matrix-Vector multiplication\n   * @param v The vector to multiply with\n   * @param target Optional, target to save the result in.\n   */\n\n\n  vmult(v, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const e = this.elements;\n    const x = v.x;\n    const y = v.y;\n    const z = v.z;\n    target.x = e[0] * x + e[1] * y + e[2] * z;\n    target.y = e[3] * x + e[4] * y + e[5] * z;\n    target.z = e[6] * x + e[7] * y + e[8] * z;\n    return target;\n  }\n  /**\n   * Matrix-scalar multiplication\n   */\n\n\n  smult(s) {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i] *= s;\n    }\n  }\n  /**\n   * Matrix multiplication\n   * @param matrix Matrix to multiply with from left side.\n   */\n\n\n  mmult(matrix, target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const A = this.elements;\n    const B = matrix.elements;\n    const T = target.elements;\n    const a11 = A[0],\n          a12 = A[1],\n          a13 = A[2],\n          a21 = A[3],\n          a22 = A[4],\n          a23 = A[5],\n          a31 = A[6],\n          a32 = A[7],\n          a33 = A[8];\n    const b11 = B[0],\n          b12 = B[1],\n          b13 = B[2],\n          b21 = B[3],\n          b22 = B[4],\n          b23 = B[5],\n          b31 = B[6],\n          b32 = B[7],\n          b33 = B[8];\n    T[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    T[1] = a11 * b12 + a12 * b22 + a13 * b32;\n    T[2] = a11 * b13 + a12 * b23 + a13 * b33;\n    T[3] = a21 * b11 + a22 * b21 + a23 * b31;\n    T[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    T[5] = a21 * b13 + a22 * b23 + a23 * b33;\n    T[6] = a31 * b11 + a32 * b21 + a33 * b31;\n    T[7] = a31 * b12 + a32 * b22 + a33 * b32;\n    T[8] = a31 * b13 + a32 * b23 + a33 * b33;\n    return target;\n  }\n  /**\n   * Scale each column of the matrix\n   */\n\n\n  scale(vector, target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const e = this.elements;\n    const t = target.elements;\n\n    for (let i = 0; i !== 3; i++) {\n      t[3 * i + 0] = vector.x * e[3 * i + 0];\n      t[3 * i + 1] = vector.y * e[3 * i + 1];\n      t[3 * i + 2] = vector.z * e[3 * i + 2];\n    }\n\n    return target;\n  }\n  /**\n   * Solve Ax=b\n   * @param b The right hand side\n   * @param target Optional. Target vector to save in.\n   * @return The solution x\n   * @todo should reuse arrays\n   */\n\n\n  solve(b, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    // Construct equations\n    const nr = 3; // num rows\n\n    const nc = 4; // num cols\n\n    const eqns = [];\n    let i;\n    let j;\n\n    for (i = 0; i < nr * nc; i++) {\n      eqns.push(0);\n    }\n\n    for (i = 0; i < 3; i++) {\n      for (j = 0; j < 3; j++) {\n        eqns[i + nc * j] = this.elements[i + 3 * j];\n      }\n    }\n\n    eqns[3 + 4 * 0] = b.x;\n    eqns[3 + 4 * 1] = b.y;\n    eqns[3 + 4 * 2] = b.z; // Compute right upper triangular version of the matrix - Gauss elimination\n\n    let n = 3;\n    const k = n;\n    let np;\n    const kp = 4; // num rows\n\n    let p;\n\n    do {\n      i = k - n;\n\n      if (eqns[i + nc * i] === 0) {\n        // the pivot is null, swap lines\n        for (j = i + 1; j < k; j++) {\n          if (eqns[i + nc * j] !== 0) {\n            np = kp;\n\n            do {\n              // do ligne( i ) = ligne( i ) + ligne( k )\n              p = kp - np;\n              eqns[p + nc * i] += eqns[p + nc * j];\n            } while (--np);\n\n            break;\n          }\n        }\n      }\n\n      if (eqns[i + nc * i] !== 0) {\n        for (j = i + 1; j < k; j++) {\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n          np = kp;\n\n          do {\n            // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\n            p = kp - np;\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n          } while (--np);\n        }\n      }\n    } while (--n); // Get the solution\n\n\n    target.z = eqns[2 * nc + 3] / eqns[2 * nc + 2];\n    target.y = (eqns[1 * nc + 3] - eqns[1 * nc + 2] * target.z) / eqns[1 * nc + 1];\n    target.x = (eqns[0 * nc + 3] - eqns[0 * nc + 2] * target.z - eqns[0 * nc + 1] * target.y) / eqns[0 * nc + 0];\n\n    if (isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x === Infinity || target.y === Infinity || target.z === Infinity) {\n      throw `Could not solve equation! Got x=[${target.toString()}], b=[${b.toString()}], A=[${this.toString()}]`;\n    }\n\n    return target;\n  }\n  /**\n   * Get an element in the matrix by index. Index starts at 0, not 1!!!\n   * @param value If provided, the matrix element will be set to this value.\n   */\n\n\n  e(row, column, value) {\n    if (value === undefined) {\n      return this.elements[column + 3 * row];\n    } else {\n      // Set value\n      this.elements[column + 3 * row] = value;\n    }\n  }\n  /**\n   * Copy another matrix into this matrix object.\n   */\n\n\n  copy(matrix) {\n    for (let i = 0; i < matrix.elements.length; i++) {\n      this.elements[i] = matrix.elements[i];\n    }\n\n    return this;\n  }\n  /**\n   * Returns a string representation of the matrix.\n   */\n\n\n  toString() {\n    let r = '';\n    const sep = ',';\n\n    for (let i = 0; i < 9; i++) {\n      r += this.elements[i] + sep;\n    }\n\n    return r;\n  }\n  /**\n   * reverse the matrix\n   * @param target Target matrix to save in.\n   * @return The solution x\n   */\n\n\n  reverse(target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    // Construct equations\n    const nr = 3; // num rows\n\n    const nc = 6; // num cols\n\n    const eqns = reverse_eqns;\n    let i;\n    let j;\n\n    for (i = 0; i < 3; i++) {\n      for (j = 0; j < 3; j++) {\n        eqns[i + nc * j] = this.elements[i + 3 * j];\n      }\n    }\n\n    eqns[3 + 6 * 0] = 1;\n    eqns[3 + 6 * 1] = 0;\n    eqns[3 + 6 * 2] = 0;\n    eqns[4 + 6 * 0] = 0;\n    eqns[4 + 6 * 1] = 1;\n    eqns[4 + 6 * 2] = 0;\n    eqns[5 + 6 * 0] = 0;\n    eqns[5 + 6 * 1] = 0;\n    eqns[5 + 6 * 2] = 1; // Compute right upper triangular version of the matrix - Gauss elimination\n\n    let n = 3;\n    const k = n;\n    let np;\n    const kp = nc; // num rows\n\n    let p;\n\n    do {\n      i = k - n;\n\n      if (eqns[i + nc * i] === 0) {\n        // the pivot is null, swap lines\n        for (j = i + 1; j < k; j++) {\n          if (eqns[i + nc * j] !== 0) {\n            np = kp;\n\n            do {\n              // do line( i ) = line( i ) + line( k )\n              p = kp - np;\n              eqns[p + nc * i] += eqns[p + nc * j];\n            } while (--np);\n\n            break;\n          }\n        }\n      }\n\n      if (eqns[i + nc * i] !== 0) {\n        for (j = i + 1; j < k; j++) {\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n          np = kp;\n\n          do {\n            // do line( k ) = line( k ) - multiplier * line( i )\n            p = kp - np;\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n          } while (--np);\n        }\n      }\n    } while (--n); // eliminate the upper left triangle of the matrix\n\n\n    i = 2;\n\n    do {\n      j = i - 1;\n\n      do {\n        const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n        np = nc;\n\n        do {\n          p = nc - np;\n          eqns[p + nc * j] = eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n        } while (--np);\n      } while (j--);\n    } while (--i); // operations on the diagonal\n\n\n    i = 2;\n\n    do {\n      const multiplier = 1 / eqns[i + nc * i];\n      np = nc;\n\n      do {\n        p = nc - np;\n        eqns[p + nc * i] = eqns[p + nc * i] * multiplier;\n      } while (--np);\n    } while (i--);\n\n    i = 2;\n\n    do {\n      j = 2;\n\n      do {\n        p = eqns[nr + j + nc * i];\n\n        if (isNaN(p) || p === Infinity) {\n          throw `Could not reverse! A=[${this.toString()}]`;\n        }\n\n        target.e(i, j, p);\n      } while (j--);\n    } while (i--);\n\n    return target;\n  }\n  /**\n   * Set the matrix from a quaterion\n   */\n\n\n  setRotationFromQuaternion(q) {\n    const x = q.x;\n    const y = q.y;\n    const z = q.z;\n    const w = q.w;\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const e = this.elements;\n    e[3 * 0 + 0] = 1 - (yy + zz);\n    e[3 * 0 + 1] = xy - wz;\n    e[3 * 0 + 2] = xz + wy;\n    e[3 * 1 + 0] = xy + wz;\n    e[3 * 1 + 1] = 1 - (xx + zz);\n    e[3 * 1 + 2] = yz - wx;\n    e[3 * 2 + 0] = xz - wy;\n    e[3 * 2 + 1] = yz + wx;\n    e[3 * 2 + 2] = 1 - (xx + yy);\n    return this;\n  }\n  /**\n   * Transpose the matrix\n   * @param target Optional. Where to store the result.\n   * @return The target Mat3, or a new Mat3 if target was omitted.\n   */\n\n\n  transpose(target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const M = this.elements;\n    const T = target.elements;\n    let tmp; //Set diagonals\n\n    T[0] = M[0];\n    T[4] = M[4];\n    T[8] = M[8];\n    tmp = M[1];\n    T[1] = M[3];\n    T[3] = tmp;\n    tmp = M[2];\n    T[2] = M[6];\n    T[6] = tmp;\n    tmp = M[5];\n    T[5] = M[7];\n    T[7] = tmp;\n    return target;\n  }\n\n}\nconst reverse_eqns = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n/**\n * 3-dimensional vector\n * @example\n *     const v = new Vec3(1, 2, 3)\n *     console.log('x=' + v.x) // x=1\n */\n\nclass Vec3 {\n  constructor(x, y, z) {\n    if (x === void 0) {\n      x = 0.0;\n    }\n\n    if (y === void 0) {\n      y = 0.0;\n    }\n\n    if (z === void 0) {\n      z = 0.0;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  /**\n   * Vector cross product\n   * @param target Optional target to save in.\n   */\n\n\n  cross(vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const vx = vector.x;\n    const vy = vector.y;\n    const vz = vector.z;\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = y * vz - z * vy;\n    target.y = z * vx - x * vz;\n    target.z = x * vy - y * vx;\n    return target;\n  }\n  /**\n   * Set the vectors' 3 elements\n   */\n\n\n  set(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  /**\n   * Set all components of the vector to zero.\n   */\n\n\n  setZero() {\n    this.x = this.y = this.z = 0;\n  }\n  /**\n   * Vector addition\n   */\n\n\n  vadd(vector, target) {\n    if (target) {\n      target.x = vector.x + this.x;\n      target.y = vector.y + this.y;\n      target.z = vector.z + this.z;\n    } else {\n      return new Vec3(this.x + vector.x, this.y + vector.y, this.z + vector.z);\n    }\n  }\n  /**\n   * Vector subtraction\n   * @param target Optional target to save in.\n   */\n\n\n  vsub(vector, target) {\n    if (target) {\n      target.x = this.x - vector.x;\n      target.y = this.y - vector.y;\n      target.z = this.z - vector.z;\n    } else {\n      return new Vec3(this.x - vector.x, this.y - vector.y, this.z - vector.z);\n    }\n  }\n  /**\n   * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\n   *\n   * See {@link https://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf Umeå University Lecture}\n   */\n\n\n  crossmat() {\n    return new Mat3([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0]);\n  }\n  /**\n   * Normalize the vector. Note that this changes the values in the vector.\n    * @return Returns the norm of the vector\n   */\n\n\n  normalize() {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const n = Math.sqrt(x * x + y * y + z * z);\n\n    if (n > 0.0) {\n      const invN = 1 / n;\n      this.x *= invN;\n      this.y *= invN;\n      this.z *= invN;\n    } else {\n      // Make something up\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return n;\n  }\n  /**\n   * Get the version of this vector that is of length 1.\n   * @param target Optional target to save in\n   * @return Returns the unit vector\n   */\n\n\n  unit(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    let ninv = Math.sqrt(x * x + y * y + z * z);\n\n    if (ninv > 0.0) {\n      ninv = 1.0 / ninv;\n      target.x = x * ninv;\n      target.y = y * ninv;\n      target.z = z * ninv;\n    } else {\n      target.x = 1;\n      target.y = 0;\n      target.z = 0;\n    }\n\n    return target;\n  }\n  /**\n   * Get the length of the vector\n   */\n\n\n  length() {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Get the squared length of the vector.\n   */\n\n\n  lengthSquared() {\n    return this.dot(this);\n  }\n  /**\n   * Get distance from this point to another point\n   */\n\n\n  distanceTo(p) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const px = p.x;\n    const py = p.y;\n    const pz = p.z;\n    return Math.sqrt((px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z));\n  }\n  /**\n   * Get squared distance from this point to another point\n   */\n\n\n  distanceSquared(p) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const px = p.x;\n    const py = p.y;\n    const pz = p.z;\n    return (px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z);\n  }\n  /**\n   * Multiply all the components of the vector with a scalar.\n   * @param target The vector to save the result in.\n   */\n\n\n  scale(scalar, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = scalar * x;\n    target.y = scalar * y;\n    target.z = scalar * z;\n    return target;\n  }\n  /**\n   * Multiply the vector with an other vector, component-wise.\n   * @param target The vector to save the result in.\n   */\n\n\n  vmul(vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = vector.x * this.x;\n    target.y = vector.y * this.y;\n    target.z = vector.z * this.z;\n    return target;\n  }\n  /**\n   * Scale a vector and add it to this vector. Save the result in \"target\". (target = this + vector * scalar)\n   * @param target The vector to save the result in.\n   */\n\n\n  addScaledVector(scalar, vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = this.x + scalar * vector.x;\n    target.y = this.y + scalar * vector.y;\n    target.z = this.z + scalar * vector.z;\n    return target;\n  }\n  /**\n   * Calculate dot product\n   * @param vector\n   */\n\n\n  dot(vector) {\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z;\n  }\n\n  isZero() {\n    return this.x === 0 && this.y === 0 && this.z === 0;\n  }\n  /**\n   * Make the vector point in the opposite direction.\n   * @param target Optional target to save in\n   */\n\n\n  negate(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    return target;\n  }\n  /**\n   * Compute two artificial tangents to the vector\n   * @param t1 Vector object to save the first tangent in\n   * @param t2 Vector object to save the second tangent in\n   */\n\n\n  tangents(t1, t2) {\n    const norm = this.length();\n\n    if (norm > 0.0) {\n      const n = Vec3_tangents_n;\n      const inorm = 1 / norm;\n      n.set(this.x * inorm, this.y * inorm, this.z * inorm);\n      const randVec = Vec3_tangents_randVec;\n\n      if (Math.abs(n.x) < 0.9) {\n        randVec.set(1, 0, 0);\n        n.cross(randVec, t1);\n      } else {\n        randVec.set(0, 1, 0);\n        n.cross(randVec, t1);\n      }\n\n      n.cross(t1, t2);\n    } else {\n      // The normal length is zero, make something up\n      t1.set(1, 0, 0);\n      t2.set(0, 1, 0);\n    }\n  }\n  /**\n   * Converts to a more readable format\n   */\n\n\n  toString() {\n    return `${this.x},${this.y},${this.z}`;\n  }\n  /**\n   * Converts to an array\n   */\n\n\n  toArray() {\n    return [this.x, this.y, this.z];\n  }\n  /**\n   * Copies value of source to this vector.\n   */\n\n\n  copy(vector) {\n    this.x = vector.x;\n    this.y = vector.y;\n    this.z = vector.z;\n    return this;\n  }\n  /**\n   * Do a linear interpolation between two vectors\n   * @param t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\n   */\n\n\n  lerp(vector, t, target) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = x + (vector.x - x) * t;\n    target.y = y + (vector.y - y) * t;\n    target.z = z + (vector.z - z) * t;\n  }\n  /**\n   * Check if a vector equals is almost equal to another one.\n   */\n\n\n  almostEquals(vector, precision) {\n    if (precision === void 0) {\n      precision = 1e-6;\n    }\n\n    if (Math.abs(this.x - vector.x) > precision || Math.abs(this.y - vector.y) > precision || Math.abs(this.z - vector.z) > precision) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if a vector is almost zero\n   */\n\n\n  almostZero(precision) {\n    if (precision === void 0) {\n      precision = 1e-6;\n    }\n\n    if (Math.abs(this.x) > precision || Math.abs(this.y) > precision || Math.abs(this.z) > precision) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if the vector is anti-parallel to another vector.\n   * @param precision Set to zero for exact comparisons\n   */\n\n\n  isAntiparallelTo(vector, precision) {\n    this.negate(antip_neg);\n    return antip_neg.almostEquals(vector, precision);\n  }\n  /**\n   * Clone the vector\n   */\n\n\n  clone() {\n    return new Vec3(this.x, this.y, this.z);\n  }\n\n}\nVec3.ZERO = new Vec3(0, 0, 0);\nVec3.UNIT_X = new Vec3(1, 0, 0);\nVec3.UNIT_Y = new Vec3(0, 1, 0);\nVec3.UNIT_Z = new Vec3(0, 0, 1);\nconst Vec3_tangents_n = new Vec3();\nconst Vec3_tangents_randVec = new Vec3();\nconst antip_neg = new Vec3();\n\n/**\n * Axis aligned bounding box class.\n */\nclass AABB {\n  /**\n   * The lower bound of the bounding box\n   */\n\n  /**\n   * The upper bound of the bounding box\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.lowerBound = new Vec3();\n    this.upperBound = new Vec3();\n\n    if (options.lowerBound) {\n      this.lowerBound.copy(options.lowerBound);\n    }\n\n    if (options.upperBound) {\n      this.upperBound.copy(options.upperBound);\n    }\n  }\n  /**\n   * Set the AABB bounds from a set of points.\n   * @param points An array of Vec3's.\n   * @return The self object\n   */\n\n\n  setFromPoints(points, position, quaternion, skinSize) {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    const q = quaternion; // Set to the first point\n\n    l.copy(points[0]);\n\n    if (q) {\n      q.vmult(l, l);\n    }\n\n    u.copy(l);\n\n    for (let i = 1; i < points.length; i++) {\n      let p = points[i];\n\n      if (q) {\n        q.vmult(p, tmp$1);\n        p = tmp$1;\n      }\n\n      if (p.x > u.x) {\n        u.x = p.x;\n      }\n\n      if (p.x < l.x) {\n        l.x = p.x;\n      }\n\n      if (p.y > u.y) {\n        u.y = p.y;\n      }\n\n      if (p.y < l.y) {\n        l.y = p.y;\n      }\n\n      if (p.z > u.z) {\n        u.z = p.z;\n      }\n\n      if (p.z < l.z) {\n        l.z = p.z;\n      }\n    } // Add offset\n\n\n    if (position) {\n      position.vadd(l, l);\n      position.vadd(u, u);\n    }\n\n    if (skinSize) {\n      l.x -= skinSize;\n      l.y -= skinSize;\n      l.z -= skinSize;\n      u.x += skinSize;\n      u.y += skinSize;\n      u.z += skinSize;\n    }\n\n    return this;\n  }\n  /**\n   * Copy bounds from an AABB to this AABB\n   * @param aabb Source to copy from\n   * @return The this object, for chainability\n   */\n\n\n  copy(aabb) {\n    this.lowerBound.copy(aabb.lowerBound);\n    this.upperBound.copy(aabb.upperBound);\n    return this;\n  }\n  /**\n   * Clone an AABB\n   */\n\n\n  clone() {\n    return new AABB().copy(this);\n  }\n  /**\n   * Extend this AABB so that it covers the given AABB too.\n   */\n\n\n  extend(aabb) {\n    this.lowerBound.x = Math.min(this.lowerBound.x, aabb.lowerBound.x);\n    this.upperBound.x = Math.max(this.upperBound.x, aabb.upperBound.x);\n    this.lowerBound.y = Math.min(this.lowerBound.y, aabb.lowerBound.y);\n    this.upperBound.y = Math.max(this.upperBound.y, aabb.upperBound.y);\n    this.lowerBound.z = Math.min(this.lowerBound.z, aabb.lowerBound.z);\n    this.upperBound.z = Math.max(this.upperBound.z, aabb.upperBound.z);\n  }\n  /**\n   * Returns true if the given AABB overlaps this AABB.\n   */\n\n\n  overlaps(aabb) {\n    const l1 = this.lowerBound;\n    const u1 = this.upperBound;\n    const l2 = aabb.lowerBound;\n    const u2 = aabb.upperBound; //      l2        u2\n    //      |---------|\n    // |--------|\n    // l1       u1\n\n    const overlapsX = l2.x <= u1.x && u1.x <= u2.x || l1.x <= u2.x && u2.x <= u1.x;\n    const overlapsY = l2.y <= u1.y && u1.y <= u2.y || l1.y <= u2.y && u2.y <= u1.y;\n    const overlapsZ = l2.z <= u1.z && u1.z <= u2.z || l1.z <= u2.z && u2.z <= u1.z;\n    return overlapsX && overlapsY && overlapsZ;\n  } // Mostly for debugging\n\n\n  volume() {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    return (u.x - l.x) * (u.y - l.y) * (u.z - l.z);\n  }\n  /**\n   * Returns true if the given AABB is fully contained in this AABB.\n   */\n\n\n  contains(aabb) {\n    const l1 = this.lowerBound;\n    const u1 = this.upperBound;\n    const l2 = aabb.lowerBound;\n    const u2 = aabb.upperBound; //      l2        u2\n    //      |---------|\n    // |---------------|\n    // l1              u1\n\n    return l1.x <= l2.x && u1.x >= u2.x && l1.y <= l2.y && u1.y >= u2.y && l1.z <= l2.z && u1.z >= u2.z;\n  }\n\n  getCorners(a, b, c, d, e, f, g, h) {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    a.copy(l);\n    b.set(u.x, l.y, l.z);\n    c.set(u.x, u.y, l.z);\n    d.set(l.x, u.y, u.z);\n    e.set(u.x, l.y, u.z);\n    f.set(l.x, u.y, l.z);\n    g.set(l.x, l.y, u.z);\n    h.copy(u);\n  }\n  /**\n   * Get the representation of an AABB in another frame.\n   * @return The \"target\" AABB object.\n   */\n\n\n  toLocalFrame(frame, target) {\n    const corners = transformIntoFrame_corners;\n    const a = corners[0];\n    const b = corners[1];\n    const c = corners[2];\n    const d = corners[3];\n    const e = corners[4];\n    const f = corners[5];\n    const g = corners[6];\n    const h = corners[7]; // Get corners in current frame\n\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n    for (let i = 0; i !== 8; i++) {\n      const corner = corners[i];\n      frame.pointToLocal(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n  }\n  /**\n   * Get the representation of an AABB in the global frame.\n   * @return The \"target\" AABB object.\n   */\n\n\n  toWorldFrame(frame, target) {\n    const corners = transformIntoFrame_corners;\n    const a = corners[0];\n    const b = corners[1];\n    const c = corners[2];\n    const d = corners[3];\n    const e = corners[4];\n    const f = corners[5];\n    const g = corners[6];\n    const h = corners[7]; // Get corners in current frame\n\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n    for (let i = 0; i !== 8; i++) {\n      const corner = corners[i];\n      frame.pointToWorld(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n  }\n  /**\n   * Check if the AABB is hit by a ray.\n   */\n\n\n  overlapsRay(ray) {\n    const {\n      direction,\n      from\n    } = ray; // const t = 0\n    // ray.direction is unit direction vector of ray\n\n    const dirFracX = 1 / direction.x;\n    const dirFracY = 1 / direction.y;\n    const dirFracZ = 1 / direction.z; // this.lowerBound is the corner of AABB with minimal coordinates - left bottom, rt is maximal corner\n\n    const t1 = (this.lowerBound.x - from.x) * dirFracX;\n    const t2 = (this.upperBound.x - from.x) * dirFracX;\n    const t3 = (this.lowerBound.y - from.y) * dirFracY;\n    const t4 = (this.upperBound.y - from.y) * dirFracY;\n    const t5 = (this.lowerBound.z - from.z) * dirFracZ;\n    const t6 = (this.upperBound.z - from.z) * dirFracZ; // const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)));\n    // const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)));\n\n    const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\n    const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6)); // if tmax < 0, ray (line) is intersecting AABB, but whole AABB is behing us\n\n    if (tmax < 0) {\n      //t = tmax;\n      return false;\n    } // if tmin > tmax, ray doesn't intersect AABB\n\n\n    if (tmin > tmax) {\n      //t = tmax;\n      return false;\n    }\n\n    return true;\n  }\n\n}\nconst tmp$1 = new Vec3();\nconst transformIntoFrame_corners = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n/**\n * Collision \"matrix\".\n * It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n */\nclass ArrayCollisionMatrix {\n  /**\n   * The matrix storage.\n   */\n  constructor() {\n    this.matrix = [];\n  }\n  /**\n   * Get an element\n   */\n\n\n  get(bi, bj) {\n    let {\n      index: i\n    } = bi;\n    let {\n      index: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return this.matrix[(i * (i + 1) >> 1) + j - 1];\n  }\n  /**\n   * Set an element\n   */\n\n\n  set(bi, bj, value) {\n    let {\n      index: i\n    } = bi;\n    let {\n      index: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    this.matrix[(i * (i + 1) >> 1) + j - 1] = value ? 1 : 0;\n  }\n  /**\n   * Sets all elements to zero\n   */\n\n\n  reset() {\n    for (let i = 0, l = this.matrix.length; i !== l; i++) {\n      this.matrix[i] = 0;\n    }\n  }\n  /**\n   * Sets the max number of objects\n   */\n\n\n  setNumObjects(n) {\n    this.matrix.length = n * (n - 1) >> 1;\n  }\n\n}\n\n/**\n * Base class for objects that dispatches events.\n */\nclass EventTarget {\n  /**\n   * Add an event listener\n   * @return The self object, for chainability.\n   */\n  addEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      this._listeners = {};\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (!listeners[type].includes(listener)) {\n      listeners[type].push(listener);\n    }\n\n    return this;\n  }\n  /**\n   * Check if an event listener is added\n   */\n\n\n  hasEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].includes(listener)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Check if any event listener of the given type is added\n   */\n\n\n  hasAnyEventListener(type) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    const listeners = this._listeners;\n    return listeners[type] !== undefined;\n  }\n  /**\n   * Remove an event listener\n   * @return The self object, for chainability.\n   */\n\n\n  removeEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      return this;\n    }\n\n    const index = listeners[type].indexOf(listener);\n\n    if (index !== -1) {\n      listeners[type].splice(index, 1);\n    }\n\n    return this;\n  }\n  /**\n   * Emit an event.\n   * @return The self object, for chainability.\n   */\n\n\n  dispatchEvent(event) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n\n      for (let i = 0, l = listenerArray.length; i < l; i++) {\n        listenerArray[i].call(this, event);\n      }\n    }\n\n    return this;\n  }\n\n}\n\n/**\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\n * @param x Multiplier of the imaginary basis vector i.\n * @param y Multiplier of the imaginary basis vector j.\n * @param z Multiplier of the imaginary basis vector k.\n * @param w Multiplier of the real part.\n * @see http://en.wikipedia.org/wiki/Quaternion\n */\n\nclass Quaternion {\n  constructor(x, y, z, w) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    if (w === void 0) {\n      w = 1;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n  /**\n   * Set the value of the quaternion.\n   */\n\n\n  set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  /**\n   * Convert to a readable format\n   * @return \"x,y,z,w\"\n   */\n\n\n  toString() {\n    return `${this.x},${this.y},${this.z},${this.w}`;\n  }\n  /**\n   * Convert to an Array\n   * @return [x, y, z, w]\n   */\n\n\n  toArray() {\n    return [this.x, this.y, this.z, this.w];\n  }\n  /**\n   * Set the quaternion components given an axis and an angle in radians.\n   */\n\n\n  setFromAxisAngle(vector, angle) {\n    const s = Math.sin(angle * 0.5);\n    this.x = vector.x * s;\n    this.y = vector.y * s;\n    this.z = vector.z * s;\n    this.w = Math.cos(angle * 0.5);\n    return this;\n  }\n  /**\n   * Converts the quaternion to [ axis, angle ] representation.\n   * @param targetAxis A vector object to reuse for storing the axis.\n   * @return An array, first element is the axis and the second is the angle in radians.\n   */\n\n\n  toAxisAngle(targetAxis) {\n    if (targetAxis === void 0) {\n      targetAxis = new Vec3();\n    }\n\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\n\n    const angle = 2 * Math.acos(this.w);\n    const s = Math.sqrt(1 - this.w * this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\n\n    if (s < 0.001) {\n      // test to avoid divide by zero, s is always positive due to sqrt\n      // if s close to zero then direction of axis not important\n      targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\n\n      targetAxis.y = this.y;\n      targetAxis.z = this.z;\n    } else {\n      targetAxis.x = this.x / s; // normalise axis\n\n      targetAxis.y = this.y / s;\n      targetAxis.z = this.z / s;\n    }\n\n    return [targetAxis, angle];\n  }\n  /**\n   * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\n   */\n\n\n  setFromVectors(u, v) {\n    if (u.isAntiparallelTo(v)) {\n      const t1 = sfv_t1;\n      const t2 = sfv_t2;\n      u.tangents(t1, t2);\n      this.setFromAxisAngle(t1, Math.PI);\n    } else {\n      const a = u.cross(v);\n      this.x = a.x;\n      this.y = a.y;\n      this.z = a.z;\n      this.w = Math.sqrt(u.length() ** 2 * v.length() ** 2) + u.dot(v);\n      this.normalize();\n    }\n\n    return this;\n  }\n  /**\n   * Multiply the quaternion with an other quaternion.\n   */\n\n\n  mult(quat, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = this.x;\n    const ay = this.y;\n    const az = this.z;\n    const aw = this.w;\n    const bx = quat.x;\n    const by = quat.y;\n    const bz = quat.z;\n    const bw = quat.w;\n    target.x = ax * bw + aw * bx + ay * bz - az * by;\n    target.y = ay * bw + aw * by + az * bx - ax * bz;\n    target.z = az * bw + aw * bz + ax * by - ay * bx;\n    target.w = aw * bw - ax * bx - ay * by - az * bz;\n    return target;\n  }\n  /**\n   * Get the inverse quaternion rotation.\n   */\n\n\n  inverse(target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const w = this.w;\n    this.conjugate(target);\n    const inorm2 = 1 / (x * x + y * y + z * z + w * w);\n    target.x *= inorm2;\n    target.y *= inorm2;\n    target.z *= inorm2;\n    target.w *= inorm2;\n    return target;\n  }\n  /**\n   * Get the quaternion conjugate\n   */\n\n\n  conjugate(target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    target.w = this.w;\n    return target;\n  }\n  /**\n   * Normalize the quaternion. Note that this changes the values of the quaternion.\n   */\n\n\n  normalize() {\n    let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    } else {\n      l = 1 / l;\n      this.x *= l;\n      this.y *= l;\n      this.z *= l;\n      this.w *= l;\n    }\n\n    return this;\n  }\n  /**\n   * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\n   * @author unphased, https://github.com/unphased\n   */\n\n\n  normalizeFast() {\n    const f = (3.0 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2.0;\n\n    if (f === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    } else {\n      this.x *= f;\n      this.y *= f;\n      this.z *= f;\n      this.w *= f;\n    }\n\n    return this;\n  }\n  /**\n   * Multiply the quaternion by a vector\n   */\n\n\n  vmult(v, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = v.x;\n    const y = v.y;\n    const z = v.z;\n    const qx = this.x;\n    const qy = this.y;\n    const qz = this.z;\n    const qw = this.w; // q*v\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return target;\n  }\n  /**\n   * Copies value of source to this quaternion.\n   * @return this\n   */\n\n\n  copy(quat) {\n    this.x = quat.x;\n    this.y = quat.y;\n    this.z = quat.z;\n    this.w = quat.w;\n    return this;\n  }\n  /**\n   * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: https://www.euclideanspace.com/maths/standards/index.htm\n   * @param order Three-character string, defaults to \"YZX\"\n   */\n\n\n  toEuler(target, order) {\n    if (order === void 0) {\n      order = 'YZX';\n    }\n\n    let heading;\n    let attitude;\n    let bank;\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const w = this.w;\n\n    switch (order) {\n      case 'YZX':\n        const test = x * y + z * w;\n\n        if (test > 0.499) {\n          // singularity at north pole\n          heading = 2 * Math.atan2(x, w);\n          attitude = Math.PI / 2;\n          bank = 0;\n        }\n\n        if (test < -0.499) {\n          // singularity at south pole\n          heading = -2 * Math.atan2(x, w);\n          attitude = -Math.PI / 2;\n          bank = 0;\n        }\n\n        if (heading === undefined) {\n          const sqx = x * x;\n          const sqy = y * y;\n          const sqz = z * z;\n          heading = Math.atan2(2 * y * w - 2 * x * z, 1 - 2 * sqy - 2 * sqz); // Heading\n\n          attitude = Math.asin(2 * test); // attitude\n\n          bank = Math.atan2(2 * x * w - 2 * y * z, 1 - 2 * sqx - 2 * sqz); // bank\n        }\n\n        break;\n\n      default:\n        throw new Error(`Euler order ${order} not supported yet.`);\n    }\n\n    target.y = heading;\n    target.z = attitude;\n    target.x = bank;\n  }\n  /**\n   * Set the quaternion components given Euler angle representation.\n   *\n   * @param order The order to apply angles: 'XYZ' or 'YXZ' or any other combination.\n   *\n   * See {@link https://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors MathWorks} reference\n   */\n\n\n  setFromEuler(x, y, z, order) {\n    if (order === void 0) {\n      order = 'XYZ';\n    }\n\n    const c1 = Math.cos(x / 2);\n    const c2 = Math.cos(y / 2);\n    const c3 = Math.cos(z / 2);\n    const s1 = Math.sin(x / 2);\n    const s2 = Math.sin(y / 2);\n    const s3 = Math.sin(z / 2);\n\n    if (order === 'XYZ') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Quaternion(this.x, this.y, this.z, this.w);\n  }\n  /**\n   * Performs a spherical linear interpolation between two quat\n   *\n   * @param toQuat second operand\n   * @param t interpolation amount between the self quaternion and toQuat\n   * @param target A quaternion to store the result in. If not provided, a new one will be created.\n   * @returns {Quaternion} The \"target\" object\n   */\n\n\n  slerp(toQuat, t, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = this.x;\n    const ay = this.y;\n    const az = this.z;\n    const aw = this.w;\n    let bx = toQuat.x;\n    let by = toQuat.y;\n    let bz = toQuat.z;\n    let bw = toQuat.w;\n    let omega;\n    let cosom;\n    let sinom;\n    let scale0;\n    let scale1; // calc cosine\n\n    cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n    if (cosom < 0.0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    } // calculate coefficients\n\n\n    if (1.0 - cosom > 0.000001) {\n      // standard case (slerp)\n      omega = Math.acos(cosom);\n      sinom = Math.sin(omega);\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      // \"from\" and \"to\" quaternions are very close\n      //  ... so we can do a linear interpolation\n      scale0 = 1.0 - t;\n      scale1 = t;\n    } // calculate final values\n\n\n    target.x = scale0 * ax + scale1 * bx;\n    target.y = scale0 * ay + scale1 * by;\n    target.z = scale0 * az + scale1 * bz;\n    target.w = scale0 * aw + scale1 * bw;\n    return target;\n  }\n  /**\n   * Rotate an absolute orientation quaternion given an angular velocity and a time step.\n   */\n\n\n  integrate(angularVelocity, dt, angularFactor, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = angularVelocity.x * angularFactor.x,\n          ay = angularVelocity.y * angularFactor.y,\n          az = angularVelocity.z * angularFactor.z,\n          bx = this.x,\n          by = this.y,\n          bz = this.z,\n          bw = this.w;\n    const half_dt = dt * 0.5;\n    target.x += half_dt * (ax * bw + ay * bz - az * by);\n    target.y += half_dt * (ay * bw + az * bx - ax * bz);\n    target.z += half_dt * (az * bw + ax * by - ay * bx);\n    target.w += half_dt * (-ax * bx - ay * by - az * bz);\n    return target;\n  }\n\n}\nconst sfv_t1 = new Vec3();\nconst sfv_t2 = new Vec3();\n\n/**\n * The available shape types.\n */\nconst SHAPE_TYPES = {\n  /** SPHERE */\n  SPHERE: 1,\n\n  /** PLANE */\n  PLANE: 2,\n\n  /** BOX */\n  BOX: 4,\n\n  /** COMPOUND */\n  COMPOUND: 8,\n\n  /** CONVEXPOLYHEDRON */\n  CONVEXPOLYHEDRON: 16,\n\n  /** HEIGHTFIELD */\n  HEIGHTFIELD: 32,\n\n  /** PARTICLE */\n  PARTICLE: 64,\n\n  /** CYLINDER */\n  CYLINDER: 128,\n\n  /** TRIMESH */\n  TRIMESH: 256\n};\n/**\n * ShapeType\n */\n\n/**\n * Base class for shapes\n */\nclass Shape {\n  /**\n   * Identifier of the Shape.\n   */\n\n  /**\n   * The type of this shape. Must be set to an int > 0 by subclasses.\n   */\n\n  /**\n   * The local bounding sphere radius of this shape.\n   */\n\n  /**\n   * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n   * @default true\n   */\n\n  /**\n   * @default 1\n   */\n\n  /**\n   * @default -1\n   */\n\n  /**\n   * Optional material of the shape that regulates contact properties.\n   */\n\n  /**\n   * The body to which the shape is added to.\n   */\n\n  /**\n   * All the Shape types.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.id = Shape.idCounter++;\n    this.type = options.type || 0;\n    this.boundingSphereRadius = 0;\n    this.collisionResponse = options.collisionResponse ? options.collisionResponse : true;\n    this.collisionFilterGroup = options.collisionFilterGroup !== undefined ? options.collisionFilterGroup : 1;\n    this.collisionFilterMask = options.collisionFilterMask !== undefined ? options.collisionFilterMask : -1;\n    this.material = options.material ? options.material : null;\n    this.body = null;\n  }\n  /**\n   * Computes the bounding sphere radius.\n   * The result is stored in the property `.boundingSphereRadius`\n   */\n\n\n  updateBoundingSphereRadius() {\n    throw `computeBoundingSphereRadius() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * Get the volume of this shape\n   */\n\n\n  volume() {\n    throw `volume() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * Calculates the inertia in the local frame for this shape.\n   * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    throw `calculateLocalInertia() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * @todo use abstract for these kind of methods\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    throw `calculateWorldAABB() not implemented for shape type ${this.type}`;\n  }\n\n}\nShape.idCounter = 0;\nShape.types = SHAPE_TYPES;\n\n/**\n * Transformation utilities.\n */\nclass Transform {\n  /**\n   * position\n   */\n\n  /**\n   * quaternion\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.position = new Vec3();\n    this.quaternion = new Quaternion();\n\n    if (options.position) {\n      this.position.copy(options.position);\n    }\n\n    if (options.quaternion) {\n      this.quaternion.copy(options.quaternion);\n    }\n  }\n  /**\n   * Get a global point in local transform coordinates.\n   */\n\n\n  pointToLocal(worldPoint, result) {\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n  }\n  /**\n   * Get a local point in global transform coordinates.\n   */\n\n\n  pointToWorld(localPoint, result) {\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n  }\n  /**\n   * vectorToWorldFrame\n   */\n\n\n  vectorToWorldFrame(localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * pointToLocalFrame\n   */\n\n\n  static pointToLocalFrame(position, quaternion, worldPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    worldPoint.vsub(position, result);\n    quaternion.conjugate(tmpQuat$1);\n    tmpQuat$1.vmult(result, result);\n    return result;\n  }\n  /**\n   * pointToWorldFrame\n   */\n\n\n  static pointToWorldFrame(position, quaternion, localPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.vmult(localPoint, result);\n    result.vadd(position, result);\n    return result;\n  }\n  /**\n   * vectorToWorldFrame\n   */\n\n\n  static vectorToWorldFrame(quaternion, localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * vectorToLocalFrame\n   */\n\n\n  static vectorToLocalFrame(position, quaternion, worldVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.w *= -1;\n    quaternion.vmult(worldVector, result);\n    quaternion.w *= -1;\n    return result;\n  }\n\n}\nconst tmpQuat$1 = new Quaternion();\n\n/**\n * A set of polygons describing a convex shape.\n *\n * The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\n * in the same 3D plane), instead these should be merged into one polygon.\n *\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\n * @author schteppe / https://github.com/schteppe\n * @see https://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\n *\n * @todo Move the clipping functions to ContactGenerator?\n * @todo Automatically merge coplanar polygons in constructor.\n * @example\n *     const convexShape = new CANNON.ConvexPolyhedron({ vertices, faces })\n *     const convexBody = new CANNON.Body({ mass: 1, shape: convexShape })\n *     world.addBody(convexBody)\n */\nclass ConvexPolyhedron extends Shape {\n  /** vertices */\n\n  /**\n   * Array of integer arrays, indicating which vertices each face consists of\n   */\n\n  /** faceNormals */\n\n  /** worldVertices */\n\n  /** worldVerticesNeedsUpdate */\n\n  /** worldFaceNormals */\n\n  /** worldFaceNormalsNeedsUpdate */\n\n  /**\n   * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\n   */\n\n  /** uniqueEdges */\n\n  /**\n   * @param vertices An array of Vec3's\n   * @param faces Array of integer arrays, describing which vertices that is included in each face.\n   */\n  constructor(props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    const {\n      vertices = [],\n      faces = [],\n      normals = [],\n      axes,\n      boundingSphereRadius\n    } = props;\n    super({\n      type: Shape.types.CONVEXPOLYHEDRON\n    });\n    this.vertices = vertices;\n    this.faces = faces;\n    this.faceNormals = normals;\n\n    if (this.faceNormals.length === 0) {\n      this.computeNormals();\n    }\n\n    if (!boundingSphereRadius) {\n      this.updateBoundingSphereRadius();\n    } else {\n      this.boundingSphereRadius = boundingSphereRadius;\n    }\n\n    this.worldVertices = []; // World transformed version of .vertices\n\n    this.worldVerticesNeedsUpdate = true;\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\n\n    this.worldFaceNormalsNeedsUpdate = true;\n    this.uniqueAxes = axes ? axes.slice() : null;\n    this.uniqueEdges = [];\n    this.computeEdges();\n  }\n  /**\n   * Computes uniqueEdges\n   */\n\n\n  computeEdges() {\n    const faces = this.faces;\n    const vertices = this.vertices;\n    const edges = this.uniqueEdges;\n    edges.length = 0;\n    const edge = new Vec3();\n\n    for (let i = 0; i !== faces.length; i++) {\n      const face = faces[i];\n      const numVertices = face.length;\n\n      for (let j = 0; j !== numVertices; j++) {\n        const k = (j + 1) % numVertices;\n        vertices[face[j]].vsub(vertices[face[k]], edge);\n        edge.normalize();\n        let found = false;\n\n        for (let p = 0; p !== edges.length; p++) {\n          if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          edges.push(edge.clone());\n        }\n      }\n    }\n  }\n  /**\n   * Compute the normals of the faces.\n   * Will reuse existing Vec3 objects in the `faceNormals` array if they exist.\n   */\n\n\n  computeNormals() {\n    this.faceNormals.length = this.faces.length; // Generate normals\n\n    for (let i = 0; i < this.faces.length; i++) {\n      // Check so all vertices exists for this face\n      for (let j = 0; j < this.faces[i].length; j++) {\n        if (!this.vertices[this.faces[i][j]]) {\n          throw new Error(`Vertex ${this.faces[i][j]} not found!`);\n        }\n      }\n\n      const n = this.faceNormals[i] || new Vec3();\n      this.getFaceNormal(i, n);\n      n.negate(n);\n      this.faceNormals[i] = n;\n      const vertex = this.vertices[this.faces[i][0]];\n\n      if (n.dot(vertex) < 0) {\n        console.error(`.faceNormals[${i}] = Vec3(${n.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);\n\n        for (let j = 0; j < this.faces[i].length; j++) {\n          console.warn(`.vertices[${this.faces[i][j]}] = Vec3(${this.vertices[this.faces[i][j]].toString()})`);\n        }\n      }\n    }\n  }\n  /**\n   * Compute the normal of a face from its vertices\n   */\n\n\n  getFaceNormal(i, target) {\n    const f = this.faces[i];\n    const va = this.vertices[f[0]];\n    const vb = this.vertices[f[1]];\n    const vc = this.vertices[f[2]];\n    ConvexPolyhedron.computeNormal(va, vb, vc, target);\n  }\n  /**\n   * Get face normal given 3 vertices\n   */\n\n\n  static computeNormal(va, vb, vc, target) {\n    const cb = new Vec3();\n    const ab = new Vec3();\n    vb.vsub(va, ab);\n    vc.vsub(vb, cb);\n    cb.cross(ab, target);\n\n    if (!target.isZero()) {\n      target.normalize();\n    }\n  }\n  /**\n   * @param minDist Clamp distance\n   * @param result The an array of contact point objects, see clipFaceAgainstHull\n   */\n\n\n  clipAgainstHull(posA, quatA, hullB, posB, quatB, separatingNormal, minDist, maxDist, result) {\n    const WorldNormal = new Vec3();\n    let closestFaceB = -1;\n    let dmax = -Number.MAX_VALUE;\n\n    for (let face = 0; face < hullB.faces.length; face++) {\n      WorldNormal.copy(hullB.faceNormals[face]);\n      quatB.vmult(WorldNormal, WorldNormal);\n      const d = WorldNormal.dot(separatingNormal);\n\n      if (d > dmax) {\n        dmax = d;\n        closestFaceB = face;\n      }\n    }\n\n    const worldVertsB1 = [];\n\n    for (let i = 0; i < hullB.faces[closestFaceB].length; i++) {\n      const b = hullB.vertices[hullB.faces[closestFaceB][i]];\n      const worldb = new Vec3();\n      worldb.copy(b);\n      quatB.vmult(worldb, worldb);\n      posB.vadd(worldb, worldb);\n      worldVertsB1.push(worldb);\n    }\n\n    if (closestFaceB >= 0) {\n      this.clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result);\n    }\n  }\n  /**\n   * Find the separating axis between this hull and another\n   * @param target The target vector to save the axis in\n   * @return Returns false if a separation is found, else true\n   */\n\n\n  findSeparatingAxis(hullB, posA, quatA, posB, quatB, target, faceListA, faceListB) {\n    const faceANormalWS3 = new Vec3();\n    const Worldnormal1 = new Vec3();\n    const deltaC = new Vec3();\n    const worldEdge0 = new Vec3();\n    const worldEdge1 = new Vec3();\n    const Cross = new Vec3();\n    let dmin = Number.MAX_VALUE;\n    const hullA = this;\n\n    if (!hullA.uniqueAxes) {\n      const numFacesA = faceListA ? faceListA.length : hullA.faces.length; // Test face normals from hullA\n\n      for (let i = 0; i < numFacesA; i++) {\n        const fi = faceListA ? faceListA[i] : i; // Get world face normal\n\n        faceANormalWS3.copy(hullA.faceNormals[fi]);\n        quatA.vmult(faceANormalWS3, faceANormalWS3);\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(faceANormalWS3);\n        }\n      }\n    } else {\n      // Test unique axes\n      for (let i = 0; i !== hullA.uniqueAxes.length; i++) {\n        // Get world axis\n        quatA.vmult(hullA.uniqueAxes[i], faceANormalWS3);\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(faceANormalWS3);\n        }\n      }\n    }\n\n    if (!hullB.uniqueAxes) {\n      // Test face normals from hullB\n      const numFacesB = faceListB ? faceListB.length : hullB.faces.length;\n\n      for (let i = 0; i < numFacesB; i++) {\n        const fi = faceListB ? faceListB[i] : i;\n        Worldnormal1.copy(hullB.faceNormals[fi]);\n        quatB.vmult(Worldnormal1, Worldnormal1);\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(Worldnormal1);\n        }\n      }\n    } else {\n      // Test unique axes in B\n      for (let i = 0; i !== hullB.uniqueAxes.length; i++) {\n        quatB.vmult(hullB.uniqueAxes[i], Worldnormal1);\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(Worldnormal1);\n        }\n      }\n    } // Test edges\n\n\n    for (let e0 = 0; e0 !== hullA.uniqueEdges.length; e0++) {\n      // Get world edge\n      quatA.vmult(hullA.uniqueEdges[e0], worldEdge0);\n\n      for (let e1 = 0; e1 !== hullB.uniqueEdges.length; e1++) {\n        // Get world edge 2\n        quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\n        worldEdge0.cross(worldEdge1, Cross);\n\n        if (!Cross.almostZero()) {\n          Cross.normalize();\n          const dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\n\n          if (dist === false) {\n            return false;\n          }\n\n          if (dist < dmin) {\n            dmin = dist;\n            target.copy(Cross);\n          }\n        }\n      }\n    }\n\n    posB.vsub(posA, deltaC);\n\n    if (deltaC.dot(target) > 0.0) {\n      target.negate(target);\n    }\n\n    return true;\n  }\n  /**\n   * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\n   * @return The overlap depth, or FALSE if no penetration.\n   */\n\n\n  testSepAxis(axis, hullB, posA, quatA, posB, quatB) {\n    const hullA = this;\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\n    const maxA = maxminA[0];\n    const minA = maxminA[1];\n    const maxB = maxminB[0];\n    const minB = maxminB[1];\n\n    if (maxA < minB || maxB < minA) {\n      return false; // Separated\n    }\n\n    const d0 = maxA - minB;\n    const d1 = maxB - minA;\n    const depth = d0 < d1 ? d0 : d1;\n    return depth;\n  }\n  /**\n   * calculateLocalInertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    const aabbmax = new Vec3();\n    const aabbmin = new Vec3();\n    this.computeLocalAABB(aabbmin, aabbmax);\n    const x = aabbmax.x - aabbmin.x;\n    const y = aabbmax.y - aabbmin.y;\n    const z = aabbmax.z - aabbmin.z;\n    target.x = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z);\n    target.y = 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z);\n    target.z = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x);\n  }\n  /**\n   * @param face_i Index of the face\n   */\n\n\n  getPlaneConstantOfFace(face_i) {\n    const f = this.faces[face_i];\n    const n = this.faceNormals[face_i];\n    const v = this.vertices[f[0]];\n    const c = -n.dot(v);\n    return c;\n  }\n  /**\n   * Clip a face against a hull.\n   * @param worldVertsB1 An array of Vec3 with vertices in the world frame.\n   * @param minDist Distance clamping\n   * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\n   */\n\n\n  clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result) {\n    const faceANormalWS = new Vec3();\n    const edge0 = new Vec3();\n    const WorldEdge0 = new Vec3();\n    const worldPlaneAnormal1 = new Vec3();\n    const planeNormalWS1 = new Vec3();\n    const worldA1 = new Vec3();\n    const localPlaneNormal = new Vec3();\n    const planeNormalWS = new Vec3();\n    const hullA = this;\n    const worldVertsB2 = [];\n    const pVtxIn = worldVertsB1;\n    const pVtxOut = worldVertsB2;\n    let closestFaceA = -1;\n    let dmin = Number.MAX_VALUE; // Find the face with normal closest to the separating axis\n\n    for (let face = 0; face < hullA.faces.length; face++) {\n      faceANormalWS.copy(hullA.faceNormals[face]);\n      quatA.vmult(faceANormalWS, faceANormalWS);\n      const d = faceANormalWS.dot(separatingNormal);\n\n      if (d < dmin) {\n        dmin = d;\n        closestFaceA = face;\n      }\n    }\n\n    if (closestFaceA < 0) {\n      return;\n    } // Get the face and construct connected faces\n\n\n    const polyA = hullA.faces[closestFaceA];\n    polyA.connectedFaces = [];\n\n    for (let i = 0; i < hullA.faces.length; i++) {\n      for (let j = 0; j < hullA.faces[i].length; j++) {\n        if (\n        /* Sharing a vertex*/\n        polyA.indexOf(hullA.faces[i][j]) !== -1 &&\n        /* Not the one we are looking for connections from */\n        i !== closestFaceA &&\n        /* Not already added */\n        polyA.connectedFaces.indexOf(i) === -1) {\n          polyA.connectedFaces.push(i);\n        }\n      }\n    } // Clip the polygon to the back of the planes of all faces of hull A,\n    // that are adjacent to the witness face\n\n\n    const numVerticesA = polyA.length;\n\n    for (let i = 0; i < numVerticesA; i++) {\n      const a = hullA.vertices[polyA[i]];\n      const b = hullA.vertices[polyA[(i + 1) % numVerticesA]];\n      a.vsub(b, edge0);\n      WorldEdge0.copy(edge0);\n      quatA.vmult(WorldEdge0, WorldEdge0);\n      posA.vadd(WorldEdge0, WorldEdge0);\n      worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);\n      quatA.vmult(worldPlaneAnormal1, worldPlaneAnormal1);\n      posA.vadd(worldPlaneAnormal1, worldPlaneAnormal1);\n      WorldEdge0.cross(worldPlaneAnormal1, planeNormalWS1);\n      planeNormalWS1.negate(planeNormalWS1);\n      worldA1.copy(a);\n      quatA.vmult(worldA1, worldA1);\n      posA.vadd(worldA1, worldA1);\n      const otherFace = polyA.connectedFaces[i];\n      localPlaneNormal.copy(this.faceNormals[otherFace]);\n      const localPlaneEq = this.getPlaneConstantOfFace(otherFace);\n      planeNormalWS.copy(localPlaneNormal);\n      quatA.vmult(planeNormalWS, planeNormalWS);\n      const planeEqWS = localPlaneEq - planeNormalWS.dot(posA); // Clip face against our constructed plane\n\n      this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS); // Throw away all clipped points, but save the remaining until next clip\n\n      while (pVtxIn.length) {\n        pVtxIn.shift();\n      }\n\n      while (pVtxOut.length) {\n        pVtxIn.push(pVtxOut.shift());\n      }\n    } // only keep contact points that are behind the witness face\n\n\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\n    const localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\n    planeNormalWS.copy(localPlaneNormal);\n    quatA.vmult(planeNormalWS, planeNormalWS);\n    const planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n\n    for (let i = 0; i < pVtxIn.length; i++) {\n      let depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; // ???\n\n      if (depth <= minDist) {\n        console.log(`clamped: depth=${depth} to minDist=${minDist}`);\n        depth = minDist;\n      }\n\n      if (depth <= maxDist) {\n        const point = pVtxIn[i];\n\n        if (depth <= 1e-6) {\n          const p = {\n            point,\n            normal: planeNormalWS,\n            depth\n          };\n          result.push(p);\n        }\n      }\n    }\n  }\n  /**\n   * Clip a face in a hull against the back of a plane.\n   * @param planeConstant The constant in the mathematical plane equation\n   */\n\n\n  clipFaceAgainstPlane(inVertices, outVertices, planeNormal, planeConstant) {\n    let n_dot_first;\n    let n_dot_last;\n    const numVerts = inVertices.length;\n\n    if (numVerts < 2) {\n      return outVertices;\n    }\n\n    let firstVertex = inVertices[inVertices.length - 1];\n    let lastVertex = inVertices[0];\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\n\n    for (let vi = 0; vi < numVerts; vi++) {\n      lastVertex = inVertices[vi];\n      n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\n\n      if (n_dot_first < 0) {\n        if (n_dot_last < 0) {\n          // Start < 0, end < 0, so output lastVertex\n          const newv = new Vec3();\n          newv.copy(lastVertex);\n          outVertices.push(newv);\n        } else {\n          // Start < 0, end >= 0, so output intersection\n          const newv = new Vec3();\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n          outVertices.push(newv);\n        }\n      } else {\n        if (n_dot_last < 0) {\n          // Start >= 0, end < 0 so output intersection and end\n          const newv = new Vec3();\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n          outVertices.push(newv);\n          outVertices.push(lastVertex);\n        }\n      }\n\n      firstVertex = lastVertex;\n      n_dot_first = n_dot_last;\n    }\n\n    return outVertices;\n  }\n  /**\n   * Updates `.worldVertices` and sets `.worldVerticesNeedsUpdate` to false.\n   */\n\n\n  computeWorldVertices(position, quat) {\n    while (this.worldVertices.length < this.vertices.length) {\n      this.worldVertices.push(new Vec3());\n    }\n\n    const verts = this.vertices;\n    const worldVerts = this.worldVertices;\n\n    for (let i = 0; i !== this.vertices.length; i++) {\n      quat.vmult(verts[i], worldVerts[i]);\n      position.vadd(worldVerts[i], worldVerts[i]);\n    }\n\n    this.worldVerticesNeedsUpdate = false;\n  }\n\n  computeLocalAABB(aabbmin, aabbmax) {\n    const vertices = this.vertices;\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n    for (let i = 0; i < this.vertices.length; i++) {\n      const v = vertices[i];\n\n      if (v.x < aabbmin.x) {\n        aabbmin.x = v.x;\n      } else if (v.x > aabbmax.x) {\n        aabbmax.x = v.x;\n      }\n\n      if (v.y < aabbmin.y) {\n        aabbmin.y = v.y;\n      } else if (v.y > aabbmax.y) {\n        aabbmax.y = v.y;\n      }\n\n      if (v.z < aabbmin.z) {\n        aabbmin.z = v.z;\n      } else if (v.z > aabbmax.z) {\n        aabbmax.z = v.z;\n      }\n    }\n  }\n  /**\n   * Updates `worldVertices` and sets `worldVerticesNeedsUpdate` to false.\n   */\n\n\n  computeWorldFaceNormals(quat) {\n    const N = this.faceNormals.length;\n\n    while (this.worldFaceNormals.length < N) {\n      this.worldFaceNormals.push(new Vec3());\n    }\n\n    const normals = this.faceNormals;\n    const worldNormals = this.worldFaceNormals;\n\n    for (let i = 0; i !== N; i++) {\n      quat.vmult(normals[i], worldNormals[i]);\n    }\n\n    this.worldFaceNormalsNeedsUpdate = false;\n  }\n  /**\n   * updateBoundingSphereRadius\n   */\n\n\n  updateBoundingSphereRadius() {\n    // Assume points are distributed with local (0,0,0) as center\n    let max2 = 0;\n    const verts = this.vertices;\n\n    for (let i = 0; i !== verts.length; i++) {\n      const norm2 = verts[i].lengthSquared();\n\n      if (norm2 > max2) {\n        max2 = norm2;\n      }\n    }\n\n    this.boundingSphereRadius = Math.sqrt(max2);\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const verts = this.vertices;\n    let minx;\n    let miny;\n    let minz;\n    let maxx;\n    let maxy;\n    let maxz;\n    let tempWorldVertex = new Vec3();\n\n    for (let i = 0; i < verts.length; i++) {\n      tempWorldVertex.copy(verts[i]);\n      quat.vmult(tempWorldVertex, tempWorldVertex);\n      pos.vadd(tempWorldVertex, tempWorldVertex);\n      const v = tempWorldVertex;\n\n      if (minx === undefined || v.x < minx) {\n        minx = v.x;\n      }\n\n      if (maxx === undefined || v.x > maxx) {\n        maxx = v.x;\n      }\n\n      if (miny === undefined || v.y < miny) {\n        miny = v.y;\n      }\n\n      if (maxy === undefined || v.y > maxy) {\n        maxy = v.y;\n      }\n\n      if (minz === undefined || v.z < minz) {\n        minz = v.z;\n      }\n\n      if (maxz === undefined || v.z > maxz) {\n        maxz = v.z;\n      }\n    }\n\n    min.set(minx, miny, minz);\n    max.set(maxx, maxy, maxz);\n  }\n  /**\n   * Get approximate convex volume\n   */\n\n\n  volume() {\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n  }\n  /**\n   * Get an average of all the vertices positions\n   */\n\n\n  getAveragePointLocal(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const verts = this.vertices;\n\n    for (let i = 0; i < verts.length; i++) {\n      target.vadd(verts[i], target);\n    }\n\n    target.scale(1 / verts.length, target);\n    return target;\n  }\n  /**\n   * Transform all local points. Will change the .vertices\n   */\n\n\n  transformAllPoints(offset, quat) {\n    const n = this.vertices.length;\n    const verts = this.vertices; // Apply rotation\n\n    if (quat) {\n      // Rotate vertices\n      for (let i = 0; i < n; i++) {\n        const v = verts[i];\n        quat.vmult(v, v);\n      } // Rotate face normals\n\n\n      for (let i = 0; i < this.faceNormals.length; i++) {\n        const v = this.faceNormals[i];\n        quat.vmult(v, v);\n      }\n      /*\n            // Rotate edges\n            for(let i=0; i<this.uniqueEdges.length; i++){\n                const v = this.uniqueEdges[i];\n                quat.vmult(v,v);\n            }*/\n\n    } // Apply offset\n\n\n    if (offset) {\n      for (let i = 0; i < n; i++) {\n        const v = verts[i];\n        v.vadd(offset, v);\n      }\n    }\n  }\n  /**\n   * Checks whether p is inside the polyhedra. Must be in local coords.\n   * The point lies outside of the convex hull of the other points if and only if the direction\n   * of all the vectors from it to those other points are on less than one half of a sphere around it.\n   * @param p A point given in local coordinates\n   */\n\n\n  pointIsInside(p) {\n    const verts = this.vertices;\n    const faces = this.faces;\n    const normals = this.faceNormals;\n    const positiveResult = null;\n    const pointInside = new Vec3();\n    this.getAveragePointLocal(pointInside);\n\n    for (let i = 0; i < this.faces.length; i++) {\n      let n = normals[i];\n      const v = verts[faces[i][0]]; // We only need one point in the face\n      // This dot product determines which side of the edge the point is\n\n      const vToP = new Vec3();\n      p.vsub(v, vToP);\n      const r1 = n.dot(vToP);\n      const vToPointInside = new Vec3();\n      pointInside.vsub(v, vToPointInside);\n      const r2 = n.dot(vToPointInside);\n\n      if (r1 < 0 && r2 > 0 || r1 > 0 && r2 < 0) {\n        return false; // Encountered some other sign. Exit.\n      }\n    } // If we got here, all dot products were of the same sign.\n\n\n    return positiveResult ? 1 : -1;\n  }\n  /**\n   * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis.\n   * Results are saved in the array maxmin.\n   * @param result result[0] and result[1] will be set to maximum and minimum, respectively.\n   */\n\n\n  static project(shape, axis, pos, quat, result) {\n    const n = shape.vertices.length;\n    project_worldVertex;\n    const localAxis = project_localAxis;\n    let max = 0;\n    let min = 0;\n    const localOrigin = project_localOrigin;\n    const vs = shape.vertices;\n    localOrigin.setZero(); // Transform the axis to local\n\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\n    const add = localOrigin.dot(localAxis);\n    min = max = vs[0].dot(localAxis);\n\n    for (let i = 1; i < n; i++) {\n      const val = vs[i].dot(localAxis);\n\n      if (val > max) {\n        max = val;\n      }\n\n      if (val < min) {\n        min = val;\n      }\n    }\n\n    min -= add;\n    max -= add;\n\n    if (min > max) {\n      // Inconsistent - swap\n      const temp = min;\n      min = max;\n      max = temp;\n    } // Output\n\n\n    result[0] = max;\n    result[1] = min;\n  }\n\n}\nconst maxminA = [];\nconst maxminB = [];\nconst project_worldVertex = new Vec3();\nconst project_localAxis = new Vec3();\nconst project_localOrigin = new Vec3();\n\n/**\n * A 3d box shape.\n * @example\n *     const size = 1\n *     const halfExtents = new CANNON.Vec3(size, size, size)\n *     const boxShape = new CANNON.Box(halfExtents)\n *     const boxBody = new CANNON.Body({ mass: 1, shape: boxShape })\n *     world.addBody(boxBody)\n */\nclass Box extends Shape {\n  /**\n   * The half extents of the box.\n   */\n\n  /**\n   * Used by the contact generator to make contacts with other convex polyhedra for example.\n   */\n  constructor(halfExtents) {\n    super({\n      type: Shape.types.BOX\n    });\n    this.halfExtents = halfExtents;\n    this.convexPolyhedronRepresentation = null;\n    this.updateConvexPolyhedronRepresentation();\n    this.updateBoundingSphereRadius();\n  }\n  /**\n   * Updates the local convex polyhedron representation used for some collisions.\n   */\n\n\n  updateConvexPolyhedronRepresentation() {\n    const sx = this.halfExtents.x;\n    const sy = this.halfExtents.y;\n    const sz = this.halfExtents.z;\n    const V = Vec3;\n    const vertices = [new V(-sx, -sy, -sz), new V(sx, -sy, -sz), new V(sx, sy, -sz), new V(-sx, sy, -sz), new V(-sx, -sy, sz), new V(sx, -sy, sz), new V(sx, sy, sz), new V(-sx, sy, sz)];\n    const faces = [[3, 2, 1, 0], // -z\n    [4, 5, 6, 7], // +z\n    [5, 4, 0, 1], // -y\n    [2, 3, 7, 6], // +y\n    [0, 4, 7, 3], // -x\n    [1, 2, 6, 5] // +x\n    ];\n    const axes = [new V(0, 0, 1), new V(0, 1, 0), new V(1, 0, 0)];\n    const h = new ConvexPolyhedron({\n      vertices,\n      faces,\n      axes\n    });\n    this.convexPolyhedronRepresentation = h;\n    h.material = this.material;\n  }\n  /**\n   * Calculate the inertia of the box.\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    Box.calculateInertia(this.halfExtents, mass, target);\n    return target;\n  }\n\n  static calculateInertia(halfExtents, mass, target) {\n    const e = halfExtents;\n    target.x = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.z * 2 * e.z);\n    target.y = 1.0 / 12.0 * mass * (2 * e.x * 2 * e.x + 2 * e.z * 2 * e.z);\n    target.z = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.x * 2 * e.x);\n  }\n  /**\n   * Get the box 6 side normals\n   * @param sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\n   * @param quat Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\n   */\n\n\n  getSideNormals(sixTargetVectors, quat) {\n    const sides = sixTargetVectors;\n    const ex = this.halfExtents;\n    sides[0].set(ex.x, 0, 0);\n    sides[1].set(0, ex.y, 0);\n    sides[2].set(0, 0, ex.z);\n    sides[3].set(-ex.x, 0, 0);\n    sides[4].set(0, -ex.y, 0);\n    sides[5].set(0, 0, -ex.z);\n\n    if (quat !== undefined) {\n      for (let i = 0; i !== sides.length; i++) {\n        quat.vmult(sides[i], sides[i]);\n      }\n    }\n\n    return sides;\n  }\n  /**\n   * Returns the volume of the box.\n   */\n\n\n  volume() {\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\n  }\n  /**\n   * updateBoundingSphereRadius\n   */\n\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = this.halfExtents.length();\n  }\n  /**\n   * forEachWorldCorner\n   */\n\n\n  forEachWorldCorner(pos, quat, callback) {\n    const e = this.halfExtents;\n    const corners = [[e.x, e.y, e.z], [-e.x, e.y, e.z], [-e.x, -e.y, e.z], [-e.x, -e.y, -e.z], [e.x, -e.y, -e.z], [e.x, e.y, -e.z], [-e.x, e.y, -e.z], [e.x, -e.y, e.z]];\n\n    for (let i = 0; i < corners.length; i++) {\n      worldCornerTempPos.set(corners[i][0], corners[i][1], corners[i][2]);\n      quat.vmult(worldCornerTempPos, worldCornerTempPos);\n      pos.vadd(worldCornerTempPos, worldCornerTempPos);\n      callback(worldCornerTempPos.x, worldCornerTempPos.y, worldCornerTempPos.z);\n    }\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const e = this.halfExtents;\n    worldCornersTemp[0].set(e.x, e.y, e.z);\n    worldCornersTemp[1].set(-e.x, e.y, e.z);\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\n    worldCornersTemp[5].set(e.x, e.y, -e.z);\n    worldCornersTemp[6].set(-e.x, e.y, -e.z);\n    worldCornersTemp[7].set(e.x, -e.y, e.z);\n    const wc = worldCornersTemp[0];\n    quat.vmult(wc, wc);\n    pos.vadd(wc, wc);\n    max.copy(wc);\n    min.copy(wc);\n\n    for (let i = 1; i < 8; i++) {\n      const wc = worldCornersTemp[i];\n      quat.vmult(wc, wc);\n      pos.vadd(wc, wc);\n      const x = wc.x;\n      const y = wc.y;\n      const z = wc.z;\n\n      if (x > max.x) {\n        max.x = x;\n      }\n\n      if (y > max.y) {\n        max.y = y;\n      }\n\n      if (z > max.z) {\n        max.z = z;\n      }\n\n      if (x < min.x) {\n        min.x = x;\n      }\n\n      if (y < min.y) {\n        min.y = y;\n      }\n\n      if (z < min.z) {\n        min.z = z;\n      }\n    } // Get each axis max\n    // min.set(Infinity,Infinity,Infinity);\n    // max.set(-Infinity,-Infinity,-Infinity);\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\n    //     if(x > max.x){\n    //         max.x = x;\n    //     }\n    //     if(y > max.y){\n    //         max.y = y;\n    //     }\n    //     if(z > max.z){\n    //         max.z = z;\n    //     }\n    //     if(x < min.x){\n    //         min.x = x;\n    //     }\n    //     if(y < min.y){\n    //         min.y = y;\n    //     }\n    //     if(z < min.z){\n    //         min.z = z;\n    //     }\n    // });\n\n  }\n\n}\nconst worldCornerTempPos = new Vec3();\nconst worldCornersTemp = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n/**\n * BODY_TYPES\n */\nconst BODY_TYPES = {\n  /** DYNAMIC */\n  DYNAMIC: 1,\n\n  /** STATIC */\n  STATIC: 2,\n\n  /** KINEMATIC */\n  KINEMATIC: 4\n};\n/**\n * BodyType\n */\n\n/**\n * BODY_SLEEP_STATES\n */\nconst BODY_SLEEP_STATES = {\n  /** AWAKE */\n  AWAKE: 0,\n\n  /** SLEEPY */\n  SLEEPY: 1,\n\n  /** SLEEPING */\n  SLEEPING: 2\n};\n/**\n * BodySleepState\n */\n\n/**\n * Base class for all body types.\n * @example\n *     const shape = new CANNON.Sphere(1)\n *     const body = new CANNON.Body({\n *       mass: 1,\n *       shape,\n *     })\n *     world.addBody(body)\n */\nclass Body extends EventTarget {\n  /**\n   * Dispatched after two bodies collide. This event is dispatched on each\n   * of the two bodies involved in the collision.\n   * @event collide\n   * @param body The body that was involved in the collision.\n   * @param contact The details of the collision.\n   */\n\n  /**\n   * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\n   */\n\n  /**\n   * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\n   */\n\n  /**\n   * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\n   */\n\n  /**\n   * AWAKE\n   */\n\n  /**\n   * SLEEPY\n   */\n\n  /**\n   * SLEEPING\n   */\n\n  /**\n   * Dispatched after a sleeping body has woken up.\n   * @event wakeup\n   */\n\n  /**\n   * Dispatched after a body has gone in to the sleepy state.\n   * @event sleepy\n   */\n\n  /**\n   * Dispatched after a body has fallen asleep.\n   * @event sleep\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super();\n    this.id = Body.idCounter++;\n    this.index = -1;\n    this.world = null;\n    this.vlambda = new Vec3();\n    this.collisionFilterGroup = typeof options.collisionFilterGroup === 'number' ? options.collisionFilterGroup : 1;\n    this.collisionFilterMask = typeof options.collisionFilterMask === 'number' ? options.collisionFilterMask : -1;\n    this.collisionResponse = typeof options.collisionResponse === 'boolean' ? options.collisionResponse : true;\n    this.position = new Vec3();\n    this.previousPosition = new Vec3();\n    this.interpolatedPosition = new Vec3();\n    this.initPosition = new Vec3();\n\n    if (options.position) {\n      this.position.copy(options.position);\n      this.previousPosition.copy(options.position);\n      this.interpolatedPosition.copy(options.position);\n      this.initPosition.copy(options.position);\n    }\n\n    this.velocity = new Vec3();\n\n    if (options.velocity) {\n      this.velocity.copy(options.velocity);\n    }\n\n    this.initVelocity = new Vec3();\n    this.force = new Vec3();\n    const mass = typeof options.mass === 'number' ? options.mass : 0;\n    this.mass = mass;\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\n    this.material = options.material || null;\n    this.linearDamping = typeof options.linearDamping === 'number' ? options.linearDamping : 0.01;\n    this.type = mass <= 0.0 ? Body.STATIC : Body.DYNAMIC;\n\n    if (typeof options.type === typeof Body.STATIC) {\n      this.type = options.type;\n    }\n\n    this.allowSleep = typeof options.allowSleep !== 'undefined' ? options.allowSleep : true;\n    this.sleepState = Body.AWAKE;\n    this.sleepSpeedLimit = typeof options.sleepSpeedLimit !== 'undefined' ? options.sleepSpeedLimit : 0.1;\n    this.sleepTimeLimit = typeof options.sleepTimeLimit !== 'undefined' ? options.sleepTimeLimit : 1;\n    this.timeLastSleepy = 0;\n    this.wakeUpAfterNarrowphase = false;\n    this.torque = new Vec3();\n    this.quaternion = new Quaternion();\n    this.initQuaternion = new Quaternion();\n    this.previousQuaternion = new Quaternion();\n    this.interpolatedQuaternion = new Quaternion();\n\n    if (options.quaternion) {\n      this.quaternion.copy(options.quaternion);\n      this.initQuaternion.copy(options.quaternion);\n      this.previousQuaternion.copy(options.quaternion);\n      this.interpolatedQuaternion.copy(options.quaternion);\n    }\n\n    this.angularVelocity = new Vec3();\n\n    if (options.angularVelocity) {\n      this.angularVelocity.copy(options.angularVelocity);\n    }\n\n    this.initAngularVelocity = new Vec3();\n    this.shapes = [];\n    this.shapeOffsets = [];\n    this.shapeOrientations = [];\n    this.inertia = new Vec3();\n    this.invInertia = new Vec3();\n    this.invInertiaWorld = new Mat3();\n    this.invMassSolve = 0;\n    this.invInertiaSolve = new Vec3();\n    this.invInertiaWorldSolve = new Mat3();\n    this.fixedRotation = typeof options.fixedRotation !== 'undefined' ? options.fixedRotation : false;\n    this.angularDamping = typeof options.angularDamping !== 'undefined' ? options.angularDamping : 0.01;\n    this.linearFactor = new Vec3(1, 1, 1);\n\n    if (options.linearFactor) {\n      this.linearFactor.copy(options.linearFactor);\n    }\n\n    this.angularFactor = new Vec3(1, 1, 1);\n\n    if (options.angularFactor) {\n      this.angularFactor.copy(options.angularFactor);\n    }\n\n    this.aabb = new AABB();\n    this.aabbNeedsUpdate = true;\n    this.boundingRadius = 0;\n    this.wlambda = new Vec3();\n    this.isTrigger = Boolean(options.isTrigger);\n\n    if (options.shape) {\n      this.addShape(options.shape);\n    }\n\n    this.updateMassProperties();\n  }\n  /**\n   * Wake the body up.\n   */\n\n\n  wakeUp() {\n    const prevState = this.sleepState;\n    this.sleepState = Body.AWAKE;\n    this.wakeUpAfterNarrowphase = false;\n\n    if (prevState === Body.SLEEPING) {\n      this.dispatchEvent(Body.wakeupEvent);\n    }\n  }\n  /**\n   * Force body sleep\n   */\n\n\n  sleep() {\n    this.sleepState = Body.SLEEPING;\n    this.velocity.set(0, 0, 0);\n    this.angularVelocity.set(0, 0, 0);\n    this.wakeUpAfterNarrowphase = false;\n  }\n  /**\n   * Called every timestep to update internal sleep timer and change sleep state if needed.\n   * @param time The world time in seconds\n   */\n\n\n  sleepTick(time) {\n    if (this.allowSleep) {\n      const sleepState = this.sleepState;\n      const speedSquared = this.velocity.lengthSquared() + this.angularVelocity.lengthSquared();\n      const speedLimitSquared = this.sleepSpeedLimit ** 2;\n\n      if (sleepState === Body.AWAKE && speedSquared < speedLimitSquared) {\n        this.sleepState = Body.SLEEPY; // Sleepy\n\n        this.timeLastSleepy = time;\n        this.dispatchEvent(Body.sleepyEvent);\n      } else if (sleepState === Body.SLEEPY && speedSquared > speedLimitSquared) {\n        this.wakeUp(); // Wake up\n      } else if (sleepState === Body.SLEEPY && time - this.timeLastSleepy > this.sleepTimeLimit) {\n        this.sleep(); // Sleeping\n\n        this.dispatchEvent(Body.sleepEvent);\n      }\n    }\n  }\n  /**\n   * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\n   */\n\n\n  updateSolveMassProperties() {\n    if (this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC) {\n      this.invMassSolve = 0;\n      this.invInertiaSolve.setZero();\n      this.invInertiaWorldSolve.setZero();\n    } else {\n      this.invMassSolve = this.invMass;\n      this.invInertiaSolve.copy(this.invInertia);\n      this.invInertiaWorldSolve.copy(this.invInertiaWorld);\n    }\n  }\n  /**\n   * Convert a world point to local body frame.\n   */\n\n\n  pointToLocalFrame(worldPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    worldPoint.vsub(this.position, result);\n    this.quaternion.conjugate().vmult(result, result);\n    return result;\n  }\n  /**\n   * Convert a world vector to local body frame.\n   */\n\n\n  vectorToLocalFrame(worldVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.conjugate().vmult(worldVector, result);\n    return result;\n  }\n  /**\n   * Convert a local body point to world frame.\n   */\n\n\n  pointToWorldFrame(localPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localPoint, result);\n    result.vadd(this.position, result);\n    return result;\n  }\n  /**\n   * Convert a local body point to world frame.\n   */\n\n\n  vectorToWorldFrame(localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * Add a shape to the body with a local offset and orientation.\n   * @return The body object, for chainability.\n   */\n\n\n  addShape(shape, _offset, _orientation) {\n    const offset = new Vec3();\n    const orientation = new Quaternion();\n\n    if (_offset) {\n      offset.copy(_offset);\n    }\n\n    if (_orientation) {\n      orientation.copy(_orientation);\n    }\n\n    this.shapes.push(shape);\n    this.shapeOffsets.push(offset);\n    this.shapeOrientations.push(orientation);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n    this.aabbNeedsUpdate = true;\n    shape.body = this;\n    return this;\n  }\n  /**\n   * Remove a shape from the body.\n   * @return The body object, for chainability.\n   */\n\n\n  removeShape(shape) {\n    const index = this.shapes.indexOf(shape);\n\n    if (index === -1) {\n      console.warn('Shape does not belong to the body');\n      return this;\n    }\n\n    this.shapes.splice(index, 1);\n    this.shapeOffsets.splice(index, 1);\n    this.shapeOrientations.splice(index, 1);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n    this.aabbNeedsUpdate = true;\n    shape.body = null;\n    return this;\n  }\n  /**\n   * Update the bounding radius of the body. Should be done if any of the shapes are changed.\n   */\n\n\n  updateBoundingRadius() {\n    const shapes = this.shapes;\n    const shapeOffsets = this.shapeOffsets;\n    const N = shapes.length;\n    let radius = 0;\n\n    for (let i = 0; i !== N; i++) {\n      const shape = shapes[i];\n      shape.updateBoundingSphereRadius();\n      const offset = shapeOffsets[i].length();\n      const r = shape.boundingSphereRadius;\n\n      if (offset + r > radius) {\n        radius = offset + r;\n      }\n    }\n\n    this.boundingRadius = radius;\n  }\n  /**\n   * Updates the .aabb\n   */\n\n\n  updateAABB() {\n    const shapes = this.shapes;\n    const shapeOffsets = this.shapeOffsets;\n    const shapeOrientations = this.shapeOrientations;\n    const N = shapes.length;\n    const offset = tmpVec;\n    const orientation = tmpQuat;\n    const bodyQuat = this.quaternion;\n    const aabb = this.aabb;\n    const shapeAABB = updateAABB_shapeAABB;\n\n    for (let i = 0; i !== N; i++) {\n      const shape = shapes[i]; // Get shape world position\n\n      bodyQuat.vmult(shapeOffsets[i], offset);\n      offset.vadd(this.position, offset); // Get shape world quaternion\n\n      bodyQuat.mult(shapeOrientations[i], orientation); // Get shape AABB\n\n      shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\n\n      if (i === 0) {\n        aabb.copy(shapeAABB);\n      } else {\n        aabb.extend(shapeAABB);\n      }\n    }\n\n    this.aabbNeedsUpdate = false;\n  }\n  /**\n   * Update `.inertiaWorld` and `.invInertiaWorld`\n   */\n\n\n  updateInertiaWorld(force) {\n    const I = this.invInertia;\n\n    if (I.x === I.y && I.y === I.z && !force) ; else {\n      const m1 = uiw_m1;\n      const m2 = uiw_m2;\n      uiw_m3;\n      m1.setRotationFromQuaternion(this.quaternion);\n      m1.transpose(m2);\n      m1.scale(I, m1);\n      m1.mmult(m2, this.invInertiaWorld);\n    }\n  }\n  /**\n   * Apply force to a point of the body. This could for example be a point on the Body surface.\n   * Applying force this way will add to Body.force and Body.torque.\n   * @param force The amount of force to add.\n   * @param relativePoint A point relative to the center of mass to apply the force on.\n   */\n\n\n  applyForce(force, relativePoint) {\n    if (relativePoint === void 0) {\n      relativePoint = new Vec3();\n    }\n\n    // Needed?\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Compute produced rotational force\n\n\n    const rotForce = Body_applyForce_rotForce;\n    relativePoint.cross(force, rotForce); // Add linear force\n\n    this.force.vadd(force, this.force); // Add rotational force\n\n    this.torque.vadd(rotForce, this.torque);\n  }\n  /**\n   * Apply force to a local point in the body.\n   * @param force The force vector to apply, defined locally in the body frame.\n   * @param localPoint A local point in the body to apply the force on.\n   */\n\n\n  applyLocalForce(localForce, localPoint) {\n    if (localPoint === void 0) {\n      localPoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    const worldForce = Body_applyLocalForce_worldForce;\n    const relativePointWorld = Body_applyLocalForce_relativePointWorld; // Transform the force vector to world space\n\n    this.vectorToWorldFrame(localForce, worldForce);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n    this.applyForce(worldForce, relativePointWorld);\n  }\n  /**\n   * Apply torque to the body.\n   * @param torque The amount of torque to add.\n   */\n\n\n  applyTorque(torque) {\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Add rotational force\n\n\n    this.torque.vadd(torque, this.torque);\n  }\n  /**\n   * Apply impulse to a point of the body. This could for example be a point on the Body surface.\n   * An impulse is a force added to a body during a short period of time (impulse = force * time).\n   * Impulses will be added to Body.velocity and Body.angularVelocity.\n   * @param impulse The amount of impulse to add.\n   * @param relativePoint A point relative to the center of mass to apply the force on.\n   */\n\n\n  applyImpulse(impulse, relativePoint) {\n    if (relativePoint === void 0) {\n      relativePoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Compute point position relative to the body center\n\n\n    const r = relativePoint; // Compute produced central impulse velocity\n\n    const velo = Body_applyImpulse_velo;\n    velo.copy(impulse);\n    velo.scale(this.invMass, velo); // Add linear impulse\n\n    this.velocity.vadd(velo, this.velocity); // Compute produced rotational impulse velocity\n\n    const rotVelo = Body_applyImpulse_rotVelo;\n    r.cross(impulse, rotVelo);\n    /*\n     rotVelo.x *= this.invInertia.x;\n     rotVelo.y *= this.invInertia.y;\n     rotVelo.z *= this.invInertia.z;\n     */\n\n    this.invInertiaWorld.vmult(rotVelo, rotVelo); // Add rotational Impulse\n\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\n  }\n  /**\n   * Apply locally-defined impulse to a local point in the body.\n   * @param force The force vector to apply, defined locally in the body frame.\n   * @param localPoint A local point in the body to apply the force on.\n   */\n\n\n  applyLocalImpulse(localImpulse, localPoint) {\n    if (localPoint === void 0) {\n      localPoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    const worldImpulse = Body_applyLocalImpulse_worldImpulse;\n    const relativePointWorld = Body_applyLocalImpulse_relativePoint; // Transform the force vector to world space\n\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n    this.applyImpulse(worldImpulse, relativePointWorld);\n  }\n  /**\n   * Should be called whenever you change the body shape or mass.\n   */\n\n\n  updateMassProperties() {\n    const halfExtents = Body_updateMassProperties_halfExtents;\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\n    const I = this.inertia;\n    const fixed = this.fixedRotation; // Approximate with AABB box\n\n    this.updateAABB();\n    halfExtents.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2);\n    Box.calculateInertia(halfExtents, this.mass, I);\n    this.invInertia.set(I.x > 0 && !fixed ? 1.0 / I.x : 0, I.y > 0 && !fixed ? 1.0 / I.y : 0, I.z > 0 && !fixed ? 1.0 / I.z : 0);\n    this.updateInertiaWorld(true);\n  }\n  /**\n   * Get world velocity of a point in the body.\n   * @param worldPoint\n   * @param result\n   * @return The result vector.\n   */\n\n\n  getVelocityAtWorldPoint(worldPoint, result) {\n    const r = new Vec3();\n    worldPoint.vsub(this.position, r);\n    this.angularVelocity.cross(r, result);\n    this.velocity.vadd(result, result);\n    return result;\n  }\n  /**\n   * Move the body forward in time.\n   * @param dt Time step\n   * @param quatNormalize Set to true to normalize the body quaternion\n   * @param quatNormalizeFast If the quaternion should be normalized using \"fast\" quaternion normalization\n   */\n\n\n  integrate(dt, quatNormalize, quatNormalizeFast) {\n    // Save previous position\n    this.previousPosition.copy(this.position);\n    this.previousQuaternion.copy(this.quaternion);\n\n    if (!(this.type === Body.DYNAMIC || this.type === Body.KINEMATIC) || this.sleepState === Body.SLEEPING) {\n      // Only for dynamic\n      return;\n    }\n\n    const velo = this.velocity;\n    const angularVelo = this.angularVelocity;\n    const pos = this.position;\n    const force = this.force;\n    const torque = this.torque;\n    const quat = this.quaternion;\n    const invMass = this.invMass;\n    const invInertia = this.invInertiaWorld;\n    const linearFactor = this.linearFactor;\n    const iMdt = invMass * dt;\n    velo.x += force.x * iMdt * linearFactor.x;\n    velo.y += force.y * iMdt * linearFactor.y;\n    velo.z += force.z * iMdt * linearFactor.z;\n    const e = invInertia.elements;\n    const angularFactor = this.angularFactor;\n    const tx = torque.x * angularFactor.x;\n    const ty = torque.y * angularFactor.y;\n    const tz = torque.z * angularFactor.z;\n    angularVelo.x += dt * (e[0] * tx + e[1] * ty + e[2] * tz);\n    angularVelo.y += dt * (e[3] * tx + e[4] * ty + e[5] * tz);\n    angularVelo.z += dt * (e[6] * tx + e[7] * ty + e[8] * tz); // Use new velocity  - leap frog\n\n    pos.x += velo.x * dt;\n    pos.y += velo.y * dt;\n    pos.z += velo.z * dt;\n    quat.integrate(this.angularVelocity, dt, this.angularFactor, quat);\n\n    if (quatNormalize) {\n      if (quatNormalizeFast) {\n        quat.normalizeFast();\n      } else {\n        quat.normalize();\n      }\n    }\n\n    this.aabbNeedsUpdate = true; // Update world inertia\n\n    this.updateInertiaWorld();\n  }\n\n}\nBody.idCounter = 0;\nBody.COLLIDE_EVENT_NAME = 'collide';\nBody.DYNAMIC = BODY_TYPES.DYNAMIC;\nBody.STATIC = BODY_TYPES.STATIC;\nBody.KINEMATIC = BODY_TYPES.KINEMATIC;\nBody.AWAKE = BODY_SLEEP_STATES.AWAKE;\nBody.SLEEPY = BODY_SLEEP_STATES.SLEEPY;\nBody.SLEEPING = BODY_SLEEP_STATES.SLEEPING;\nBody.wakeupEvent = {\n  type: 'wakeup'\n};\nBody.sleepyEvent = {\n  type: 'sleepy'\n};\nBody.sleepEvent = {\n  type: 'sleep'\n};\nconst tmpVec = new Vec3();\nconst tmpQuat = new Quaternion();\nconst updateAABB_shapeAABB = new AABB();\nconst uiw_m1 = new Mat3();\nconst uiw_m2 = new Mat3();\nconst uiw_m3 = new Mat3();\nconst Body_applyForce_rotForce = new Vec3();\nconst Body_applyLocalForce_worldForce = new Vec3();\nconst Body_applyLocalForce_relativePointWorld = new Vec3();\nconst Body_applyImpulse_velo = new Vec3();\nconst Body_applyImpulse_rotVelo = new Vec3();\nconst Body_applyLocalImpulse_worldImpulse = new Vec3();\nconst Body_applyLocalImpulse_relativePoint = new Vec3();\nconst Body_updateMassProperties_halfExtents = new Vec3();\n\n/**\n * Base class for broadphase implementations\n * @author schteppe\n */\nclass Broadphase {\n  /**\n   * The world to search for collisions in.\n   */\n\n  /**\n   * If set to true, the broadphase uses bounding boxes for intersection tests, else it uses bounding spheres.\n   */\n\n  /**\n   * Set to true if the objects in the world moved.\n   */\n  constructor() {\n    this.world = null;\n    this.useBoundingBoxes = false;\n    this.dirty = true;\n  }\n  /**\n   * Get the collision pairs from the world\n   * @param world The world to search in\n   * @param p1 Empty array to be filled with body objects\n   * @param p2 Empty array to be filled with body objects\n   */\n\n\n  collisionPairs(world, p1, p2) {\n    throw new Error('collisionPairs not implemented for this BroadPhase class!');\n  }\n  /**\n   * Check if a body pair needs to be intersection tested at all.\n   */\n\n\n  needBroadphaseCollision(bodyA, bodyB) {\n    // Check collision filter masks\n    if ((bodyA.collisionFilterGroup & bodyB.collisionFilterMask) === 0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask) === 0) {\n      return false;\n    } // Check types\n\n\n    if (((bodyA.type & Body.STATIC) !== 0 || bodyA.sleepState === Body.SLEEPING) && ((bodyB.type & Body.STATIC) !== 0 || bodyB.sleepState === Body.SLEEPING)) {\n      // Both bodies are static or sleeping. Skip.\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if the bounding volumes of two bodies intersect.\n   */\n\n\n  intersectionTest(bodyA, bodyB, pairs1, pairs2) {\n    if (this.useBoundingBoxes) {\n      this.doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2);\n    } else {\n      this.doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2);\n    }\n  }\n  /**\n   * Check if the bounding spheres of two bodies are intersecting.\n   * @param pairs1 bodyA is appended to this array if intersection\n   * @param pairs2 bodyB is appended to this array if intersection\n   */\n\n\n  doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2) {\n    const r = Broadphase_collisionPairs_r;\n    bodyB.position.vsub(bodyA.position, r);\n    const boundingRadiusSum2 = (bodyA.boundingRadius + bodyB.boundingRadius) ** 2;\n    const norm2 = r.lengthSquared();\n\n    if (norm2 < boundingRadiusSum2) {\n      pairs1.push(bodyA);\n      pairs2.push(bodyB);\n    }\n  }\n  /**\n   * Check if the bounding boxes of two bodies are intersecting.\n   */\n\n\n  doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2) {\n    if (bodyA.aabbNeedsUpdate) {\n      bodyA.updateAABB();\n    }\n\n    if (bodyB.aabbNeedsUpdate) {\n      bodyB.updateAABB();\n    } // Check AABB / AABB\n\n\n    if (bodyA.aabb.overlaps(bodyB.aabb)) {\n      pairs1.push(bodyA);\n      pairs2.push(bodyB);\n    }\n  }\n  /**\n   * Removes duplicate pairs from the pair arrays.\n   */\n\n\n  makePairsUnique(pairs1, pairs2) {\n    const t = Broadphase_makePairsUnique_temp;\n    const p1 = Broadphase_makePairsUnique_p1;\n    const p2 = Broadphase_makePairsUnique_p2;\n    const N = pairs1.length;\n\n    for (let i = 0; i !== N; i++) {\n      p1[i] = pairs1[i];\n      p2[i] = pairs2[i];\n    }\n\n    pairs1.length = 0;\n    pairs2.length = 0;\n\n    for (let i = 0; i !== N; i++) {\n      const id1 = p1[i].id;\n      const id2 = p2[i].id;\n      const key = id1 < id2 ? `${id1},${id2}` : `${id2},${id1}`;\n      t[key] = i;\n      t.keys.push(key);\n    }\n\n    for (let i = 0; i !== t.keys.length; i++) {\n      const key = t.keys.pop();\n      const pairIndex = t[key];\n      pairs1.push(p1[pairIndex]);\n      pairs2.push(p2[pairIndex]);\n      delete t[key];\n    }\n  }\n  /**\n   * To be implemented by subcasses\n   */\n\n\n  setWorld(world) {}\n  /**\n   * Check if the bounding spheres of two bodies overlap.\n   */\n\n\n  static boundingSphereCheck(bodyA, bodyB) {\n    const dist = new Vec3(); // bsc_dist;\n\n    bodyA.position.vsub(bodyB.position, dist);\n    const sa = bodyA.shapes[0];\n    const sb = bodyB.shapes[0];\n    return Math.pow(sa.boundingSphereRadius + sb.boundingSphereRadius, 2) > dist.lengthSquared();\n  }\n  /**\n   * Returns all the bodies within the AABB.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\n    return [];\n  }\n\n} // Temp objects\n\nconst Broadphase_collisionPairs_r = new Vec3();\nnew Vec3();\nnew Quaternion();\nnew Vec3();\nconst Broadphase_makePairsUnique_temp = {\n  keys: []\n};\nconst Broadphase_makePairsUnique_p1 = [];\nconst Broadphase_makePairsUnique_p2 = [];\nnew Vec3();\n\n/**\n * Axis aligned uniform grid broadphase.\n * @todo Needs support for more than just planes and spheres.\n */\nclass GridBroadphase extends Broadphase {\n  /**\n   * Number of boxes along x\n   */\n\n  /**\n   * Number of boxes along y\n   */\n\n  /**\n   * Number of boxes along z\n   */\n\n  /**\n   * aabbMin\n   */\n\n  /**\n   * aabbMax\n   */\n\n  /**\n   * bins\n   */\n\n  /**\n   * binLengths\n   */\n\n  /**\n   * @param nx Number of boxes along x.\n   * @param ny Number of boxes along y.\n   * @param nz Number of boxes along z.\n   */\n  constructor(aabbMin, aabbMax, nx, ny, nz) {\n    if (aabbMin === void 0) {\n      aabbMin = new Vec3(100, 100, 100);\n    }\n\n    if (aabbMax === void 0) {\n      aabbMax = new Vec3(-100, -100, -100);\n    }\n\n    if (nx === void 0) {\n      nx = 10;\n    }\n\n    if (ny === void 0) {\n      ny = 10;\n    }\n\n    if (nz === void 0) {\n      nz = 10;\n    }\n\n    super();\n    this.nx = nx;\n    this.ny = ny;\n    this.nz = nz;\n    this.aabbMin = aabbMin;\n    this.aabbMax = aabbMax;\n    const nbins = this.nx * this.ny * this.nz;\n\n    if (nbins <= 0) {\n      throw \"GridBroadphase: Each dimension's n must be >0\";\n    }\n\n    this.bins = [];\n    this.binLengths = []; // Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\n\n    this.bins.length = nbins;\n    this.binLengths.length = nbins;\n\n    for (let i = 0; i < nbins; i++) {\n      this.bins[i] = [];\n      this.binLengths[i] = 0;\n    }\n  }\n  /**\n   * Get all the collision pairs in the physics world\n   */\n\n\n  collisionPairs(world, pairs1, pairs2) {\n    const N = world.bodies.length;\n    const bodies = world.bodies;\n    const max = this.aabbMax;\n    const min = this.aabbMin;\n    const nx = this.nx;\n    const ny = this.ny;\n    const nz = this.nz;\n    const xstep = ny * nz;\n    const ystep = nz;\n    const zstep = 1;\n    const xmax = max.x;\n    const ymax = max.y;\n    const zmax = max.z;\n    const xmin = min.x;\n    const ymin = min.y;\n    const zmin = min.z;\n    const xmult = nx / (xmax - xmin);\n    const ymult = ny / (ymax - ymin);\n    const zmult = nz / (zmax - zmin);\n    const binsizeX = (xmax - xmin) / nx;\n    const binsizeY = (ymax - ymin) / ny;\n    const binsizeZ = (zmax - zmin) / nz;\n    const binRadius = Math.sqrt(binsizeX * binsizeX + binsizeY * binsizeY + binsizeZ * binsizeZ) * 0.5;\n    const types = Shape.types;\n    const SPHERE = types.SPHERE;\n    const PLANE = types.PLANE;\n    types.BOX;\n    types.COMPOUND;\n    types.CONVEXPOLYHEDRON;\n    const bins = this.bins;\n    const binLengths = this.binLengths;\n    const Nbins = this.bins.length; // Reset bins\n\n    for (let i = 0; i !== Nbins; i++) {\n      binLengths[i] = 0;\n    }\n\n    const ceil = Math.ceil;\n\n    function addBoxToBins(x0, y0, z0, x1, y1, z1, bi) {\n      let xoff0 = (x0 - xmin) * xmult | 0;\n      let yoff0 = (y0 - ymin) * ymult | 0;\n      let zoff0 = (z0 - zmin) * zmult | 0;\n      let xoff1 = ceil((x1 - xmin) * xmult);\n      let yoff1 = ceil((y1 - ymin) * ymult);\n      let zoff1 = ceil((z1 - zmin) * zmult);\n\n      if (xoff0 < 0) {\n        xoff0 = 0;\n      } else if (xoff0 >= nx) {\n        xoff0 = nx - 1;\n      }\n\n      if (yoff0 < 0) {\n        yoff0 = 0;\n      } else if (yoff0 >= ny) {\n        yoff0 = ny - 1;\n      }\n\n      if (zoff0 < 0) {\n        zoff0 = 0;\n      } else if (zoff0 >= nz) {\n        zoff0 = nz - 1;\n      }\n\n      if (xoff1 < 0) {\n        xoff1 = 0;\n      } else if (xoff1 >= nx) {\n        xoff1 = nx - 1;\n      }\n\n      if (yoff1 < 0) {\n        yoff1 = 0;\n      } else if (yoff1 >= ny) {\n        yoff1 = ny - 1;\n      }\n\n      if (zoff1 < 0) {\n        zoff1 = 0;\n      } else if (zoff1 >= nz) {\n        zoff1 = nz - 1;\n      }\n\n      xoff0 *= xstep;\n      yoff0 *= ystep;\n      zoff0 *= zstep;\n      xoff1 *= xstep;\n      yoff1 *= ystep;\n      zoff1 *= zstep;\n\n      for (let xoff = xoff0; xoff <= xoff1; xoff += xstep) {\n        for (let yoff = yoff0; yoff <= yoff1; yoff += ystep) {\n          for (let zoff = zoff0; zoff <= zoff1; zoff += zstep) {\n            const idx = xoff + yoff + zoff;\n            bins[idx][binLengths[idx]++] = bi;\n          }\n        }\n      }\n    } // Put all bodies into the bins\n\n\n    for (let i = 0; i !== N; i++) {\n      const bi = bodies[i];\n      const si = bi.shapes[0];\n\n      switch (si.type) {\n        case SPHERE:\n          {\n            const shape = si; // Put in bin\n            // check if overlap with other bins\n\n            const x = bi.position.x;\n            const y = bi.position.y;\n            const z = bi.position.z;\n            const r = shape.radius;\n            addBoxToBins(x - r, y - r, z - r, x + r, y + r, z + r, bi);\n            break;\n          }\n\n        case PLANE:\n          {\n            const shape = si;\n\n            if (shape.worldNormalNeedsUpdate) {\n              shape.computeWorldNormal(bi.quaternion);\n            }\n\n            const planeNormal = shape.worldNormal; //Relative position from origin of plane object to the first bin\n            //Incremented as we iterate through the bins\n\n            const xreset = xmin + binsizeX * 0.5 - bi.position.x;\n            const yreset = ymin + binsizeY * 0.5 - bi.position.y;\n            const zreset = zmin + binsizeZ * 0.5 - bi.position.z;\n            const d = GridBroadphase_collisionPairs_d;\n            d.set(xreset, yreset, zreset);\n\n            for (let xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\n              for (let yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\n                for (let zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\n                  if (d.dot(planeNormal) < binRadius) {\n                    const idx = xoff + yoff + zoff;\n                    bins[idx][binLengths[idx]++] = bi;\n                  }\n                }\n              }\n            }\n\n            break;\n          }\n\n        default:\n          {\n            if (bi.aabbNeedsUpdate) {\n              bi.updateAABB();\n            }\n\n            addBoxToBins(bi.aabb.lowerBound.x, bi.aabb.lowerBound.y, bi.aabb.lowerBound.z, bi.aabb.upperBound.x, bi.aabb.upperBound.y, bi.aabb.upperBound.z, bi);\n            break;\n          }\n      }\n    } // Check each bin\n\n\n    for (let i = 0; i !== Nbins; i++) {\n      const binLength = binLengths[i]; //Skip bins with no potential collisions\n\n      if (binLength > 1) {\n        const bin = bins[i]; // Do N^2 broadphase inside\n\n        for (let xi = 0; xi !== binLength; xi++) {\n          const bi = bin[xi];\n\n          for (let yi = 0; yi !== xi; yi++) {\n            const bj = bin[yi];\n\n            if (this.needBroadphaseCollision(bi, bj)) {\n              this.intersectionTest(bi, bj, pairs1, pairs2);\n            }\n          }\n        }\n      }\n    } //\tfor (let zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\n    //\t\tconsole.log(\"layer \"+zi);\n    //\t\tfor (let yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\n    //\t\t\tconst row = '';\n    //\t\t\tfor (let xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\n    //\t\t\t\tconst idx = xoff + yoff + zoff;\n    //\t\t\t\trow += ' ' + binLengths[idx];\n    //\t\t\t}\n    //\t\t\tconsole.log(row);\n    //\t\t}\n    //\t}\n\n\n    this.makePairsUnique(pairs1, pairs2);\n  }\n\n}\nconst GridBroadphase_collisionPairs_d = new Vec3();\nnew Vec3();\n\n/**\n * Naive broadphase implementation, used in lack of better ones.\n *\n * The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 _(which is bad)_\n */\nclass NaiveBroadphase extends Broadphase {\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * Get all the collision pairs in the physics world\n   */\n\n\n  collisionPairs(world, pairs1, pairs2) {\n    const bodies = world.bodies;\n    const n = bodies.length;\n    let bi;\n    let bj; // Naive N^2 ftw!\n\n    for (let i = 0; i !== n; i++) {\n      for (let j = 0; j !== i; j++) {\n        bi = bodies[i];\n        bj = bodies[j];\n\n        if (!this.needBroadphaseCollision(bi, bj)) {\n          continue;\n        }\n\n        this.intersectionTest(bi, bj, pairs1, pairs2);\n      }\n    }\n  }\n  /**\n   * Returns all the bodies within an AABB.\n   * @param result An array to store resulting bodies in.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    for (let i = 0; i < world.bodies.length; i++) {\n      const b = world.bodies[i];\n\n      if (b.aabbNeedsUpdate) {\n        b.updateAABB();\n      } // Ugly hack until Body gets aabb\n\n\n      if (b.aabb.overlaps(aabb)) {\n        result.push(b);\n      }\n    }\n\n    return result;\n  }\n\n}\n\n/**\n * Storage for Ray casting data\n */\nclass RaycastResult {\n  /**\n   * rayFromWorld\n   */\n\n  /**\n   * rayToWorld\n   */\n\n  /**\n   * hitNormalWorld\n   */\n\n  /**\n   * hitPointWorld\n   */\n\n  /**\n   * hasHit\n   */\n\n  /**\n   * shape\n   */\n\n  /**\n   * body\n   */\n\n  /**\n   * The index of the hit triangle, if the hit shape was a trimesh\n   */\n\n  /**\n   * Distance to the hit. Will be set to -1 if there was no hit\n   */\n\n  /**\n   * If the ray should stop traversing the bodies\n   */\n  constructor() {\n    this.rayFromWorld = new Vec3();\n    this.rayToWorld = new Vec3();\n    this.hitNormalWorld = new Vec3();\n    this.hitPointWorld = new Vec3();\n    this.hasHit = false;\n    this.shape = null;\n    this.body = null;\n    this.hitFaceIndex = -1;\n    this.distance = -1;\n    this.shouldStop = false;\n  }\n  /**\n   * Reset all result data.\n   */\n\n\n  reset() {\n    this.rayFromWorld.setZero();\n    this.rayToWorld.setZero();\n    this.hitNormalWorld.setZero();\n    this.hitPointWorld.setZero();\n    this.hasHit = false;\n    this.shape = null;\n    this.body = null;\n    this.hitFaceIndex = -1;\n    this.distance = -1;\n    this.shouldStop = false;\n  }\n  /**\n   * abort\n   */\n\n\n  abort() {\n    this.shouldStop = true;\n  }\n  /**\n   * Set result data.\n   */\n\n\n  set(rayFromWorld, rayToWorld, hitNormalWorld, hitPointWorld, shape, body, distance) {\n    this.rayFromWorld.copy(rayFromWorld);\n    this.rayToWorld.copy(rayToWorld);\n    this.hitNormalWorld.copy(hitNormalWorld);\n    this.hitPointWorld.copy(hitPointWorld);\n    this.shape = shape;\n    this.body = body;\n    this.distance = distance;\n  }\n\n}\n\nlet _Shape$types$SPHERE, _Shape$types$PLANE, _Shape$types$BOX, _Shape$types$CYLINDER, _Shape$types$CONVEXPO, _Shape$types$HEIGHTFI, _Shape$types$TRIMESH;\n\n/**\n * RAY_MODES\n */\nconst RAY_MODES = {\n  /** CLOSEST */\n  CLOSEST: 1,\n\n  /** ANY */\n  ANY: 2,\n\n  /** ALL */\n  ALL: 4\n};\n/**\n * RayMode\n */\n\n_Shape$types$SPHERE = Shape.types.SPHERE;\n_Shape$types$PLANE = Shape.types.PLANE;\n_Shape$types$BOX = Shape.types.BOX;\n_Shape$types$CYLINDER = Shape.types.CYLINDER;\n_Shape$types$CONVEXPO = Shape.types.CONVEXPOLYHEDRON;\n_Shape$types$HEIGHTFI = Shape.types.HEIGHTFIELD;\n_Shape$types$TRIMESH = Shape.types.TRIMESH;\n\n/**\n * A line in 3D space that intersects bodies and return points.\n */\nclass Ray {\n  /**\n   * from\n   */\n\n  /**\n   * to\n   */\n\n  /**\n   * direction\n   */\n\n  /**\n   * The precision of the ray. Used when checking parallelity etc.\n   * @default 0.0001\n   */\n\n  /**\n   * Set to `false` if you don't want the Ray to take `collisionResponse` flags into account on bodies and shapes.\n   * @default true\n   */\n\n  /**\n   * If set to `true`, the ray skips any hits with normal.dot(rayDirection) < 0.\n   * @default false\n   */\n\n  /**\n   * collisionFilterMask\n   * @default -1\n   */\n\n  /**\n   * collisionFilterGroup\n   * @default -1\n   */\n\n  /**\n   * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\n   * @default RAY.ANY\n   */\n\n  /**\n   * Current result object.\n   */\n\n  /**\n   * Will be set to `true` during intersectWorld() if the ray hit anything.\n   */\n\n  /**\n   * User-provided result callback. Will be used if mode is Ray.ALL.\n   */\n\n  /**\n   * CLOSEST\n   */\n\n  /**\n   * ANY\n   */\n\n  /**\n   * ALL\n   */\n  get [_Shape$types$SPHERE]() {\n    return this._intersectSphere;\n  }\n\n  get [_Shape$types$PLANE]() {\n    return this._intersectPlane;\n  }\n\n  get [_Shape$types$BOX]() {\n    return this._intersectBox;\n  }\n\n  get [_Shape$types$CYLINDER]() {\n    return this._intersectConvex;\n  }\n\n  get [_Shape$types$CONVEXPO]() {\n    return this._intersectConvex;\n  }\n\n  get [_Shape$types$HEIGHTFI]() {\n    return this._intersectHeightfield;\n  }\n\n  get [_Shape$types$TRIMESH]() {\n    return this._intersectTrimesh;\n  }\n\n  constructor(from, to) {\n    if (from === void 0) {\n      from = new Vec3();\n    }\n\n    if (to === void 0) {\n      to = new Vec3();\n    }\n\n    this.from = from.clone();\n    this.to = to.clone();\n    this.direction = new Vec3();\n    this.precision = 0.0001;\n    this.checkCollisionResponse = true;\n    this.skipBackfaces = false;\n    this.collisionFilterMask = -1;\n    this.collisionFilterGroup = -1;\n    this.mode = Ray.ANY;\n    this.result = new RaycastResult();\n    this.hasHit = false;\n\n    this.callback = result => {};\n  }\n  /**\n   * Do itersection against all bodies in the given World.\n   * @return True if the ray hit anything, otherwise false.\n   */\n\n\n  intersectWorld(world, options) {\n    this.mode = options.mode || Ray.ANY;\n    this.result = options.result || new RaycastResult();\n    this.skipBackfaces = !!options.skipBackfaces;\n    this.collisionFilterMask = typeof options.collisionFilterMask !== 'undefined' ? options.collisionFilterMask : -1;\n    this.collisionFilterGroup = typeof options.collisionFilterGroup !== 'undefined' ? options.collisionFilterGroup : -1;\n    this.checkCollisionResponse = typeof options.checkCollisionResponse !== 'undefined' ? options.checkCollisionResponse : true;\n\n    if (options.from) {\n      this.from.copy(options.from);\n    }\n\n    if (options.to) {\n      this.to.copy(options.to);\n    }\n\n    this.callback = options.callback || (() => {});\n\n    this.hasHit = false;\n    this.result.reset();\n    this.updateDirection();\n    this.getAABB(tmpAABB$1);\n    tmpArray.length = 0;\n    world.broadphase.aabbQuery(world, tmpAABB$1, tmpArray);\n    this.intersectBodies(tmpArray);\n    return this.hasHit;\n  }\n  /**\n   * Shoot a ray at a body, get back information about the hit.\n   * @deprecated @param result set the result property of the Ray instead.\n   */\n\n\n  intersectBody(body, result) {\n    if (result) {\n      this.result = result;\n      this.updateDirection();\n    }\n\n    const checkCollisionResponse = this.checkCollisionResponse;\n\n    if (checkCollisionResponse && !body.collisionResponse) {\n      return;\n    }\n\n    if ((this.collisionFilterGroup & body.collisionFilterMask) === 0 || (body.collisionFilterGroup & this.collisionFilterMask) === 0) {\n      return;\n    }\n\n    const xi = intersectBody_xi;\n    const qi = intersectBody_qi;\n\n    for (let i = 0, N = body.shapes.length; i < N; i++) {\n      const shape = body.shapes[i];\n\n      if (checkCollisionResponse && !shape.collisionResponse) {\n        continue; // Skip\n      }\n\n      body.quaternion.mult(body.shapeOrientations[i], qi);\n      body.quaternion.vmult(body.shapeOffsets[i], xi);\n      xi.vadd(body.position, xi);\n      this.intersectShape(shape, qi, xi, body);\n\n      if (this.result.shouldStop) {\n        break;\n      }\n    }\n  }\n  /**\n   * Shoot a ray at an array bodies, get back information about the hit.\n   * @param bodies An array of Body objects.\n   * @deprecated @param result set the result property of the Ray instead.\n   *\n   */\n\n\n  intersectBodies(bodies, result) {\n    if (result) {\n      this.result = result;\n      this.updateDirection();\n    }\n\n    for (let i = 0, l = bodies.length; !this.result.shouldStop && i < l; i++) {\n      this.intersectBody(bodies[i]);\n    }\n  }\n  /**\n   * Updates the direction vector.\n   */\n\n\n  updateDirection() {\n    this.to.vsub(this.from, this.direction);\n    this.direction.normalize();\n  }\n\n  intersectShape(shape, quat, position, body) {\n    const from = this.from; // Checking boundingSphere\n\n    const distance = distanceFromIntersection(from, this.direction, position);\n\n    if (distance > shape.boundingSphereRadius) {\n      return;\n    }\n\n    const intersectMethod = this[shape.type];\n\n    if (intersectMethod) {\n      intersectMethod.call(this, shape, quat, position, body, shape);\n    }\n  }\n\n  _intersectBox(box, quat, position, body, reportedShape) {\n    return this._intersectConvex(box.convexPolyhedronRepresentation, quat, position, body, reportedShape);\n  }\n\n  _intersectPlane(shape, quat, position, body, reportedShape) {\n    const from = this.from;\n    const to = this.to;\n    const direction = this.direction; // Get plane normal\n\n    const worldNormal = new Vec3(0, 0, 1);\n    quat.vmult(worldNormal, worldNormal);\n    const len = new Vec3();\n    from.vsub(position, len);\n    const planeToFrom = len.dot(worldNormal);\n    to.vsub(position, len);\n    const planeToTo = len.dot(worldNormal);\n\n    if (planeToFrom * planeToTo > 0) {\n      // \"from\" and \"to\" are on the same side of the plane... bail out\n      return;\n    }\n\n    if (from.distanceTo(to) < planeToFrom) {\n      return;\n    }\n\n    const n_dot_dir = worldNormal.dot(direction);\n\n    if (Math.abs(n_dot_dir) < this.precision) {\n      // No intersection\n      return;\n    }\n\n    const planePointToFrom = new Vec3();\n    const dir_scaled_with_t = new Vec3();\n    const hitPointWorld = new Vec3();\n    from.vsub(position, planePointToFrom);\n    const t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\n    direction.scale(t, dir_scaled_with_t);\n    from.vadd(dir_scaled_with_t, hitPointWorld);\n    this.reportIntersection(worldNormal, hitPointWorld, reportedShape, body, -1);\n  }\n  /**\n   * Get the world AABB of the ray.\n   */\n\n\n  getAABB(aabb) {\n    const {\n      lowerBound,\n      upperBound\n    } = aabb;\n    const to = this.to;\n    const from = this.from;\n    lowerBound.x = Math.min(to.x, from.x);\n    lowerBound.y = Math.min(to.y, from.y);\n    lowerBound.z = Math.min(to.z, from.z);\n    upperBound.x = Math.max(to.x, from.x);\n    upperBound.y = Math.max(to.y, from.y);\n    upperBound.z = Math.max(to.z, from.z);\n  }\n\n  _intersectHeightfield(shape, quat, position, body, reportedShape) {\n    shape.data;\n    shape.elementSize; // Convert the ray to local heightfield coordinates\n\n    const localRay = intersectHeightfield_localRay; //new Ray(this.from, this.to);\n\n    localRay.from.copy(this.from);\n    localRay.to.copy(this.to);\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\n    localRay.updateDirection(); // Get the index of the data points to test against\n\n    const index = intersectHeightfield_index;\n    let iMinX;\n    let iMinY;\n    let iMaxX;\n    let iMaxY; // Set to max\n\n    iMinX = iMinY = 0;\n    iMaxX = iMaxY = shape.data.length - 1;\n    const aabb = new AABB();\n    localRay.getAABB(aabb);\n    shape.getIndexOfPosition(aabb.lowerBound.x, aabb.lowerBound.y, index, true);\n    iMinX = Math.max(iMinX, index[0]);\n    iMinY = Math.max(iMinY, index[1]);\n    shape.getIndexOfPosition(aabb.upperBound.x, aabb.upperBound.y, index, true);\n    iMaxX = Math.min(iMaxX, index[0] + 1);\n    iMaxY = Math.min(iMaxY, index[1] + 1);\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        if (this.result.shouldStop) {\n          return;\n        }\n\n        shape.getAabbAtIndex(i, j, aabb);\n\n        if (!aabb.overlapsRay(localRay)) {\n          continue;\n        } // Lower triangle\n\n\n        shape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n\n        if (this.result.shouldStop) {\n          return;\n        } // Upper triangle\n\n\n        shape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n      }\n    }\n  }\n\n  _intersectSphere(sphere, quat, position, body, reportedShape) {\n    const from = this.from;\n    const to = this.to;\n    const r = sphere.radius;\n    const a = (to.x - from.x) ** 2 + (to.y - from.y) ** 2 + (to.z - from.z) ** 2;\n    const b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\n    const c = (from.x - position.x) ** 2 + (from.y - position.y) ** 2 + (from.z - position.z) ** 2 - r ** 2;\n    const delta = b ** 2 - 4 * a * c;\n    const intersectionPoint = Ray_intersectSphere_intersectionPoint;\n    const normal = Ray_intersectSphere_normal;\n\n    if (delta < 0) {\n      // No intersection\n      return;\n    } else if (delta === 0) {\n      // single intersection point\n      from.lerp(to, delta, intersectionPoint);\n      intersectionPoint.vsub(position, normal);\n      normal.normalize();\n      this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n    } else {\n      const d1 = (-b - Math.sqrt(delta)) / (2 * a);\n      const d2 = (-b + Math.sqrt(delta)) / (2 * a);\n\n      if (d1 >= 0 && d1 <= 1) {\n        from.lerp(to, d1, intersectionPoint);\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n      }\n\n      if (this.result.shouldStop) {\n        return;\n      }\n\n      if (d2 >= 0 && d2 <= 1) {\n        from.lerp(to, d2, intersectionPoint);\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n      }\n    }\n  }\n\n  _intersectConvex(shape, quat, position, body, reportedShape, options) {\n    intersectConvex_minDistNormal;\n    const normal = intersectConvex_normal;\n    const vector = intersectConvex_vector;\n    intersectConvex_minDistIntersect;\n    const faceList = options && options.faceList || null; // Checking faces\n\n    const faces = shape.faces;\n    const vertices = shape.vertices;\n    const normals = shape.faceNormals;\n    const direction = this.direction;\n    const from = this.from;\n    const to = this.to;\n    const fromToDistance = from.distanceTo(to);\n    const Nfaces = faceList ? faceList.length : faces.length;\n    const result = this.result;\n\n    for (let j = 0; !result.shouldStop && j < Nfaces; j++) {\n      const fi = faceList ? faceList[j] : j;\n      const face = faces[fi];\n      const faceNormal = normals[fi];\n      const q = quat;\n      const x = position; // determine if ray intersects the plane of the face\n      // note: this works regardless of the direction of the face normal\n      // Get plane point in world coordinates...\n\n      vector.copy(vertices[face[0]]);\n      q.vmult(vector, vector);\n      vector.vadd(x, vector); // ...but make it relative to the ray from. We'll fix this later.\n\n      vector.vsub(from, vector); // Get plane normal\n\n      q.vmult(faceNormal, normal); // If this dot product is negative, we have something interesting\n\n      const dot = direction.dot(normal); // Bail out if ray and plane are parallel\n\n      if (Math.abs(dot) < this.precision) {\n        continue;\n      } // calc distance to plane\n\n\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n      if (scalar < 0) {\n        continue;\n      } // if (dot < 0) {\n      // Intersection point is from + direction * scalar\n\n\n      direction.scale(scalar, intersectPoint);\n      intersectPoint.vadd(from, intersectPoint); // a is the point we compare points b and c with.\n\n      a.copy(vertices[face[0]]);\n      q.vmult(a, a);\n      x.vadd(a, a);\n\n      for (let i = 1; !result.shouldStop && i < face.length - 1; i++) {\n        // Transform 3 vertices to world coords\n        b.copy(vertices[face[i]]);\n        c.copy(vertices[face[i + 1]]);\n        q.vmult(b, b);\n        q.vmult(c, c);\n        x.vadd(b, b);\n        x.vadd(c, c);\n        const distance = intersectPoint.distanceTo(from);\n\n        if (!(Ray.pointInTriangle(intersectPoint, a, b, c) || Ray.pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance) {\n          continue;\n        }\n\n        this.reportIntersection(normal, intersectPoint, reportedShape, body, fi);\n      } // }\n\n    }\n  }\n  /**\n   * @todo Optimize by transforming the world to local space first.\n   * @todo Use Octree lookup\n   */\n\n\n  _intersectTrimesh(mesh, quat, position, body, reportedShape, options) {\n    const normal = intersectTrimesh_normal;\n    const triangles = intersectTrimesh_triangles;\n    const treeTransform = intersectTrimesh_treeTransform;\n    const vector = intersectConvex_vector;\n    const localDirection = intersectTrimesh_localDirection;\n    const localFrom = intersectTrimesh_localFrom;\n    const localTo = intersectTrimesh_localTo;\n    const worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\n    const worldNormal = intersectTrimesh_worldNormal; // Checking faces\n\n    const indices = mesh.indices;\n    mesh.vertices; // const normals = mesh.faceNormals\n\n    const from = this.from;\n    const to = this.to;\n    const direction = this.direction;\n    treeTransform.position.copy(position);\n    treeTransform.quaternion.copy(quat); // Transform ray to local space!\n\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\n    Transform.pointToLocalFrame(position, quat, to, localTo);\n    localTo.x *= mesh.scale.x;\n    localTo.y *= mesh.scale.y;\n    localTo.z *= mesh.scale.z;\n    localFrom.x *= mesh.scale.x;\n    localFrom.y *= mesh.scale.y;\n    localFrom.z *= mesh.scale.z;\n    localTo.vsub(localFrom, localDirection);\n    localDirection.normalize();\n    const fromToDistanceSquared = localFrom.distanceSquared(localTo);\n    mesh.tree.rayQuery(this, treeTransform, triangles);\n\n    for (let i = 0, N = triangles.length; !this.result.shouldStop && i !== N; i++) {\n      const trianglesIndex = triangles[i];\n      mesh.getNormal(trianglesIndex, normal); // determine if ray intersects the plane of the face\n      // note: this works regardless of the direction of the face normal\n      // Get plane point in world coordinates...\n\n      mesh.getVertex(indices[trianglesIndex * 3], a); // ...but make it relative to the ray from. We'll fix this later.\n\n      a.vsub(localFrom, vector); // If this dot product is negative, we have something interesting\n\n      const dot = localDirection.dot(normal); // Bail out if ray and plane are parallel\n      // if (Math.abs( dot ) < this.precision){\n      //     continue;\n      // }\n      // calc distance to plane\n\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n      if (scalar < 0) {\n        continue;\n      } // Intersection point is from + direction * scalar\n\n\n      localDirection.scale(scalar, intersectPoint);\n      intersectPoint.vadd(localFrom, intersectPoint); // Get triangle vertices\n\n      mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\n      mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\n      const squaredDistance = intersectPoint.distanceSquared(localFrom);\n\n      if (!(Ray.pointInTriangle(intersectPoint, b, a, c) || Ray.pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared) {\n        continue;\n      } // transform intersectpoint and normal to world\n\n\n      Transform.vectorToWorldFrame(quat, normal, worldNormal);\n      Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\n      this.reportIntersection(worldNormal, worldIntersectPoint, reportedShape, body, trianglesIndex);\n    }\n\n    triangles.length = 0;\n  }\n  /**\n   * @return True if the intersections should continue\n   */\n\n\n  reportIntersection(normal, hitPointWorld, shape, body, hitFaceIndex) {\n    const from = this.from;\n    const to = this.to;\n    const distance = from.distanceTo(hitPointWorld);\n    const result = this.result; // Skip back faces?\n\n    if (this.skipBackfaces && normal.dot(this.direction) > 0) {\n      return;\n    }\n\n    result.hitFaceIndex = typeof hitFaceIndex !== 'undefined' ? hitFaceIndex : -1;\n\n    switch (this.mode) {\n      case Ray.ALL:\n        this.hasHit = true;\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        result.hasHit = true;\n        this.callback(result);\n        break;\n\n      case Ray.CLOSEST:\n        // Store if closer than current closest\n        if (distance < result.distance || !result.hasHit) {\n          this.hasHit = true;\n          result.hasHit = true;\n          result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        }\n\n        break;\n\n      case Ray.ANY:\n        // Report and stop.\n        this.hasHit = true;\n        result.hasHit = true;\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        result.shouldStop = true;\n        break;\n    }\n  }\n  /**\n   * As per \"Barycentric Technique\" as named\n   * {@link https://www.blackpawn.com/texts/pointinpoly/default.html here} but without the division\n   */\n\n\n  static pointInTriangle(p, a, b, c) {\n    c.vsub(a, v0);\n    b.vsub(a, v1);\n    p.vsub(a, v2);\n    const dot00 = v0.dot(v0);\n    const dot01 = v0.dot(v1);\n    const dot02 = v0.dot(v2);\n    const dot11 = v1.dot(v1);\n    const dot12 = v1.dot(v2);\n    let u;\n    let v;\n    return (u = dot11 * dot02 - dot01 * dot12) >= 0 && (v = dot00 * dot12 - dot01 * dot02) >= 0 && u + v < dot00 * dot11 - dot01 * dot01;\n  }\n\n}\nRay.CLOSEST = RAY_MODES.CLOSEST;\nRay.ANY = RAY_MODES.ANY;\nRay.ALL = RAY_MODES.ALL;\nconst tmpAABB$1 = new AABB();\nconst tmpArray = [];\nconst v1 = new Vec3();\nconst v2 = new Vec3();\nconst intersectBody_xi = new Vec3();\nconst intersectBody_qi = new Quaternion();\nconst intersectPoint = new Vec3();\nconst a = new Vec3();\nconst b = new Vec3();\nconst c = new Vec3();\nnew Vec3();\nnew RaycastResult();\nconst intersectConvexOptions = {\n  faceList: [0]\n};\nconst worldPillarOffset = new Vec3();\nconst intersectHeightfield_localRay = new Ray();\nconst intersectHeightfield_index = [];\nconst Ray_intersectSphere_intersectionPoint = new Vec3();\nconst Ray_intersectSphere_normal = new Vec3();\nconst intersectConvex_normal = new Vec3();\nconst intersectConvex_minDistNormal = new Vec3();\nconst intersectConvex_minDistIntersect = new Vec3();\nconst intersectConvex_vector = new Vec3();\nconst intersectTrimesh_normal = new Vec3();\nconst intersectTrimesh_localDirection = new Vec3();\nconst intersectTrimesh_localFrom = new Vec3();\nconst intersectTrimesh_localTo = new Vec3();\nconst intersectTrimesh_worldNormal = new Vec3();\nconst intersectTrimesh_worldIntersectPoint = new Vec3();\nnew AABB();\nconst intersectTrimesh_triangles = [];\nconst intersectTrimesh_treeTransform = new Transform();\nconst v0 = new Vec3();\nconst intersect = new Vec3();\n\nfunction distanceFromIntersection(from, direction, position) {\n  // v0 is vector from from to position\n  position.vsub(from, v0);\n  const dot = v0.dot(direction); // intersect = direction*dot + from\n\n  direction.scale(dot, intersect);\n  intersect.vadd(from, intersect);\n  const distance = position.distanceTo(intersect);\n  return distance;\n}\n\n/**\n * Sweep and prune broadphase along one axis.\n */\nclass SAPBroadphase extends Broadphase {\n  /**\n   * List of bodies currently in the broadphase.\n   */\n\n  /**\n   * The world to search in.\n   */\n\n  /**\n   * Axis to sort the bodies along.\n   * Set to 0 for x axis, and 1 for y axis.\n   * For best performance, pick the axis where bodies are most distributed.\n   */\n\n  /**\n   * Check if the bounds of two bodies overlap, along the given SAP axis.\n   */\n  static checkBounds(bi, bj, axisIndex) {\n    let biPos;\n    let bjPos;\n\n    if (axisIndex === 0) {\n      biPos = bi.position.x;\n      bjPos = bj.position.x;\n    } else if (axisIndex === 1) {\n      biPos = bi.position.y;\n      bjPos = bj.position.y;\n    } else if (axisIndex === 2) {\n      biPos = bi.position.z;\n      bjPos = bj.position.z;\n    }\n\n    const ri = bi.boundingRadius,\n          rj = bj.boundingRadius,\n          boundA2 = biPos + ri,\n          boundB1 = bjPos - rj;\n    return boundB1 < boundA2;\n  } // Note: these are identical, save for x/y/z lowerbound\n\n  /**\n   * insertionSortX\n   */\n\n\n  static insertionSortX(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n  /**\n   * insertionSortY\n   */\n\n\n  static insertionSortY(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n  /**\n   * insertionSortZ\n   */\n\n\n  static insertionSortZ(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n\n  constructor(world) {\n    super();\n    this.axisList = [];\n    this.world = null;\n    this.axisIndex = 0;\n    const axisList = this.axisList;\n\n    this._addBodyHandler = event => {\n      axisList.push(event.body);\n    };\n\n    this._removeBodyHandler = event => {\n      const idx = axisList.indexOf(event.body);\n\n      if (idx !== -1) {\n        axisList.splice(idx, 1);\n      }\n    };\n\n    if (world) {\n      this.setWorld(world);\n    }\n  }\n  /**\n   * Change the world\n   */\n\n\n  setWorld(world) {\n    // Clear the old axis array\n    this.axisList.length = 0; // Add all bodies from the new world\n\n    for (let i = 0; i < world.bodies.length; i++) {\n      this.axisList.push(world.bodies[i]);\n    } // Remove old handlers, if any\n\n\n    world.removeEventListener('addBody', this._addBodyHandler);\n    world.removeEventListener('removeBody', this._removeBodyHandler); // Add handlers to update the list of bodies.\n\n    world.addEventListener('addBody', this._addBodyHandler);\n    world.addEventListener('removeBody', this._removeBodyHandler);\n    this.world = world;\n    this.dirty = true;\n  }\n  /**\n   * Collect all collision pairs\n   */\n\n\n  collisionPairs(world, p1, p2) {\n    const bodies = this.axisList;\n    const N = bodies.length;\n    const axisIndex = this.axisIndex;\n    let i;\n    let j;\n\n    if (this.dirty) {\n      this.sortList();\n      this.dirty = false;\n    } // Look through the list\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      for (j = i + 1; j < N; j++) {\n        const bj = bodies[j];\n\n        if (!this.needBroadphaseCollision(bi, bj)) {\n          continue;\n        }\n\n        if (!SAPBroadphase.checkBounds(bi, bj, axisIndex)) {\n          break;\n        }\n\n        this.intersectionTest(bi, bj, p1, p2);\n      }\n    }\n  }\n\n  sortList() {\n    const axisList = this.axisList;\n    const axisIndex = this.axisIndex;\n    const N = axisList.length; // Update AABBs\n\n    for (let i = 0; i !== N; i++) {\n      const bi = axisList[i];\n\n      if (bi.aabbNeedsUpdate) {\n        bi.updateAABB();\n      }\n    } // Sort the list\n\n\n    if (axisIndex === 0) {\n      SAPBroadphase.insertionSortX(axisList);\n    } else if (axisIndex === 1) {\n      SAPBroadphase.insertionSortY(axisList);\n    } else if (axisIndex === 2) {\n      SAPBroadphase.insertionSortZ(axisList);\n    }\n  }\n  /**\n   * Computes the variance of the body positions and estimates the best axis to use.\n   * Will automatically set property `axisIndex`.\n   */\n\n\n  autoDetectAxis() {\n    let sumX = 0;\n    let sumX2 = 0;\n    let sumY = 0;\n    let sumY2 = 0;\n    let sumZ = 0;\n    let sumZ2 = 0;\n    const bodies = this.axisList;\n    const N = bodies.length;\n    const invN = 1 / N;\n\n    for (let i = 0; i !== N; i++) {\n      const b = bodies[i];\n      const centerX = b.position.x;\n      sumX += centerX;\n      sumX2 += centerX * centerX;\n      const centerY = b.position.y;\n      sumY += centerY;\n      sumY2 += centerY * centerY;\n      const centerZ = b.position.z;\n      sumZ += centerZ;\n      sumZ2 += centerZ * centerZ;\n    }\n\n    const varianceX = sumX2 - sumX * sumX * invN;\n    const varianceY = sumY2 - sumY * sumY * invN;\n    const varianceZ = sumZ2 - sumZ * sumZ * invN;\n\n    if (varianceX > varianceY) {\n      if (varianceX > varianceZ) {\n        this.axisIndex = 0;\n      } else {\n        this.axisIndex = 2;\n      }\n    } else if (varianceY > varianceZ) {\n      this.axisIndex = 1;\n    } else {\n      this.axisIndex = 2;\n    }\n  }\n  /**\n   * Returns all the bodies within an AABB.\n   * @param result An array to store resulting bodies in.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    if (this.dirty) {\n      this.sortList();\n      this.dirty = false;\n    }\n\n    const axisIndex = this.axisIndex;\n    let axis = 'x';\n\n    if (axisIndex === 1) {\n      axis = 'y';\n    }\n\n    if (axisIndex === 2) {\n      axis = 'z';\n    }\n\n    const axisList = this.axisList;\n    aabb.lowerBound[axis];\n    aabb.upperBound[axis];\n\n    for (let i = 0; i < axisList.length; i++) {\n      const b = axisList[i];\n\n      if (b.aabbNeedsUpdate) {\n        b.updateAABB();\n      }\n\n      if (b.aabb.overlaps(aabb)) {\n        result.push(b);\n      }\n    }\n\n    return result;\n  }\n\n}\n\nclass Utils {\n  /**\n   * Extend an options object with default values.\n   * @param options The options object. May be falsy: in this case, a new object is created and returned.\n   * @param defaults An object containing default values.\n   * @return The modified options object.\n   */\n  static defaults(options, defaults) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    for (let key in defaults) {\n      if (!(key in options)) {\n        options[key] = defaults[key];\n      }\n    }\n\n    return options;\n  }\n\n}\n\n/**\n * Constraint base class\n */\nclass Constraint {\n  /**\n   * Equations to be solved in this constraint.\n   */\n\n  /**\n   * Body A.\n   */\n\n  /**\n   * Body B.\n   */\n\n  /**\n   * Set to false if you don't want the bodies to collide when they are connected.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      collideConnected: true,\n      wakeUpBodies: true\n    });\n    this.equations = [];\n    this.bodyA = bodyA;\n    this.bodyB = bodyB;\n    this.id = Constraint.idCounter++;\n    this.collideConnected = options.collideConnected;\n\n    if (options.wakeUpBodies) {\n      if (bodyA) {\n        bodyA.wakeUp();\n      }\n\n      if (bodyB) {\n        bodyB.wakeUp();\n      }\n    }\n  }\n  /**\n   * Update all the equations with data.\n   */\n\n\n  update() {\n    throw new Error('method update() not implmemented in this Constraint subclass!');\n  }\n  /**\n   * Enables all equations in the constraint.\n   */\n\n\n  enable() {\n    const eqs = this.equations;\n\n    for (let i = 0; i < eqs.length; i++) {\n      eqs[i].enabled = true;\n    }\n  }\n  /**\n   * Disables all equations in the constraint.\n   */\n\n\n  disable() {\n    const eqs = this.equations;\n\n    for (let i = 0; i < eqs.length; i++) {\n      eqs[i].enabled = false;\n    }\n  }\n\n}\nConstraint.idCounter = 0;\n\n/**\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\n */\n\nclass JacobianElement {\n  /**\n   * spatial\n   */\n\n  /**\n   * rotational\n   */\n  constructor() {\n    this.spatial = new Vec3();\n    this.rotational = new Vec3();\n  }\n  /**\n   * Multiply with other JacobianElement\n   */\n\n\n  multiplyElement(element) {\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\n  }\n  /**\n   * Multiply with two vectors\n   */\n\n\n  multiplyVectors(spatial, rotational) {\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\n  }\n\n}\n\n/**\n * Equation base class.\n *\n * `a`, `b` and `eps` are {@link https://www8.cs.umu.se/kurser/5DV058/VT15/lectures/SPOOKlabnotes.pdf SPOOK} parameters that default to `0.0`. See {@link https://github.com/schteppe/cannon.js/issues/238#issuecomment-147172327 this exchange} for more details on Cannon's physics implementation.\n */\nclass Equation {\n  /**\n   * Minimum (read: negative max) force to be applied by the constraint.\n   */\n\n  /**\n   * Maximum (read: positive max) force to be applied by the constraint.\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * A number, proportional to the force added to the bodies.\n   */\n  constructor(bi, bj, minForce, maxForce) {\n    if (minForce === void 0) {\n      minForce = -1e6;\n    }\n\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    this.id = Equation.idCounter++;\n    this.minForce = minForce;\n    this.maxForce = maxForce;\n    this.bi = bi;\n    this.bj = bj;\n    this.a = 0.0; // SPOOK parameter\n\n    this.b = 0.0; // SPOOK parameter\n\n    this.eps = 0.0; // SPOOK parameter\n\n    this.jacobianElementA = new JacobianElement();\n    this.jacobianElementB = new JacobianElement();\n    this.enabled = true;\n    this.multiplier = 0;\n    this.setSpookParams(1e7, 4, 1 / 60); // Set typical spook params\n  }\n  /**\n   * Recalculates a, b, and eps.\n   *\n   * The Equation constructor sets typical SPOOK parameters as such:\n   * * `stiffness` = 1e7\n   * * `relaxation` = 4\n   * * `timeStep`= 1 / 60, _note the hardcoded refresh rate._\n   */\n\n\n  setSpookParams(stiffness, relaxation, timeStep) {\n    const d = relaxation;\n    const k = stiffness;\n    const h = timeStep;\n    this.a = 4.0 / (h * (1 + 4 * d));\n    this.b = 4.0 * d / (1 + 4 * d);\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\n  }\n  /**\n   * Computes the right hand side of the SPOOK equation\n   */\n\n\n  computeB(a, b, h) {\n    const GW = this.computeGW();\n    const Gq = this.computeGq();\n    const GiMf = this.computeGiMf();\n    return -Gq * a - GW * b - GiMf * h;\n  }\n  /**\n   * Computes G*q, where q are the generalized body coordinates\n   */\n\n\n  computeGq() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const xi = bi.position;\n    const xj = bj.position;\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\n  }\n  /**\n   * Computes G*W, where W are the body velocities\n   */\n\n\n  computeGW() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const vi = bi.velocity;\n    const vj = bj.velocity;\n    const wi = bi.angularVelocity;\n    const wj = bj.angularVelocity;\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n  }\n  /**\n   * Computes G*Wlambda, where W are the body velocities\n   */\n\n\n  computeGWlambda() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const vi = bi.vlambda;\n    const vj = bj.vlambda;\n    const wi = bi.wlambda;\n    const wj = bj.wlambda;\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n  }\n  /**\n   * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\n   */\n\n\n  computeGiMf() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const fi = bi.force;\n    const ti = bi.torque;\n    const fj = bj.force;\n    const tj = bj.torque;\n    const invMassi = bi.invMassSolve;\n    const invMassj = bj.invMassSolve;\n    fi.scale(invMassi, iMfi);\n    fj.scale(invMassj, iMfj);\n    bi.invInertiaWorldSolve.vmult(ti, invIi_vmult_taui);\n    bj.invInertiaWorldSolve.vmult(tj, invIj_vmult_tauj);\n    return GA.multiplyVectors(iMfi, invIi_vmult_taui) + GB.multiplyVectors(iMfj, invIj_vmult_tauj);\n  }\n  /**\n   * Computes G*inv(M)*G'\n   */\n\n\n  computeGiMGt() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const invMassi = bi.invMassSolve;\n    const invMassj = bj.invMassSolve;\n    const invIi = bi.invInertiaWorldSolve;\n    const invIj = bj.invInertiaWorldSolve;\n    let result = invMassi + invMassj;\n    invIi.vmult(GA.rotational, tmp);\n    result += tmp.dot(GA.rotational);\n    invIj.vmult(GB.rotational, tmp);\n    result += tmp.dot(GB.rotational);\n    return result;\n  }\n  /**\n   * Add constraint velocity to the bodies.\n   */\n\n\n  addToWlambda(deltalambda) {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const temp = addToWlambda_temp; // Add to linear velocity\n    // v_lambda += inv(M) * delta_lamba * G\n\n    bi.vlambda.addScaledVector(bi.invMassSolve * deltalambda, GA.spatial, bi.vlambda);\n    bj.vlambda.addScaledVector(bj.invMassSolve * deltalambda, GB.spatial, bj.vlambda); // Add to angular velocity\n\n    bi.invInertiaWorldSolve.vmult(GA.rotational, temp);\n    bi.wlambda.addScaledVector(deltalambda, temp, bi.wlambda);\n    bj.invInertiaWorldSolve.vmult(GB.rotational, temp);\n    bj.wlambda.addScaledVector(deltalambda, temp, bj.wlambda);\n  }\n  /**\n   * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\n   */\n\n\n  computeC() {\n    return this.computeGiMGt() + this.eps;\n  }\n\n}\nEquation.idCounter = 0;\nconst iMfi = new Vec3();\nconst iMfj = new Vec3();\nconst invIi_vmult_taui = new Vec3();\nconst invIj_vmult_tauj = new Vec3();\nconst tmp = new Vec3();\nconst addToWlambda_temp = new Vec3();\n\n/**\n * Contact/non-penetration constraint equation\n */\nclass ContactEquation extends Equation {\n  /**\n   * \"bounciness\": u1 = -e*u0\n   */\n\n  /**\n   * World-oriented vector that goes from the center of bi to the contact point.\n   */\n\n  /**\n   * World-oriented vector that starts in body j position and goes to the contact point.\n   */\n\n  /**\n   * Contact normal, pointing out of body i.\n   */\n  constructor(bodyA, bodyB, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB, 0, maxForce);\n    this.restitution = 0.0;\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.ni = new Vec3();\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const bi = this.bi;\n    const bj = this.bj;\n    const ri = this.ri;\n    const rj = this.rj;\n    const rixn = ContactEquation_computeB_temp1;\n    const rjxn = ContactEquation_computeB_temp2;\n    const vi = bi.velocity;\n    const wi = bi.angularVelocity;\n    bi.force;\n    bi.torque;\n    const vj = bj.velocity;\n    const wj = bj.angularVelocity;\n    bj.force;\n    bj.torque;\n    const penetrationVec = ContactEquation_computeB_temp3;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const n = this.ni; // Caluclate cross products\n\n    ri.cross(n, rixn);\n    rj.cross(n, rjxn); // g = xj+rj -(xi+ri)\n    // G = [ -ni  -rixn  ni  rjxn ]\n\n    n.negate(GA.spatial);\n    rixn.negate(GA.rotational);\n    GB.spatial.copy(n);\n    GB.rotational.copy(rjxn); // Calculate the penetration vector\n\n    penetrationVec.copy(bj.position);\n    penetrationVec.vadd(rj, penetrationVec);\n    penetrationVec.vsub(bi.position, penetrationVec);\n    penetrationVec.vsub(ri, penetrationVec);\n    const g = n.dot(penetrationVec); // Compute iteration\n\n    const ePlusOne = this.restitution + 1;\n    const GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n  /**\n   * Get the current relative velocity in the contact point.\n   */\n\n\n  getImpactVelocityAlongNormal() {\n    const vi = ContactEquation_getImpactVelocityAlongNormal_vi;\n    const vj = ContactEquation_getImpactVelocityAlongNormal_vj;\n    const xi = ContactEquation_getImpactVelocityAlongNormal_xi;\n    const xj = ContactEquation_getImpactVelocityAlongNormal_xj;\n    const relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\n    this.bi.position.vadd(this.ri, xi);\n    this.bj.position.vadd(this.rj, xj);\n    this.bi.getVelocityAtWorldPoint(xi, vi);\n    this.bj.getVelocityAtWorldPoint(xj, vj);\n    vi.vsub(vj, relVel);\n    return this.ni.dot(relVel);\n  }\n\n}\nconst ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\n\nconst ContactEquation_computeB_temp2 = new Vec3();\nconst ContactEquation_computeB_temp3 = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\n\n/**\n * Connects two bodies at given offset points.\n * @example\n *     const bodyA = new Body({ mass: 1 })\n *     const bodyB = new Body({ mass: 1 })\n *     bodyA.position.set(-1, 0, 0)\n *     bodyB.position.set(1, 0, 0)\n *     bodyA.addShape(shapeA)\n *     bodyB.addShape(shapeB)\n *     world.addBody(bodyA)\n *     world.addBody(bodyB)\n *     const localPivotA = new Vec3(1, 0, 0)\n *     const localPivotB = new Vec3(-1, 0, 0)\n *     const constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB)\n *     world.addConstraint(constraint)\n */\nclass PointToPointConstraint extends Constraint {\n  /**\n   * Pivot, defined locally in bodyA.\n   */\n\n  /**\n   * Pivot, defined locally in bodyB.\n   */\n\n  /**\n   * @param pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\n   * @param bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\n   * @param pivotB The point relative to the center of mass of bodyB which bodyB is constrained to.\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\n   */\n  constructor(bodyA, pivotA, bodyB, pivotB, maxForce) {\n    if (pivotA === void 0) {\n      pivotA = new Vec3();\n    }\n\n    if (pivotB === void 0) {\n      pivotB = new Vec3();\n    }\n\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB);\n    this.pivotA = pivotA.clone();\n    this.pivotB = pivotB.clone();\n    const x = this.equationX = new ContactEquation(bodyA, bodyB);\n    const y = this.equationY = new ContactEquation(bodyA, bodyB);\n    const z = this.equationZ = new ContactEquation(bodyA, bodyB); // Equations to be fed to the solver\n\n    this.equations.push(x, y, z); // Make the equations bidirectional\n\n    x.minForce = y.minForce = z.minForce = -maxForce;\n    x.maxForce = y.maxForce = z.maxForce = maxForce;\n    x.ni.set(1, 0, 0);\n    y.ni.set(0, 1, 0);\n    z.ni.set(0, 0, 1);\n  }\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const x = this.equationX;\n    const y = this.equationY;\n    const z = this.equationZ; // Rotate the pivots to world space\n\n    bodyA.quaternion.vmult(this.pivotA, x.ri);\n    bodyB.quaternion.vmult(this.pivotB, x.rj);\n    y.ri.copy(x.ri);\n    y.rj.copy(x.rj);\n    z.ri.copy(x.ri);\n    z.rj.copy(x.rj);\n  }\n\n}\n\n/**\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\n */\nclass ConeEquation extends Equation {\n  /**\n   * Local axis in A\n   */\n\n  /**\n   * Local axis in B\n   */\n\n  /**\n   * The \"cone angle\" to keep\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const ni = this.axisA;\n    const nj = this.axisB;\n    const nixnj = tmpVec1$2;\n    const njxni = tmpVec2$2;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // Caluclate cross products\n\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni); // The angle between two vector is:\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\n    // g = a * b\n    // gdot = (b x a) * wi + (a x b) * wj\n    // G = [0 bxa 0 axb]\n    // W = [vi wi vj wj]\n\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n    const g = Math.cos(this.angle) - ni.dot(nj);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst tmpVec1$2 = new Vec3();\nconst tmpVec2$2 = new Vec3();\n\n/**\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\n */\nclass RotationalEquation extends Equation {\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * maxAngle\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n    this.maxAngle = Math.PI / 2;\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const ni = this.axisA;\n    const nj = this.axisB;\n    const nixnj = tmpVec1$1;\n    const njxni = tmpVec2$1;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // Caluclate cross products\n\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni); // g = ni * nj\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\n    // G = [0 njxni 0 nixnj]\n    // W = [vi wi vj wj]\n\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n    const g = Math.cos(this.maxAngle) - ni.dot(nj);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst tmpVec1$1 = new Vec3();\nconst tmpVec2$1 = new Vec3();\n\n/**\n * A Cone Twist constraint, useful for ragdolls.\n */\nclass ConeTwistConstraint extends PointToPointConstraint {\n  /**\n   * The axis direction for the constraint of the body A.\n   */\n\n  /**\n   * The axis direction for the constraint of the body B.\n   */\n\n  /**\n   * The aperture angle of the cone.\n   */\n\n  /**\n   * The twist angle of the joint.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\n    this.collideConnected = !!options.collideConnected;\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n    const c = this.coneEquation = new ConeEquation(bodyA, bodyB, options);\n    const t = this.twistEquation = new RotationalEquation(bodyA, bodyB, options);\n    this.twistAngle = typeof options.twistAngle !== 'undefined' ? options.twistAngle : 0; // Make the cone equation push the bodies toward the cone axis, not outward\n\n    c.maxForce = 0;\n    c.minForce = -maxForce; // Make the twist equation add torque toward the initial position\n\n    t.maxForce = 0;\n    t.minForce = -maxForce;\n    this.equations.push(c, t);\n  }\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const cone = this.coneEquation;\n    const twist = this.twistEquation;\n    super.update(); // Update the axes to the cone constraint\n\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB); // Update the world axes in the twist constraint\n\n    this.axisA.tangents(twist.axisA, twist.axisA);\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\n    this.axisB.tangents(twist.axisB, twist.axisB);\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\n    cone.angle = this.angle;\n    twist.maxAngle = this.twistAngle;\n  }\n\n}\nnew Vec3();\nnew Vec3();\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n */\nclass DistanceConstraint extends Constraint {\n  /**\n   * The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n   */\n\n  /**\n   * @param distance The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB.\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\n   */\n  constructor(bodyA, bodyB, distance, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB);\n\n    if (typeof distance === 'undefined') {\n      distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    this.distance = distance;\n    const eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq); // Make it bidirectional\n\n    eq.minForce = -maxForce;\n    eq.maxForce = maxForce;\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const eq = this.distanceEquation;\n    const halfDist = this.distance * 0.5;\n    const normal = eq.ni;\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.scale(halfDist, eq.ri);\n    normal.scale(-halfDist, eq.rj);\n  }\n\n}\n\n/**\n * Lock constraint. Will remove all degrees of freedom between the bodies.\n */\nclass LockConstraint extends PointToPointConstraint {\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n    const pivotA = new Vec3();\n    const pivotB = new Vec3();\n    const halfWay = new Vec3();\n    bodyA.position.vadd(bodyB.position, halfWay);\n    halfWay.scale(0.5, halfWay);\n    bodyB.pointToLocalFrame(halfWay, pivotB);\n    bodyA.pointToLocalFrame(halfWay, pivotA); // The point-to-point constraint will keep a point shared between the bodies\n\n    super(bodyA, pivotA, bodyB, pivotB, maxForce); // Store initial rotation of the bodies as unit vectors in the local body spaces\n\n    this.xA = bodyA.vectorToLocalFrame(Vec3.UNIT_X);\n    this.xB = bodyB.vectorToLocalFrame(Vec3.UNIT_X);\n    this.yA = bodyA.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.yB = bodyB.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.zA = bodyA.vectorToLocalFrame(Vec3.UNIT_Z);\n    this.zB = bodyB.vectorToLocalFrame(Vec3.UNIT_Z); // ...and the following rotational equations will keep all rotational DOF's in place\n\n    const r1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n    const r2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n    const r3 = this.rotationalEquation3 = new RotationalEquation(bodyA, bodyB, options);\n    this.equations.push(r1, r2, r3);\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    this.motorEquation;\n    const r1 = this.rotationalEquation1;\n    const r2 = this.rotationalEquation2;\n    const r3 = this.rotationalEquation3;\n    LockConstraint_update_tmpVec1;\n    LockConstraint_update_tmpVec2;\n    super.update(); // These vector pairs must be orthogonal\n\n    bodyA.vectorToWorldFrame(this.xA, r1.axisA);\n    bodyB.vectorToWorldFrame(this.yB, r1.axisB);\n    bodyA.vectorToWorldFrame(this.yA, r2.axisA);\n    bodyB.vectorToWorldFrame(this.zB, r2.axisB);\n    bodyA.vectorToWorldFrame(this.zA, r3.axisA);\n    bodyB.vectorToWorldFrame(this.xB, r3.axisB);\n  }\n\n}\nconst LockConstraint_update_tmpVec1 = new Vec3();\nconst LockConstraint_update_tmpVec2 = new Vec3();\n\n/**\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\n */\nclass RotationalMotorEquation extends Equation {\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * Motor velocity.\n   */\n  constructor(bodyA, bodyB, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = new Vec3();\n    this.axisB = new Vec3();\n    this.targetVelocity = 0;\n  }\n\n  computeB(h) {\n    this.a;\n    const b = this.b;\n    this.bi;\n    this.bj;\n    const axisA = this.axisA;\n    const axisB = this.axisB;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // g = 0\n    // gdot = axisA * wi - axisB * wj\n    // gdot = G * W = G * [vi wi vj wj]\n    // =>\n    // G = [0 axisA 0 -axisB]\n\n    GA.rotational.copy(axisA);\n    axisB.negate(GB.rotational);\n    const GW = this.computeGW() - this.targetVelocity;\n    const GiMf = this.computeGiMf();\n    const B = -GW * b - h * GiMf;\n    return B;\n  }\n\n}\n\n/**\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\n */\nclass HingeConstraint extends PointToPointConstraint {\n  /**\n   * Rotation axis, defined locally in bodyA.\n   */\n\n  /**\n   * Rotation axis, defined locally in bodyB.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\n    const axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    axisA.normalize();\n    const axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1, 0, 0);\n    axisB.normalize();\n    this.collideConnected = !!options.collideConnected;\n    const rotational1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n    const rotational2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n    const motor = this.motorEquation = new RotationalMotorEquation(bodyA, bodyB, maxForce);\n    motor.enabled = false; // Not enabled by default\n    // Equations to be fed to the solver\n\n    this.equations.push(rotational1, rotational2, motor);\n  }\n  /**\n   * enableMotor\n   */\n\n\n  enableMotor() {\n    this.motorEquation.enabled = true;\n  }\n  /**\n   * disableMotor\n   */\n\n\n  disableMotor() {\n    this.motorEquation.enabled = false;\n  }\n  /**\n   * setMotorSpeed\n   */\n\n\n  setMotorSpeed(speed) {\n    this.motorEquation.targetVelocity = speed;\n  }\n  /**\n   * setMotorMaxForce\n   */\n\n\n  setMotorMaxForce(maxForce) {\n    this.motorEquation.maxForce = maxForce;\n    this.motorEquation.minForce = -maxForce;\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const motor = this.motorEquation;\n    const r1 = this.rotationalEquation1;\n    const r2 = this.rotationalEquation2;\n    const worldAxisA = HingeConstraint_update_tmpVec1;\n    const worldAxisB = HingeConstraint_update_tmpVec2;\n    const axisA = this.axisA;\n    const axisB = this.axisB;\n    super.update(); // Get world axes\n\n    bodyA.quaternion.vmult(axisA, worldAxisA);\n    bodyB.quaternion.vmult(axisB, worldAxisB);\n    worldAxisA.tangents(r1.axisA, r2.axisA);\n    r1.axisB.copy(worldAxisB);\n    r2.axisB.copy(worldAxisB);\n\n    if (this.motorEquation.enabled) {\n      bodyA.quaternion.vmult(this.axisA, motor.axisA);\n      bodyB.quaternion.vmult(this.axisB, motor.axisB);\n    }\n  }\n\n}\nconst HingeConstraint_update_tmpVec1 = new Vec3();\nconst HingeConstraint_update_tmpVec2 = new Vec3();\n\n/**\n * Constrains the slipping in a contact along a tangent\n */\nclass FrictionEquation extends Equation {\n  // Tangent\n\n  /**\n   * @param slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\n   */\n  constructor(bodyA, bodyB, slipForce) {\n    super(bodyA, bodyB, -slipForce, slipForce);\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.t = new Vec3();\n  }\n\n  computeB(h) {\n    this.a;\n    const b = this.b;\n    this.bi;\n    this.bj;\n    const ri = this.ri;\n    const rj = this.rj;\n    const rixt = FrictionEquation_computeB_temp1;\n    const rjxt = FrictionEquation_computeB_temp2;\n    const t = this.t; // Caluclate cross products\n\n    ri.cross(t, rixt);\n    rj.cross(t, rjxt); // G = [-t -rixt t rjxt]\n    // And remember, this is a pure velocity constraint, g is always zero!\n\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    t.negate(GA.spatial);\n    rixt.negate(GA.rotational);\n    GB.spatial.copy(t);\n    GB.rotational.copy(rjxt);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst FrictionEquation_computeB_temp1 = new Vec3();\nconst FrictionEquation_computeB_temp2 = new Vec3();\n\n/**\n * Defines what happens when two materials meet.\n * @todo Refactor materials to materialA and materialB\n */\nclass ContactMaterial {\n  /**\n   * Identifier of this material.\n   */\n\n  /**\n   * Participating materials.\n   */\n\n  /**\n   * Friction coefficient.\n   * @default 0.3\n   */\n\n  /**\n   * Restitution coefficient.\n   * @default 0.3\n   */\n\n  /**\n   * Stiffness of the produced contact equations.\n   * @default 1e7\n   */\n\n  /**\n   * Relaxation time of the produced contact equations.\n   * @default 3\n   */\n\n  /**\n   * Stiffness of the produced friction equations.\n   * @default 1e7\n   */\n\n  /**\n   * Relaxation time of the produced friction equations\n   * @default 3\n   */\n  constructor(m1, m2, options) {\n    options = Utils.defaults(options, {\n      friction: 0.3,\n      restitution: 0.3,\n      contactEquationStiffness: 1e7,\n      contactEquationRelaxation: 3,\n      frictionEquationStiffness: 1e7,\n      frictionEquationRelaxation: 3\n    });\n    this.id = ContactMaterial.idCounter++;\n    this.materials = [m1, m2];\n    this.friction = options.friction;\n    this.restitution = options.restitution;\n    this.contactEquationStiffness = options.contactEquationStiffness;\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\n  }\n\n}\nContactMaterial.idCounter = 0;\n\n/**\n * Defines a physics material.\n */\nclass Material {\n  /**\n   * Material name.\n   * If options is a string, name will be set to that string.\n   * @todo Deprecate this\n   */\n\n  /** Material id. */\n\n  /**\n   * Friction for this material.\n   * If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\n   */\n\n  /**\n   * Restitution for this material.\n   * If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    let name = ''; // Backwards compatibility fix\n\n    if (typeof options === 'string') {\n      //console.warn(`Passing a string to MaterialOptions is deprecated, and has no effect`)\n      name = options;\n      options = {};\n    }\n\n    this.name = name;\n    this.id = Material.idCounter++;\n    this.friction = typeof options.friction !== 'undefined' ? options.friction : -1;\n    this.restitution = typeof options.restitution !== 'undefined' ? options.restitution : -1;\n  }\n\n}\nMaterial.idCounter = 0;\n\n/**\n * A spring, connecting two bodies.\n * @example\n *     const spring = new Spring(boxBody, sphereBody, {\n *       restLength: 0,\n *       stiffness: 50,\n *       damping: 1,\n *     })\n *\n *     // Compute the force after each step\n *     world.addEventListener('postStep', (event) => {\n *       spring.applyForce()\n *     })\n */\nclass Spring {\n  /**\n   * Rest length of the spring. A number > 0.\n   * @default 1\n   */\n\n  /**\n   * Stiffness of the spring. A number >= 0.\n   * @default 100\n   */\n\n  /**\n   * Damping of the spring. A number >= 0.\n   * @default 1\n   */\n\n  /**\n   * First connected body.\n   */\n\n  /**\n   * Second connected body.\n   */\n\n  /**\n   * Anchor for bodyA in local bodyA coordinates.\n   * Where to hook the spring to body A, in local body coordinates.\n   * @default new Vec3()\n   */\n\n  /**\n   * Anchor for bodyB in local bodyB coordinates.\n   * Where to hook the spring to body B, in local body coordinates.\n   * @default new Vec3()\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.restLength = typeof options.restLength === 'number' ? options.restLength : 1;\n    this.stiffness = options.stiffness || 100;\n    this.damping = options.damping || 1;\n    this.bodyA = bodyA;\n    this.bodyB = bodyB;\n    this.localAnchorA = new Vec3();\n    this.localAnchorB = new Vec3();\n\n    if (options.localAnchorA) {\n      this.localAnchorA.copy(options.localAnchorA);\n    }\n\n    if (options.localAnchorB) {\n      this.localAnchorB.copy(options.localAnchorB);\n    }\n\n    if (options.worldAnchorA) {\n      this.setWorldAnchorA(options.worldAnchorA);\n    }\n\n    if (options.worldAnchorB) {\n      this.setWorldAnchorB(options.worldAnchorB);\n    }\n  }\n  /**\n   * Set the anchor point on body A, using world coordinates.\n   */\n\n\n  setWorldAnchorA(worldAnchorA) {\n    this.bodyA.pointToLocalFrame(worldAnchorA, this.localAnchorA);\n  }\n  /**\n   * Set the anchor point on body B, using world coordinates.\n   */\n\n\n  setWorldAnchorB(worldAnchorB) {\n    this.bodyB.pointToLocalFrame(worldAnchorB, this.localAnchorB);\n  }\n  /**\n   * Get the anchor point on body A, in world coordinates.\n   * @param result The vector to store the result in.\n   */\n\n\n  getWorldAnchorA(result) {\n    this.bodyA.pointToWorldFrame(this.localAnchorA, result);\n  }\n  /**\n   * Get the anchor point on body B, in world coordinates.\n   * @param result The vector to store the result in.\n   */\n\n\n  getWorldAnchorB(result) {\n    this.bodyB.pointToWorldFrame(this.localAnchorB, result);\n  }\n  /**\n   * Apply the spring force to the connected bodies.\n   */\n\n\n  applyForce() {\n    const k = this.stiffness;\n    const d = this.damping;\n    const l = this.restLength;\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const r = applyForce_r;\n    const r_unit = applyForce_r_unit;\n    const u = applyForce_u;\n    const f = applyForce_f;\n    const tmp = applyForce_tmp;\n    const worldAnchorA = applyForce_worldAnchorA;\n    const worldAnchorB = applyForce_worldAnchorB;\n    const ri = applyForce_ri;\n    const rj = applyForce_rj;\n    const ri_x_f = applyForce_ri_x_f;\n    const rj_x_f = applyForce_rj_x_f; // Get world anchors\n\n    this.getWorldAnchorA(worldAnchorA);\n    this.getWorldAnchorB(worldAnchorB); // Get offset points\n\n    worldAnchorA.vsub(bodyA.position, ri);\n    worldAnchorB.vsub(bodyB.position, rj); // Compute distance vector between world anchor points\n\n    worldAnchorB.vsub(worldAnchorA, r);\n    const rlen = r.length();\n    r_unit.copy(r);\n    r_unit.normalize(); // Compute relative velocity of the anchor points, u\n\n    bodyB.velocity.vsub(bodyA.velocity, u); // Add rotational velocity\n\n    bodyB.angularVelocity.cross(rj, tmp);\n    u.vadd(tmp, u);\n    bodyA.angularVelocity.cross(ri, tmp);\n    u.vsub(tmp, u); // F = - k * ( x - L ) - D * ( u )\n\n    r_unit.scale(-k * (rlen - l) - d * u.dot(r_unit), f); // Add forces to bodies\n\n    bodyA.force.vsub(f, bodyA.force);\n    bodyB.force.vadd(f, bodyB.force); // Angular force\n\n    ri.cross(f, ri_x_f);\n    rj.cross(f, rj_x_f);\n    bodyA.torque.vsub(ri_x_f, bodyA.torque);\n    bodyB.torque.vadd(rj_x_f, bodyB.torque);\n  }\n\n}\nconst applyForce_r = new Vec3();\nconst applyForce_r_unit = new Vec3();\nconst applyForce_u = new Vec3();\nconst applyForce_f = new Vec3();\nconst applyForce_worldAnchorA = new Vec3();\nconst applyForce_worldAnchorB = new Vec3();\nconst applyForce_ri = new Vec3();\nconst applyForce_rj = new Vec3();\nconst applyForce_ri_x_f = new Vec3();\nconst applyForce_rj_x_f = new Vec3();\nconst applyForce_tmp = new Vec3();\n\n/**\n * WheelInfo\n */\nclass WheelInfo {\n  /**\n   * Max travel distance of the suspension, in meters.\n   * @default 1\n   */\n\n  /**\n   * Speed to apply to the wheel rotation when the wheel is sliding.\n   * @default -0.1\n   */\n\n  /**\n   * If the customSlidingRotationalSpeed should be used.\n   * @default false\n   */\n\n  /**\n   * sliding\n   */\n\n  /**\n   * Connection point, defined locally in the chassis body frame.\n   */\n\n  /**\n   * chassisConnectionPointWorld\n   */\n\n  /**\n   * directionLocal\n   */\n\n  /**\n   * directionWorld\n   */\n\n  /**\n   * axleLocal\n   */\n\n  /**\n   * axleWorld\n   */\n\n  /**\n   * suspensionRestLength\n   * @default 1\n   */\n\n  /**\n   * suspensionMaxLength\n   * @default 2\n   */\n\n  /**\n   * radius\n   * @default 1\n   */\n\n  /**\n   * suspensionStiffness\n   * @default 100\n   */\n\n  /**\n   * dampingCompression\n   * @default 10\n   */\n\n  /**\n   * dampingRelaxation\n   * @default 10\n   */\n\n  /**\n   * frictionSlip\n   * @default 10.5\n   */\n\n  /** forwardAcceleration */\n\n  /** sideAcceleration */\n\n  /**\n   * steering\n   * @default 0\n   */\n\n  /**\n   * Rotation value, in radians.\n   * @default 0\n   */\n\n  /**\n   * deltaRotation\n   * @default 0\n   */\n\n  /**\n   * rollInfluence\n   * @default 0.01\n   */\n\n  /**\n   * maxSuspensionForce\n   */\n\n  /**\n   * engineForce\n   */\n\n  /**\n   * brake\n   */\n\n  /**\n   * isFrontWheel\n   * @default true\n   */\n\n  /**\n   * clippedInvContactDotSuspension\n   * @default 1\n   */\n\n  /**\n   * suspensionRelativeVelocity\n   * @default 0\n   */\n\n  /**\n   * suspensionForce\n   * @default 0\n   */\n\n  /**\n   * slipInfo\n   */\n\n  /**\n   * skidInfo\n   * @default 0\n   */\n\n  /**\n   * suspensionLength\n   * @default 0\n   */\n\n  /**\n   * sideImpulse\n   */\n\n  /**\n   * forwardImpulse\n   */\n\n  /**\n   * The result from raycasting.\n   */\n\n  /**\n   * Wheel world transform.\n   */\n\n  /**\n   * isInContact\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      chassisConnectionPointLocal: new Vec3(),\n      chassisConnectionPointWorld: new Vec3(),\n      directionLocal: new Vec3(),\n      directionWorld: new Vec3(),\n      axleLocal: new Vec3(),\n      axleWorld: new Vec3(),\n      suspensionRestLength: 1,\n      suspensionMaxLength: 2,\n      radius: 1,\n      suspensionStiffness: 100,\n      dampingCompression: 10,\n      dampingRelaxation: 10,\n      frictionSlip: 10.5,\n      forwardAcceleration: 1,\n      sideAcceleration: 1,\n      steering: 0,\n      rotation: 0,\n      deltaRotation: 0,\n      rollInfluence: 0.01,\n      maxSuspensionForce: Number.MAX_VALUE,\n      isFrontWheel: true,\n      clippedInvContactDotSuspension: 1,\n      suspensionRelativeVelocity: 0,\n      suspensionForce: 0,\n      slipInfo: 0,\n      skidInfo: 0,\n      suspensionLength: 0,\n      maxSuspensionTravel: 1,\n      useCustomSlidingRotationalSpeed: false,\n      customSlidingRotationalSpeed: -0.1\n    });\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n    this.sliding = false;\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n    this.directionLocal = options.directionLocal.clone();\n    this.directionWorld = options.directionWorld.clone();\n    this.axleLocal = options.axleLocal.clone();\n    this.axleWorld = options.axleWorld.clone();\n    this.suspensionRestLength = options.suspensionRestLength;\n    this.suspensionMaxLength = options.suspensionMaxLength;\n    this.radius = options.radius;\n    this.suspensionStiffness = options.suspensionStiffness;\n    this.dampingCompression = options.dampingCompression;\n    this.dampingRelaxation = options.dampingRelaxation;\n    this.frictionSlip = options.frictionSlip;\n    this.forwardAcceleration = options.forwardAcceleration;\n    this.sideAcceleration = options.sideAcceleration;\n    this.steering = 0;\n    this.rotation = 0;\n    this.deltaRotation = 0;\n    this.rollInfluence = options.rollInfluence;\n    this.maxSuspensionForce = options.maxSuspensionForce;\n    this.engineForce = 0;\n    this.brake = 0;\n    this.isFrontWheel = options.isFrontWheel;\n    this.clippedInvContactDotSuspension = 1;\n    this.suspensionRelativeVelocity = 0;\n    this.suspensionForce = 0;\n    this.slipInfo = 0;\n    this.skidInfo = 0;\n    this.suspensionLength = 0;\n    this.sideImpulse = 0;\n    this.forwardImpulse = 0;\n    this.raycastResult = new RaycastResult();\n    this.worldTransform = new Transform();\n    this.isInContact = false;\n  }\n\n  updateWheel(chassis) {\n    const raycastResult = this.raycastResult;\n\n    if (this.isInContact) {\n      const project = raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n      raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n      chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n      const projVel = raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n      if (project >= -0.1) {\n        this.suspensionRelativeVelocity = 0.0;\n        this.clippedInvContactDotSuspension = 1.0 / 0.1;\n      } else {\n        const inv = -1 / project;\n        this.suspensionRelativeVelocity = projVel * inv;\n        this.clippedInvContactDotSuspension = inv;\n      }\n    } else {\n      // Not in contact : position wheel in a nice (rest length) position\n      raycastResult.suspensionLength = this.suspensionRestLength;\n      this.suspensionRelativeVelocity = 0.0;\n      raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n      this.clippedInvContactDotSuspension = 1.0;\n    }\n  }\n\n}\nconst chassis_velocity_at_contactPoint = new Vec3();\nconst relpos = new Vec3();\n\n/**\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\n */\nclass RaycastVehicle {\n  /** The car chassis body. */\n\n  /** The wheels. */\n\n  /** Will be set to true if the car is sliding. */\n\n  /** Index of the right axis. x=0, y=1, z=2 */\n\n  /** Index of the forward axis. x=0, y=1, z=2 */\n\n  /** Index of the up axis. x=0, y=1, z=2 */\n\n  /** The constraints. */\n\n  /** Optional pre-step callback. */\n\n  /** Number of wheels on the ground. */\n  constructor(options) {\n    this.chassisBody = options.chassisBody;\n    this.wheelInfos = [];\n    this.sliding = false;\n    this.world = null;\n    this.indexRightAxis = typeof options.indexRightAxis !== 'undefined' ? options.indexRightAxis : 2;\n    this.indexForwardAxis = typeof options.indexForwardAxis !== 'undefined' ? options.indexForwardAxis : 0;\n    this.indexUpAxis = typeof options.indexUpAxis !== 'undefined' ? options.indexUpAxis : 1;\n    this.constraints = [];\n\n    this.preStepCallback = () => {};\n\n    this.currentVehicleSpeedKmHour = 0;\n    this.numWheelsOnGround = 0;\n  }\n  /**\n   * Add a wheel. For information about the options, see `WheelInfo`.\n   */\n\n\n  addWheel(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const info = new WheelInfo(options);\n    const index = this.wheelInfos.length;\n    this.wheelInfos.push(info);\n    return index;\n  }\n  /**\n   * Set the steering value of a wheel.\n   */\n\n\n  setSteeringValue(value, wheelIndex) {\n    const wheel = this.wheelInfos[wheelIndex];\n    wheel.steering = value;\n  }\n  /**\n   * Set the wheel force to apply on one of the wheels each time step\n   */\n\n\n  applyEngineForce(value, wheelIndex) {\n    this.wheelInfos[wheelIndex].engineForce = value;\n  }\n  /**\n   * Set the braking force of a wheel\n   */\n\n\n  setBrake(brake, wheelIndex) {\n    this.wheelInfos[wheelIndex].brake = brake;\n  }\n  /**\n   * Add the vehicle including its constraints to the world.\n   */\n\n\n  addToWorld(world) {\n    world.addBody(this.chassisBody);\n    const that = this;\n\n    this.preStepCallback = () => {\n      that.updateVehicle(world.dt);\n    };\n\n    world.addEventListener('preStep', this.preStepCallback);\n    this.world = world;\n  }\n  /**\n   * Get one of the wheel axles, world-oriented.\n   */\n\n\n  getVehicleAxisWorld(axisIndex, result) {\n    result.set(axisIndex === 0 ? 1 : 0, axisIndex === 1 ? 1 : 0, axisIndex === 2 ? 1 : 0);\n    this.chassisBody.vectorToWorldFrame(result, result);\n  }\n\n  updateVehicle(timeStep) {\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n    const chassisBody = this.chassisBody;\n\n    for (let i = 0; i < numWheels; i++) {\n      this.updateWheelTransform(i);\n    }\n\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.length();\n    const forwardWorld = new Vec3();\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\n\n    if (forwardWorld.dot(chassisBody.velocity) < 0) {\n      this.currentVehicleSpeedKmHour *= -1;\n    } // simulate suspension\n\n\n    for (let i = 0; i < numWheels; i++) {\n      this.castRay(wheelInfos[i]);\n    }\n\n    this.updateSuspension(timeStep);\n    const impulse = new Vec3();\n    const relpos = new Vec3();\n\n    for (let i = 0; i < numWheels; i++) {\n      //apply suspension force\n      const wheel = wheelInfos[i];\n      let suspensionForce = wheel.suspensionForce;\n\n      if (suspensionForce > wheel.maxSuspensionForce) {\n        suspensionForce = wheel.maxSuspensionForce;\n      }\n\n      wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\n      chassisBody.applyImpulse(impulse, relpos);\n    }\n\n    this.updateFriction(timeStep);\n    const hitNormalWorldScaledWithProj = new Vec3();\n    const fwd = new Vec3();\n    const vel = new Vec3();\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i]; //const relpos = new Vec3();\n      //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\n\n      chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel); // Hack to get the rotation in the correct direction\n\n      let m = 1;\n\n      switch (this.indexUpAxis) {\n        case 1:\n          m = -1;\n          break;\n      }\n\n      if (wheel.isInContact) {\n        this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\n        const proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\n        wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\n        fwd.vsub(hitNormalWorldScaledWithProj, fwd);\n        const proj2 = fwd.dot(vel);\n        wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\n      }\n\n      if ((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed) {\n        // Apply custom rotation when accelerating and sliding\n        wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\n      } // Lock wheels\n\n\n      if (Math.abs(wheel.brake) > Math.abs(wheel.engineForce)) {\n        wheel.deltaRotation = 0;\n      }\n\n      wheel.rotation += wheel.deltaRotation; // Use the old value\n\n      wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\n    }\n  }\n\n  updateSuspension(deltaTime) {\n    const chassisBody = this.chassisBody;\n    const chassisMass = chassisBody.mass;\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n\n    for (let w_it = 0; w_it < numWheels; w_it++) {\n      const wheel = wheelInfos[w_it];\n\n      if (wheel.isInContact) {\n        let force; // Spring\n\n        const susp_length = wheel.suspensionRestLength;\n        const current_length = wheel.suspensionLength;\n        const length_diff = susp_length - current_length;\n        force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension; // Damper\n\n        const projected_rel_vel = wheel.suspensionRelativeVelocity;\n        let susp_damping;\n\n        if (projected_rel_vel < 0) {\n          susp_damping = wheel.dampingCompression;\n        } else {\n          susp_damping = wheel.dampingRelaxation;\n        }\n\n        force -= susp_damping * projected_rel_vel;\n        wheel.suspensionForce = force * chassisMass;\n\n        if (wheel.suspensionForce < 0) {\n          wheel.suspensionForce = 0;\n        }\n      } else {\n        wheel.suspensionForce = 0;\n      }\n    }\n  }\n  /**\n   * Remove the vehicle including its constraints from the world.\n   */\n\n\n  removeFromWorld(world) {\n    this.constraints;\n    world.removeBody(this.chassisBody);\n    world.removeEventListener('preStep', this.preStepCallback);\n    this.world = null;\n  }\n\n  castRay(wheel) {\n    const rayvector = castRay_rayvector;\n    const target = castRay_target;\n    this.updateWheelTransformWorld(wheel);\n    const chassisBody = this.chassisBody;\n    let depth = -1;\n    const raylen = wheel.suspensionRestLength + wheel.radius;\n    wheel.directionWorld.scale(raylen, rayvector);\n    const source = wheel.chassisConnectionPointWorld;\n    source.vadd(rayvector, target);\n    const raycastResult = wheel.raycastResult;\n    raycastResult.reset(); // Turn off ray collision with the chassis temporarily\n\n    const oldState = chassisBody.collisionResponse;\n    chassisBody.collisionResponse = false; // Cast ray against world\n\n    this.world.rayTest(source, target, raycastResult);\n    chassisBody.collisionResponse = oldState;\n    const object = raycastResult.body;\n    wheel.raycastResult.groundObject = 0;\n\n    if (object) {\n      depth = raycastResult.distance;\n      wheel.raycastResult.hitNormalWorld = raycastResult.hitNormalWorld;\n      wheel.isInContact = true;\n      const hitDistance = raycastResult.distance;\n      wheel.suspensionLength = hitDistance - wheel.radius; // clamp on max suspension travel\n\n      const minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\n      const maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\n\n      if (wheel.suspensionLength < minSuspensionLength) {\n        wheel.suspensionLength = minSuspensionLength;\n      }\n\n      if (wheel.suspensionLength > maxSuspensionLength) {\n        wheel.suspensionLength = maxSuspensionLength;\n        wheel.raycastResult.reset();\n      }\n\n      const denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\n      const chassis_velocity_at_contactPoint = new Vec3();\n      chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\n      const projVel = wheel.raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n      if (denominator >= -0.1) {\n        wheel.suspensionRelativeVelocity = 0;\n        wheel.clippedInvContactDotSuspension = 1 / 0.1;\n      } else {\n        const inv = -1 / denominator;\n        wheel.suspensionRelativeVelocity = projVel * inv;\n        wheel.clippedInvContactDotSuspension = inv;\n      }\n    } else {\n      //put wheel info as in rest position\n      wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\n      wheel.suspensionRelativeVelocity = 0.0;\n      wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\n      wheel.clippedInvContactDotSuspension = 1.0;\n    }\n\n    return depth;\n  }\n\n  updateWheelTransformWorld(wheel) {\n    wheel.isInContact = false;\n    const chassisBody = this.chassisBody;\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\n  }\n  /**\n   * Update one of the wheel transform.\n   * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\n   * @param wheelIndex The wheel index to update.\n   */\n\n\n  updateWheelTransform(wheelIndex) {\n    const up = tmpVec4;\n    const right = tmpVec5;\n    const fwd = tmpVec6;\n    const wheel = this.wheelInfos[wheelIndex];\n    this.updateWheelTransformWorld(wheel);\n    wheel.directionLocal.scale(-1, up);\n    right.copy(wheel.axleLocal);\n    up.cross(right, fwd);\n    fwd.normalize();\n    right.normalize(); // Rotate around steering over the wheelAxle\n\n    const steering = wheel.steering;\n    const steeringOrn = new Quaternion();\n    steeringOrn.setFromAxisAngle(up, steering);\n    const rotatingOrn = new Quaternion();\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation); // World rotation of the wheel\n\n    const q = wheel.worldTransform.quaternion;\n    this.chassisBody.quaternion.mult(steeringOrn, q);\n    q.mult(rotatingOrn, q);\n    q.normalize(); // world position of the wheel\n\n    const p = wheel.worldTransform.position;\n    p.copy(wheel.directionWorld);\n    p.scale(wheel.suspensionLength, p);\n    p.vadd(wheel.chassisConnectionPointWorld, p);\n  }\n  /**\n   * Get the world transform of one of the wheels\n   */\n\n\n  getWheelTransformWorld(wheelIndex) {\n    return this.wheelInfos[wheelIndex].worldTransform;\n  }\n\n  updateFriction(timeStep) {\n    const surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj; //calculate the impulse, so that the wheels don't move sidewards\n\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n    const chassisBody = this.chassisBody;\n    const forwardWS = updateFriction_forwardWS;\n    const axle = updateFriction_axle;\n    this.numWheelsOnGround = 0;\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n\n      if (groundObject) {\n        this.numWheelsOnGround++;\n      }\n\n      wheel.sideImpulse = 0;\n      wheel.forwardImpulse = 0;\n\n      if (!forwardWS[i]) {\n        forwardWS[i] = new Vec3();\n      }\n\n      if (!axle[i]) {\n        axle[i] = new Vec3();\n      }\n    }\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n\n      if (groundObject) {\n        const axlei = axle[i];\n        const wheelTrans = this.getWheelTransformWorld(i); // Get world axle\n\n        wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\n        const surfNormalWS = wheel.raycastResult.hitNormalWorld;\n        const proj = axlei.dot(surfNormalWS);\n        surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\n        axlei.vsub(surfNormalWS_scaled_proj, axlei);\n        axlei.normalize();\n        surfNormalWS.cross(axlei, forwardWS[i]);\n        forwardWS[i].normalize();\n        wheel.sideImpulse = resolveSingleBilateral(chassisBody, wheel.raycastResult.hitPointWorld, groundObject, wheel.raycastResult.hitPointWorld, axlei);\n        wheel.sideImpulse *= sideFrictionStiffness2;\n      }\n    }\n\n    const sideFactor = 1;\n    const fwdFactor = 0.5;\n    this.sliding = false;\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n      let rollingFriction = 0;\n      wheel.slipInfo = 1;\n\n      if (groundObject) {\n        const defaultRollingFrictionImpulse = 0;\n        const maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse; // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\n        // rollingFriction = calcRollingFriction(contactPt);\n\n        rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\n        rollingFriction += wheel.engineForce * timeStep; // rollingFriction = 0;\n\n        const factor = maxImpulse / rollingFriction;\n        wheel.slipInfo *= factor;\n      } //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\n\n\n      wheel.forwardImpulse = 0;\n      wheel.skidInfo = 1;\n\n      if (groundObject) {\n        wheel.skidInfo = 1;\n        const maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\n        const maximpSide = maximp;\n        const maximpSquared = maximp * maximpSide;\n        wheel.forwardImpulse = rollingFriction; //wheelInfo.engineForce* timeStep;\n\n        const x = wheel.forwardImpulse * fwdFactor / wheel.forwardAcceleration;\n        const y = wheel.sideImpulse * sideFactor / wheel.sideAcceleration;\n        const impulseSquared = x * x + y * y;\n        wheel.sliding = false;\n\n        if (impulseSquared > maximpSquared) {\n          this.sliding = true;\n          wheel.sliding = true;\n          const factor = maximp / Math.sqrt(impulseSquared);\n          wheel.skidInfo *= factor;\n        }\n      }\n    }\n\n    if (this.sliding) {\n      for (let i = 0; i < numWheels; i++) {\n        const wheel = wheelInfos[i];\n\n        if (wheel.sideImpulse !== 0) {\n          if (wheel.skidInfo < 1) {\n            wheel.forwardImpulse *= wheel.skidInfo;\n            wheel.sideImpulse *= wheel.skidInfo;\n          }\n        }\n      }\n    } // apply the impulses\n\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const rel_pos = new Vec3();\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos); // cannons applyimpulse is using world coord for the position\n      //rel_pos.copy(wheel.raycastResult.hitPointWorld);\n\n      if (wheel.forwardImpulse !== 0) {\n        const impulse = new Vec3();\n        forwardWS[i].scale(wheel.forwardImpulse, impulse);\n        chassisBody.applyImpulse(impulse, rel_pos);\n      }\n\n      if (wheel.sideImpulse !== 0) {\n        const groundObject = wheel.raycastResult.body;\n        const rel_pos2 = new Vec3();\n        wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2); //rel_pos2.copy(wheel.raycastResult.hitPointWorld);\n\n        const sideImp = new Vec3();\n        axle[i].scale(wheel.sideImpulse, sideImp); // Scale the relative position in the up direction with rollInfluence.\n        // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\n\n        chassisBody.vectorToLocalFrame(rel_pos, rel_pos);\n        rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\n        chassisBody.vectorToWorldFrame(rel_pos, rel_pos);\n        chassisBody.applyImpulse(sideImp, rel_pos); //apply friction impulse on the ground\n\n        sideImp.scale(-1, sideImp);\n        groundObject.applyImpulse(sideImp, rel_pos2);\n      }\n    }\n  }\n\n}\nnew Vec3();\nnew Vec3();\nnew Vec3();\nconst tmpVec4 = new Vec3();\nconst tmpVec5 = new Vec3();\nconst tmpVec6 = new Vec3();\nnew Ray();\nnew Vec3();\nconst castRay_rayvector = new Vec3();\nconst castRay_target = new Vec3();\nconst directions = [new Vec3(1, 0, 0), new Vec3(0, 1, 0), new Vec3(0, 0, 1)];\nconst updateFriction_surfNormalWS_scaled_proj = new Vec3();\nconst updateFriction_axle = [];\nconst updateFriction_forwardWS = [];\nconst sideFrictionStiffness2 = 1;\nconst calcRollingFriction_vel1 = new Vec3();\nconst calcRollingFriction_vel2 = new Vec3();\nconst calcRollingFriction_vel = new Vec3();\n\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\n  let j1 = 0;\n  const contactPosWorld = frictionPosWorld; // const rel_pos1 = new Vec3();\n  // const rel_pos2 = new Vec3();\n\n  const vel1 = calcRollingFriction_vel1;\n  const vel2 = calcRollingFriction_vel2;\n  const vel = calcRollingFriction_vel; // contactPosWorld.vsub(body0.position, rel_pos1);\n  // contactPosWorld.vsub(body1.position, rel_pos2);\n\n  body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\n  body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\n  vel1.vsub(vel2, vel);\n  const vrel = frictionDirectionWorld.dot(vel);\n  const denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\n  const denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\n  const relaxation = 1;\n  const jacDiagABInv = relaxation / (denom0 + denom1); // calculate j that moves us to zero relative velocity\n\n  j1 = -vrel * jacDiagABInv;\n\n  if (maxImpulse < j1) {\n    j1 = maxImpulse;\n  }\n\n  if (j1 < -maxImpulse) {\n    j1 = -maxImpulse;\n  }\n\n  return j1;\n}\n\nconst computeImpulseDenominator_r0 = new Vec3();\nconst computeImpulseDenominator_c0 = new Vec3();\nconst computeImpulseDenominator_vec = new Vec3();\nconst computeImpulseDenominator_m = new Vec3();\n\nfunction computeImpulseDenominator(body, pos, normal) {\n  const r0 = computeImpulseDenominator_r0;\n  const c0 = computeImpulseDenominator_c0;\n  const vec = computeImpulseDenominator_vec;\n  const m = computeImpulseDenominator_m;\n  pos.vsub(body.position, r0);\n  r0.cross(normal, c0);\n  body.invInertiaWorld.vmult(c0, m);\n  m.cross(r0, vec);\n  return body.invMass + normal.dot(vec);\n}\n\nconst resolveSingleBilateral_vel1 = new Vec3();\nconst resolveSingleBilateral_vel2 = new Vec3();\nconst resolveSingleBilateral_vel = new Vec3(); // bilateral constraint between two dynamic objects\n\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal) {\n  const normalLenSqr = normal.lengthSquared();\n\n  if (normalLenSqr > 1.1) {\n    return 0; // no impulse\n  } // const rel_pos1 = new Vec3();\n  // const rel_pos2 = new Vec3();\n  // pos1.vsub(body1.position, rel_pos1);\n  // pos2.vsub(body2.position, rel_pos2);\n\n\n  const vel1 = resolveSingleBilateral_vel1;\n  const vel2 = resolveSingleBilateral_vel2;\n  const vel = resolveSingleBilateral_vel;\n  body1.getVelocityAtWorldPoint(pos1, vel1);\n  body2.getVelocityAtWorldPoint(pos2, vel2);\n  vel1.vsub(vel2, vel);\n  const rel_vel = normal.dot(vel);\n  const contactDamping = 0.2;\n  const massTerm = 1 / (body1.invMass + body2.invMass);\n  const impulse = -contactDamping * rel_vel * massTerm;\n  return impulse;\n}\n\n/**\n * Spherical shape\n * @example\n *     const radius = 1\n *     const sphereShape = new CANNON.Sphere(radius)\n *     const sphereBody = new CANNON.Body({ mass: 1, shape: sphereShape })\n *     world.addBody(sphereBody)\n */\nclass Sphere extends Shape {\n  /**\n   * The radius of the sphere.\n   */\n\n  /**\n   *\n   * @param radius The radius of the sphere, a non-negative number.\n   */\n  constructor(radius) {\n    super({\n      type: Shape.types.SPHERE\n    });\n    this.radius = radius !== undefined ? radius : 1.0;\n\n    if (this.radius < 0) {\n      throw new Error('The sphere radius cannot be negative.');\n    }\n\n    this.updateBoundingSphereRadius();\n  }\n  /** calculateLocalInertia */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const I = 2.0 * mass * this.radius * this.radius / 5.0;\n    target.x = I;\n    target.y = I;\n    target.z = I;\n    return target;\n  }\n  /** volume */\n\n\n  volume() {\n    return 4.0 * Math.PI * Math.pow(this.radius, 3) / 3.0;\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = this.radius;\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const r = this.radius;\n    const axes = ['x', 'y', 'z'];\n\n    for (let i = 0; i < axes.length; i++) {\n      const ax = axes[i];\n      min[ax] = pos[ax] - r;\n      max[ax] = pos[ax] + r;\n    }\n  }\n\n}\n\n/**\n * Simple vehicle helper class with spherical rigid body wheels.\n */\nclass RigidVehicle {\n  /**\n   * The bodies of the wheels.\n   */\n\n  /**\n   * The chassis body.\n   */\n\n  /**\n   * The constraints.\n   */\n\n  /**\n   * The wheel axes.\n   */\n\n  /**\n   * The wheel forces.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.wheelBodies = [];\n    this.coordinateSystem = typeof options.coordinateSystem !== 'undefined' ? options.coordinateSystem.clone() : new Vec3(1, 2, 3);\n\n    if (options.chassisBody) {\n      this.chassisBody = options.chassisBody;\n    } else {\n      // No chassis body given. Create it!\n      this.chassisBody = new Body({\n        mass: 1,\n        shape: new Box(new Vec3(5, 0.5, 2))\n      });\n    }\n\n    this.constraints = [];\n    this.wheelAxes = [];\n    this.wheelForces = [];\n  }\n  /**\n   * Add a wheel\n   */\n\n\n  addWheel(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    let wheelBody;\n\n    if (options.body) {\n      wheelBody = options.body;\n    } else {\n      // No wheel body given. Create it!\n      wheelBody = new Body({\n        mass: 1,\n        shape: new Sphere(1.2)\n      });\n    }\n\n    this.wheelBodies.push(wheelBody);\n    this.wheelForces.push(0); // Position constrain wheels\n\n    const position = typeof options.position !== 'undefined' ? options.position.clone() : new Vec3(); // Set position locally to the chassis\n\n    const worldPosition = new Vec3();\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z); // Constrain wheel\n\n    const axis = typeof options.axis !== 'undefined' ? options.axis.clone() : new Vec3(0, 0, 1);\n    this.wheelAxes.push(axis);\n    const hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\n      pivotA: position,\n      axisA: axis,\n      pivotB: Vec3.ZERO,\n      axisB: axis,\n      collideConnected: false\n    });\n    this.constraints.push(hingeConstraint);\n    return this.wheelBodies.length - 1;\n  }\n  /**\n   * Set the steering value of a wheel.\n   * @todo check coordinateSystem\n   */\n\n\n  setSteeringValue(value, wheelIndex) {\n    // Set angle of the hinge axis\n    const axis = this.wheelAxes[wheelIndex];\n    const c = Math.cos(value);\n    const s = Math.sin(value);\n    const x = axis.x;\n    const z = axis.z;\n    this.constraints[wheelIndex].axisA.set(-c * x + s * z, 0, s * x + c * z);\n  }\n  /**\n   * Set the target rotational speed of the hinge constraint.\n   */\n\n\n  setMotorSpeed(value, wheelIndex) {\n    const hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.enableMotor();\n    hingeConstraint.motorTargetVelocity = value;\n  }\n  /**\n   * Set the target rotational speed of the hinge constraint.\n   */\n\n\n  disableMotor(wheelIndex) {\n    const hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.disableMotor();\n  }\n  /**\n   * Set the wheel force to apply on one of the wheels each time step\n   */\n\n\n  setWheelForce(value, wheelIndex) {\n    this.wheelForces[wheelIndex] = value;\n  }\n  /**\n   * Apply a torque on one of the wheels.\n   */\n\n\n  applyWheelForce(value, wheelIndex) {\n    const axis = this.wheelAxes[wheelIndex];\n    const wheelBody = this.wheelBodies[wheelIndex];\n    const bodyTorque = wheelBody.torque;\n    axis.scale(value, torque);\n    wheelBody.vectorToWorldFrame(torque, torque);\n    bodyTorque.vadd(torque, bodyTorque);\n  }\n  /**\n   * Add the vehicle including its constraints to the world.\n   */\n\n\n  addToWorld(world) {\n    const constraints = this.constraints;\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (let i = 0; i < bodies.length; i++) {\n      world.addBody(bodies[i]);\n    }\n\n    for (let i = 0; i < constraints.length; i++) {\n      world.addConstraint(constraints[i]);\n    }\n\n    world.addEventListener('preStep', this._update.bind(this));\n  }\n\n  _update() {\n    const wheelForces = this.wheelForces;\n\n    for (let i = 0; i < wheelForces.length; i++) {\n      this.applyWheelForce(wheelForces[i], i);\n    }\n  }\n  /**\n   * Remove the vehicle including its constraints from the world.\n   */\n\n\n  removeFromWorld(world) {\n    const constraints = this.constraints;\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (let i = 0; i < bodies.length; i++) {\n      world.removeBody(bodies[i]);\n    }\n\n    for (let i = 0; i < constraints.length; i++) {\n      world.removeConstraint(constraints[i]);\n    }\n  }\n  /**\n   * Get current rotational velocity of a wheel\n   */\n\n\n  getWheelSpeed(wheelIndex) {\n    const axis = this.wheelAxes[wheelIndex];\n    const wheelBody = this.wheelBodies[wheelIndex];\n    const w = wheelBody.angularVelocity;\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\n    return w.dot(worldAxis);\n  }\n\n}\nconst torque = new Vec3();\nconst worldAxis = new Vec3();\n\n/**\n * Smoothed-particle hydrodynamics system\n * @todo Make parameters customizable in the constructor\n */\nclass SPHSystem {\n  /**\n   * The particles array.\n   */\n\n  /**\n   * Density of the system (kg/m3).\n   * @default 1\n   */\n\n  /**\n   * Distance below which two particles are considered to be neighbors.\n   * It should be adjusted so there are about 15-20 neighbor particles within this radius.\n   * @default 1\n   */\n\n  /**\n   * @default 1\n   */\n\n  /**\n   * Viscosity of the system.\n   * @default 0.01\n   */\n\n  /**\n   * @default 0.000001\n   */\n  constructor() {\n    this.particles = [];\n    this.density = 1;\n    this.smoothingRadius = 1;\n    this.speedOfSound = 1;\n    this.viscosity = 0.01;\n    this.eps = 0.000001; // Stuff Computed per particle\n\n    this.pressures = [];\n    this.densities = [];\n    this.neighbors = [];\n  }\n  /**\n   * Add a particle to the system.\n   */\n\n\n  add(particle) {\n    this.particles.push(particle);\n\n    if (this.neighbors.length < this.particles.length) {\n      this.neighbors.push([]);\n    }\n  }\n  /**\n   * Remove a particle from the system.\n   */\n\n\n  remove(particle) {\n    const idx = this.particles.indexOf(particle);\n\n    if (idx !== -1) {\n      this.particles.splice(idx, 1);\n\n      if (this.neighbors.length > this.particles.length) {\n        this.neighbors.pop();\n      }\n    }\n  }\n  /**\n   * Get neighbors within smoothing volume, save in the array neighbors\n   */\n\n\n  getNeighbors(particle, neighbors) {\n    const N = this.particles.length;\n    const id = particle.id;\n    const R2 = this.smoothingRadius * this.smoothingRadius;\n    const dist = SPHSystem_getNeighbors_dist;\n\n    for (let i = 0; i !== N; i++) {\n      const p = this.particles[i];\n      p.position.vsub(particle.position, dist);\n\n      if (id !== p.id && dist.lengthSquared() < R2) {\n        neighbors.push(p);\n      }\n    }\n  }\n\n  update() {\n    const N = this.particles.length;\n    const dist = SPHSystem_update_dist;\n    const cs = this.speedOfSound;\n    const eps = this.eps;\n\n    for (let i = 0; i !== N; i++) {\n      const p = this.particles[i]; // Current particle\n\n      const neighbors = this.neighbors[i]; // Get neighbors\n\n      neighbors.length = 0;\n      this.getNeighbors(p, neighbors);\n      neighbors.push(this.particles[i]); // Add current too\n\n      const numNeighbors = neighbors.length; // Accumulate density for the particle\n\n      let sum = 0.0;\n\n      for (let j = 0; j !== numNeighbors; j++) {\n        //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\n        p.position.vsub(neighbors[j].position, dist);\n        const len = dist.length();\n        const weight = this.w(len);\n        sum += neighbors[j].mass * weight;\n      } // Save\n\n\n      this.densities[i] = sum;\n      this.pressures[i] = cs * cs * (this.densities[i] - this.density);\n    } // Add forces\n    // Sum to these accelerations\n\n\n    const a_pressure = SPHSystem_update_a_pressure;\n    const a_visc = SPHSystem_update_a_visc;\n    const gradW = SPHSystem_update_gradW;\n    const r_vec = SPHSystem_update_r_vec;\n    const u = SPHSystem_update_u;\n\n    for (let i = 0; i !== N; i++) {\n      const particle = this.particles[i];\n      a_pressure.set(0, 0, 0);\n      a_visc.set(0, 0, 0); // Init vars\n\n      let Pij;\n      let nabla;\n\n      const neighbors = this.neighbors[i];\n      const numNeighbors = neighbors.length; //printf(\"Neighbors: \");\n\n      for (let j = 0; j !== numNeighbors; j++) {\n        const neighbor = neighbors[j]; //printf(\"%d \",nj);\n        // Get r once for all..\n\n        particle.position.vsub(neighbor.position, r_vec);\n        const r = r_vec.length(); // Pressure contribution\n\n        Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i] * this.densities[i] + eps) + this.pressures[j] / (this.densities[j] * this.densities[j] + eps));\n        this.gradw(r_vec, gradW); // Add to pressure acceleration\n\n        gradW.scale(Pij, gradW);\n        a_pressure.vadd(gradW, a_pressure); // Viscosity contribution\n\n        neighbor.velocity.vsub(particle.velocity, u);\n        u.scale(1.0 / (0.0001 + this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass, u);\n        nabla = this.nablaw(r);\n        u.scale(nabla, u); // Add to viscosity acceleration\n\n        a_visc.vadd(u, a_visc);\n      } // Calculate force\n\n\n      a_visc.scale(particle.mass, a_visc);\n      a_pressure.scale(particle.mass, a_pressure); // Add force to particles\n\n      particle.force.vadd(a_visc, particle.force);\n      particle.force.vadd(a_pressure, particle.force);\n    }\n  } // Calculate the weight using the W(r) weightfunction\n\n\n  w(r) {\n    // 315\n    const h = this.smoothingRadius;\n    return 315.0 / (64.0 * Math.PI * h ** 9) * (h * h - r * r) ** 3;\n  } // calculate gradient of the weight function\n\n\n  gradw(rVec, resultVec) {\n    const r = rVec.length();\n    const h = this.smoothingRadius;\n    rVec.scale(945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) ** 2, resultVec);\n  } // Calculate nabla(W)\n\n\n  nablaw(r) {\n    const h = this.smoothingRadius;\n    const nabla = 945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) * (7 * r * r - 3 * h * h);\n    return nabla;\n  }\n\n}\nconst SPHSystem_getNeighbors_dist = new Vec3(); // Temp vectors for calculation\n\nconst SPHSystem_update_dist = new Vec3(); // Relative velocity\n\nconst SPHSystem_update_a_pressure = new Vec3();\nconst SPHSystem_update_a_visc = new Vec3();\nconst SPHSystem_update_gradW = new Vec3();\nconst SPHSystem_update_r_vec = new Vec3();\nconst SPHSystem_update_u = new Vec3();\n\n/**\n * Cylinder class.\n * @example\n *     const radiusTop = 0.5\n *     const radiusBottom = 0.5\n *     const height = 2\n *     const numSegments = 12\n *     const cylinderShape = new CANNON.Cylinder(radiusTop, radiusBottom, height, numSegments)\n *     const cylinderBody = new CANNON.Body({ mass: 1, shape: cylinderShape })\n *     world.addBody(cylinderBody)\n */\n\nclass Cylinder extends ConvexPolyhedron {\n  /** The radius of the top of the Cylinder. */\n\n  /** The radius of the bottom of the Cylinder. */\n\n  /** The height of the Cylinder. */\n\n  /** The number of segments to build the cylinder out of. */\n\n  /**\n   * @param radiusTop The radius of the top of the Cylinder.\n   * @param radiusBottom The radius of the bottom of the Cylinder.\n   * @param height The height of the Cylinder.\n   * @param numSegments The number of segments to build the cylinder out of.\n   */\n  constructor(radiusTop, radiusBottom, height, numSegments) {\n    if (radiusTop === void 0) {\n      radiusTop = 1;\n    }\n\n    if (radiusBottom === void 0) {\n      radiusBottom = 1;\n    }\n\n    if (height === void 0) {\n      height = 1;\n    }\n\n    if (numSegments === void 0) {\n      numSegments = 8;\n    }\n\n    if (radiusTop < 0) {\n      throw new Error('The cylinder radiusTop cannot be negative.');\n    }\n\n    if (radiusBottom < 0) {\n      throw new Error('The cylinder radiusBottom cannot be negative.');\n    }\n\n    const N = numSegments;\n    const vertices = [];\n    const axes = [];\n    const faces = [];\n    const bottomface = [];\n    const topface = [];\n    const cos = Math.cos;\n    const sin = Math.sin; // First bottom point\n\n    vertices.push(new Vec3(-radiusBottom * sin(0), -height * 0.5, radiusBottom * cos(0)));\n    bottomface.push(0); // First top point\n\n    vertices.push(new Vec3(-radiusTop * sin(0), height * 0.5, radiusTop * cos(0)));\n    topface.push(1);\n\n    for (let i = 0; i < N; i++) {\n      const theta = 2 * Math.PI / N * (i + 1);\n      const thetaN = 2 * Math.PI / N * (i + 0.5);\n\n      if (i < N - 1) {\n        // Bottom\n        vertices.push(new Vec3(-radiusBottom * sin(theta), -height * 0.5, radiusBottom * cos(theta)));\n        bottomface.push(2 * i + 2); // Top\n\n        vertices.push(new Vec3(-radiusTop * sin(theta), height * 0.5, radiusTop * cos(theta)));\n        topface.push(2 * i + 3); // Face\n\n        faces.push([2 * i, 2 * i + 1, 2 * i + 3, 2 * i + 2]);\n      } else {\n        faces.push([2 * i, 2 * i + 1, 1, 0]); // Connect\n      } // Axis: we can cut off half of them if we have even number of segments\n\n\n      if (N % 2 === 1 || i < N / 2) {\n        axes.push(new Vec3(-sin(thetaN), 0, cos(thetaN)));\n      }\n    }\n\n    faces.push(bottomface);\n    axes.push(new Vec3(0, 1, 0)); // Reorder top face\n\n    const temp = [];\n\n    for (let i = 0; i < topface.length; i++) {\n      temp.push(topface[topface.length - i - 1]);\n    }\n\n    faces.push(temp);\n    super({\n      vertices,\n      faces,\n      axes\n    });\n    this.type = Shape.types.CYLINDER;\n    this.radiusTop = radiusTop;\n    this.radiusBottom = radiusBottom;\n    this.height = height;\n    this.numSegments = numSegments;\n  }\n\n}\n\n/**\n * Particle shape.\n * @example\n *     const particleShape = new CANNON.Particle()\n *     const particleBody = new CANNON.Body({ mass: 1, shape: particleShape })\n *     world.addBody(particleBody)\n */\nclass Particle extends Shape {\n  constructor() {\n    super({\n      type: Shape.types.PARTICLE\n    });\n  }\n  /**\n   * calculateLocalInertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.set(0, 0, 0);\n    return target;\n  }\n\n  volume() {\n    return 0;\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = 0;\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    // Get each axis max\n    min.copy(pos);\n    max.copy(pos);\n  }\n\n}\n\n/**\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a Body and rotate that body. See the demos.\n * @example\n *     const planeShape = new CANNON.Plane()\n *     const planeBody = new CANNON.Body({ mass: 0, shape:  planeShape })\n *     planeBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0) // make it face up\n *     world.addBody(planeBody)\n */\nclass Plane extends Shape {\n  /** worldNormal */\n\n  /** worldNormalNeedsUpdate */\n  constructor() {\n    super({\n      type: Shape.types.PLANE\n    }); // World oriented normal\n\n    this.worldNormal = new Vec3();\n    this.worldNormalNeedsUpdate = true;\n    this.boundingSphereRadius = Number.MAX_VALUE;\n  }\n  /** computeWorldNormal */\n\n\n  computeWorldNormal(quat) {\n    const n = this.worldNormal;\n    n.set(0, 0, 1);\n    quat.vmult(n, n);\n    this.worldNormalNeedsUpdate = false;\n  }\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    return target;\n  }\n\n  volume() {\n    return (// The plane is infinite...\n      Number.MAX_VALUE\n    );\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    // The plane AABB is infinite, except if the normal is pointing along any axis\n    tempNormal.set(0, 0, 1); // Default plane normal is z\n\n    quat.vmult(tempNormal, tempNormal);\n    const maxVal = Number.MAX_VALUE;\n    min.set(-maxVal, -maxVal, -maxVal);\n    max.set(maxVal, maxVal, maxVal);\n\n    if (tempNormal.x === 1) {\n      max.x = pos.x;\n    } else if (tempNormal.x === -1) {\n      min.x = pos.x;\n    }\n\n    if (tempNormal.y === 1) {\n      max.y = pos.y;\n    } else if (tempNormal.y === -1) {\n      min.y = pos.y;\n    }\n\n    if (tempNormal.z === 1) {\n      max.z = pos.z;\n    } else if (tempNormal.z === -1) {\n      min.z = pos.z;\n    }\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = Number.MAX_VALUE;\n  }\n\n}\nconst tempNormal = new Vec3();\n\n/**\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\n * @todo Should be possible to use along all axes, not just y\n * @todo should be possible to scale along all axes\n * @todo Refactor elementSize to elementSizeX and elementSizeY\n *\n * @example\n *     // Generate some height data (y-values).\n *     const data = []\n *     for (let i = 0; i < 1000; i++) {\n *         const y = 0.5 * Math.cos(0.2 * i)\n *         data.push(y)\n *     }\n *\n *     // Create the heightfield shape\n *     const heightfieldShape = new CANNON.Heightfield(data, {\n *         elementSize: 1 // Distance between the data points in X and Y directions\n *     })\n *     const heightfieldBody = new CANNON.Body({ shape: heightfieldShape })\n *     world.addBody(heightfieldBody)\n */\nclass Heightfield extends Shape {\n  /**\n   * An array of numbers, or height values, that are spread out along the x axis.\n   */\n\n  /**\n   * Max value of the data points in the data array.\n   */\n\n  /**\n   * Minimum value of the data points in the data array.\n   */\n\n  /**\n   * World spacing between the data points in X and Y direction.\n   * @todo elementSizeX and Y\n   * @default 1\n   */\n\n  /**\n   * @default true\n   */\n\n  /**\n   * @param data An array of numbers, or height values, that are spread out along the x axis.\n   */\n  constructor(data, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      maxValue: null,\n      minValue: null,\n      elementSize: 1\n    });\n    super({\n      type: Shape.types.HEIGHTFIELD\n    });\n    this.data = data;\n    this.maxValue = options.maxValue;\n    this.minValue = options.minValue;\n    this.elementSize = options.elementSize;\n\n    if (options.minValue === null) {\n      this.updateMinValue();\n    }\n\n    if (options.maxValue === null) {\n      this.updateMaxValue();\n    }\n\n    this.cacheEnabled = true;\n    this.pillarConvex = new ConvexPolyhedron();\n    this.pillarOffset = new Vec3();\n    this.updateBoundingSphereRadius(); // \"i_j_isUpper\" => { convex: ..., offset: ... }\n    // for example:\n    // _cachedPillars[\"0_2_1\"]\n\n    this._cachedPillars = {};\n  }\n  /**\n   * Call whenever you change the data array.\n   */\n\n\n  update() {\n    this._cachedPillars = {};\n  }\n  /**\n   * Update the `minValue` property\n   */\n\n\n  updateMinValue() {\n    const data = this.data;\n    let minValue = data[0][0];\n\n    for (let i = 0; i !== data.length; i++) {\n      for (let j = 0; j !== data[i].length; j++) {\n        const v = data[i][j];\n\n        if (v < minValue) {\n          minValue = v;\n        }\n      }\n    }\n\n    this.minValue = minValue;\n  }\n  /**\n   * Update the `maxValue` property\n   */\n\n\n  updateMaxValue() {\n    const data = this.data;\n    let maxValue = data[0][0];\n\n    for (let i = 0; i !== data.length; i++) {\n      for (let j = 0; j !== data[i].length; j++) {\n        const v = data[i][j];\n\n        if (v > maxValue) {\n          maxValue = v;\n        }\n      }\n    }\n\n    this.maxValue = maxValue;\n  }\n  /**\n   * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\n   */\n\n\n  setHeightValueAtIndex(xi, yi, value) {\n    const data = this.data;\n    data[xi][yi] = value; // Invalidate cache\n\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\n\n    if (xi > 0) {\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\n    }\n\n    if (yi > 0) {\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\n    }\n\n    if (yi > 0 && xi > 0) {\n      this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\n    }\n  }\n  /**\n   * Get max/min in a rectangle in the matrix data\n   * @param result An array to store the results in.\n   * @return The result array, if it was passed in. Minimum will be at position 0 and max at 1.\n   */\n\n\n  getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    // Get max and min of the data\n    const data = this.data; // Set first value\n\n    let max = this.minValue;\n\n    for (let i = iMinX; i <= iMaxX; i++) {\n      for (let j = iMinY; j <= iMaxY; j++) {\n        const height = data[i][j];\n\n        if (height > max) {\n          max = height;\n        }\n      }\n    }\n\n    result[0] = this.minValue;\n    result[1] = max;\n  }\n  /**\n   * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\n   * @param result Two-element array\n   * @param clamp If the position should be clamped to the heightfield edge.\n   */\n\n\n  getIndexOfPosition(x, y, result, clamp) {\n    // Get the index of the data points to test against\n    const w = this.elementSize;\n    const data = this.data;\n    let xi = Math.floor(x / w);\n    let yi = Math.floor(y / w);\n    result[0] = xi;\n    result[1] = yi;\n\n    if (clamp) {\n      // Clamp index to edges\n      if (xi < 0) {\n        xi = 0;\n      }\n\n      if (yi < 0) {\n        yi = 0;\n      }\n\n      if (xi >= data.length - 1) {\n        xi = data.length - 1;\n      }\n\n      if (yi >= data[0].length - 1) {\n        yi = data[0].length - 1;\n      }\n    } // Bail out if we are out of the terrain\n\n\n    if (xi < 0 || yi < 0 || xi >= data.length - 1 || yi >= data[0].length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getTriangleAt(x, y, edgeClamp, a, b, c) {\n    const idx = getHeightAt_idx;\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    let xi = idx[0];\n    let yi = idx[1];\n    const data = this.data;\n\n    if (edgeClamp) {\n      xi = Math.min(data.length - 2, Math.max(0, xi));\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n\n    const elementSize = this.elementSize;\n    const lowerDist2 = (x / elementSize - xi) ** 2 + (y / elementSize - yi) ** 2;\n    const upperDist2 = (x / elementSize - (xi + 1)) ** 2 + (y / elementSize - (yi + 1)) ** 2;\n    const upper = lowerDist2 > upperDist2;\n    this.getTriangle(xi, yi, upper, a, b, c);\n    return upper;\n  }\n\n  getNormalAt(x, y, edgeClamp, result) {\n    const a = getNormalAt_a;\n    const b = getNormalAt_b;\n    const c = getNormalAt_c;\n    const e0 = getNormalAt_e0;\n    const e1 = getNormalAt_e1;\n    this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    b.vsub(a, e0);\n    c.vsub(a, e1);\n    e0.cross(e1, result);\n    result.normalize();\n  }\n  /**\n   * Get an AABB of a square in the heightfield\n   * @param xi\n   * @param yi\n   * @param result\n   */\n\n\n  getAabbAtIndex(xi, yi, _ref) {\n    let {\n      lowerBound,\n      upperBound\n    } = _ref;\n    const data = this.data;\n    const elementSize = this.elementSize;\n    lowerBound.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n    upperBound.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n  }\n  /**\n   * Get the height in the heightfield at a given position\n   */\n\n\n  getHeightAt(x, y, edgeClamp) {\n    const data = this.data;\n    const a = getHeightAt_a;\n    const b = getHeightAt_b;\n    const c = getHeightAt_c;\n    const idx = getHeightAt_idx;\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    let xi = idx[0];\n    let yi = idx[1];\n\n    if (edgeClamp) {\n      xi = Math.min(data.length - 2, Math.max(0, xi));\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n\n    const upper = this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    barycentricWeights(x, y, a.x, a.y, b.x, b.y, c.x, c.y, getHeightAt_weights);\n    const w = getHeightAt_weights;\n\n    if (upper) {\n      // Top triangle verts\n      return data[xi + 1][yi + 1] * w.x + data[xi][yi + 1] * w.y + data[xi + 1][yi] * w.z;\n    } else {\n      // Top triangle verts\n      return data[xi][yi] * w.x + data[xi + 1][yi] * w.y + data[xi][yi + 1] * w.z;\n    }\n  }\n\n  getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle) {\n    return `${xi}_${yi}_${getUpperTriangle ? 1 : 0}`;\n  }\n\n  getCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n  }\n\n  setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, convex, offset) {\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\n      convex,\n      offset\n    };\n  }\n\n  clearCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n  }\n  /**\n   * Get a triangle from the heightfield\n   */\n\n\n  getTriangle(xi, yi, upper, a, b, c) {\n    const data = this.data;\n    const elementSize = this.elementSize;\n\n    if (upper) {\n      // Top triangle verts\n      a.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n      b.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n      c.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n    } else {\n      // Top triangle verts\n      a.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n      b.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n      c.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n    }\n  }\n  /**\n   * Get a triangle in the terrain in the form of a triangular convex shape.\n   */\n\n\n  getConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    let result = this.pillarConvex;\n    let offsetResult = this.pillarOffset;\n\n    if (this.cacheEnabled) {\n      const data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\n\n      if (data) {\n        this.pillarConvex = data.convex;\n        this.pillarOffset = data.offset;\n        return;\n      }\n\n      result = new ConvexPolyhedron();\n      offsetResult = new Vec3();\n      this.pillarConvex = result;\n      this.pillarOffset = offsetResult;\n    }\n\n    const data = this.data;\n    const elementSize = this.elementSize;\n    const faces = result.faces; // Reuse verts if possible\n\n    result.vertices.length = 6;\n\n    for (let i = 0; i < 6; i++) {\n      if (!result.vertices[i]) {\n        result.vertices[i] = new Vec3();\n      }\n    } // Reuse faces if possible\n\n\n    faces.length = 5;\n\n    for (let i = 0; i < 5; i++) {\n      if (!faces[i]) {\n        faces[i] = [];\n      }\n    }\n\n    const verts = result.vertices;\n    const h = (Math.min(data[xi][yi], data[xi + 1][yi], data[xi][yi + 1], data[xi + 1][yi + 1]) - this.minValue) / 2 + this.minValue;\n\n    if (!getUpperTriangle) {\n      // Center of the triangle pillar - all polygons are given relative to this one\n      offsetResult.set((xi + 0.25) * elementSize, // sort of center of a triangle\n      (yi + 0.25) * elementSize, h // vertical center\n      ); // Top triangle verts\n\n      verts[0].set(-0.25 * elementSize, -0.25 * elementSize, data[xi][yi] - h);\n      verts[1].set(0.75 * elementSize, -0.25 * elementSize, data[xi + 1][yi] - h);\n      verts[2].set(-0.25 * elementSize, 0.75 * elementSize, data[xi][yi + 1] - h); // bottom triangle verts\n\n      verts[3].set(-0.25 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\n      verts[4].set(0.75 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\n      verts[5].set(-0.25 * elementSize, 0.75 * elementSize, -Math.abs(h) - 1); // top triangle\n\n      faces[0][0] = 0;\n      faces[0][1] = 1;\n      faces[0][2] = 2; // bottom triangle\n\n      faces[1][0] = 5;\n      faces[1][1] = 4;\n      faces[1][2] = 3; // -x facing quad\n\n      faces[2][0] = 0;\n      faces[2][1] = 2;\n      faces[2][2] = 5;\n      faces[2][3] = 3; // -y facing quad\n\n      faces[3][0] = 1;\n      faces[3][1] = 0;\n      faces[3][2] = 3;\n      faces[3][3] = 4; // +xy facing quad\n\n      faces[4][0] = 4;\n      faces[4][1] = 5;\n      faces[4][2] = 2;\n      faces[4][3] = 1;\n    } else {\n      // Center of the triangle pillar - all polygons are given relative to this one\n      offsetResult.set((xi + 0.75) * elementSize, // sort of center of a triangle\n      (yi + 0.75) * elementSize, h // vertical center\n      ); // Top triangle verts\n\n      verts[0].set(0.25 * elementSize, 0.25 * elementSize, data[xi + 1][yi + 1] - h);\n      verts[1].set(-0.75 * elementSize, 0.25 * elementSize, data[xi][yi + 1] - h);\n      verts[2].set(0.25 * elementSize, -0.75 * elementSize, data[xi + 1][yi] - h); // bottom triangle verts\n\n      verts[3].set(0.25 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\n      verts[4].set(-0.75 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\n      verts[5].set(0.25 * elementSize, -0.75 * elementSize, -Math.abs(h) - 1); // Top triangle\n\n      faces[0][0] = 0;\n      faces[0][1] = 1;\n      faces[0][2] = 2; // bottom triangle\n\n      faces[1][0] = 5;\n      faces[1][1] = 4;\n      faces[1][2] = 3; // +x facing quad\n\n      faces[2][0] = 2;\n      faces[2][1] = 5;\n      faces[2][2] = 3;\n      faces[2][3] = 0; // +y facing quad\n\n      faces[3][0] = 3;\n      faces[3][1] = 4;\n      faces[3][2] = 1;\n      faces[3][3] = 0; // -xy facing quad\n\n      faces[4][0] = 1;\n      faces[4][1] = 4;\n      faces[4][2] = 5;\n      faces[4][3] = 2;\n    }\n\n    result.computeNormals();\n    result.computeEdges();\n    result.updateBoundingSphereRadius();\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\n  }\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.set(0, 0, 0);\n    return target;\n  }\n\n  volume() {\n    return (// The terrain is infinite\n      Number.MAX_VALUE\n    );\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    /** @TODO do it properly */\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n  }\n\n  updateBoundingSphereRadius() {\n    // Use the bounding box of the min/max values\n    const data = this.data;\n    const s = this.elementSize;\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).length();\n  }\n  /**\n   * Sets the height values from an image. Currently only supported in browser.\n   */\n\n\n  setHeightsFromImage(image, scale) {\n    const {\n      x,\n      z,\n      y\n    } = scale;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0);\n    const imageData = context.getImageData(0, 0, image.width, image.height);\n    const matrix = this.data;\n    matrix.length = 0;\n    this.elementSize = Math.abs(x) / imageData.width;\n\n    for (let i = 0; i < imageData.height; i++) {\n      const row = [];\n\n      for (let j = 0; j < imageData.width; j++) {\n        const a = imageData.data[(i * imageData.height + j) * 4];\n        const b = imageData.data[(i * imageData.height + j) * 4 + 1];\n        const c = imageData.data[(i * imageData.height + j) * 4 + 2];\n        const height = (a + b + c) / 4 / 255 * z;\n\n        if (x < 0) {\n          row.push(height);\n        } else {\n          row.unshift(height);\n        }\n      }\n\n      if (y < 0) {\n        matrix.unshift(row);\n      } else {\n        matrix.push(row);\n      }\n    }\n\n    this.updateMaxValue();\n    this.updateMinValue();\n    this.update();\n  }\n\n}\nconst getHeightAt_idx = [];\nconst getHeightAt_weights = new Vec3();\nconst getHeightAt_a = new Vec3();\nconst getHeightAt_b = new Vec3();\nconst getHeightAt_c = new Vec3();\nconst getNormalAt_a = new Vec3();\nconst getNormalAt_b = new Vec3();\nconst getNormalAt_c = new Vec3();\nconst getNormalAt_e0 = new Vec3();\nconst getNormalAt_e1 = new Vec3(); // from https://en.wikipedia.org/wiki/Barycentric_coordinate_system\n\nfunction barycentricWeights(x, y, ax, ay, bx, by, cx, cy, result) {\n  result.x = ((by - cy) * (x - cx) + (cx - bx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.y = ((cy - ay) * (x - cx) + (ax - cx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.z = 1 - result.x - result.y;\n}\n\n/**\n * OctreeNode\n */\nclass OctreeNode {\n  /** The root node */\n\n  /** Boundary of this node */\n\n  /** Contained data at the current node level */\n\n  /** Children to this node */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.root = options.root || null;\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n    this.data = [];\n    this.children = [];\n  }\n  /**\n   * reset\n   */\n\n\n  reset() {\n    this.children.length = this.data.length = 0;\n  }\n  /**\n   * Insert data into this node\n   * @return True if successful, otherwise false\n   */\n\n\n  insert(aabb, elementData, level) {\n    if (level === void 0) {\n      level = 0;\n    }\n\n    const nodeData = this.data; // Ignore objects that do not belong in this node\n\n    if (!this.aabb.contains(aabb)) {\n      return false; // object cannot be added\n    }\n\n    const children = this.children;\n    const maxDepth = this.maxDepth || this.root.maxDepth;\n\n    if (level < maxDepth) {\n      // Subdivide if there are no children yet\n      let subdivided = false;\n\n      if (!children.length) {\n        this.subdivide();\n        subdivided = true;\n      } // add to whichever node will accept it\n\n\n      for (let i = 0; i !== 8; i++) {\n        if (children[i].insert(aabb, elementData, level + 1)) {\n          return true;\n        }\n      }\n\n      if (subdivided) {\n        // No children accepted! Might as well just remove em since they contain none\n        children.length = 0;\n      }\n    } // Too deep, or children didnt want it. add it in current node\n\n\n    nodeData.push(elementData);\n    return true;\n  }\n  /**\n   * Create 8 equally sized children nodes and put them in the `children` array.\n   */\n\n\n  subdivide() {\n    const aabb = this.aabb;\n    const l = aabb.lowerBound;\n    const u = aabb.upperBound;\n    const children = this.children;\n    children.push(new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 0, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 0, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 1, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 1, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 1, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 0, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 0, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 1, 0)\n      })\n    }));\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n    const root = this.root || this;\n\n    for (let i = 0; i !== 8; i++) {\n      const child = children[i]; // Set current node as root\n\n      child.root = root; // Compute bounds\n\n      const lowerBound = child.aabb.lowerBound;\n      lowerBound.x *= halfDiagonal.x;\n      lowerBound.y *= halfDiagonal.y;\n      lowerBound.z *= halfDiagonal.z;\n      lowerBound.vadd(l, lowerBound); // Upper bound is always lower bound + halfDiagonal\n\n      lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n  }\n  /**\n   * Get all data, potentially within an AABB\n   * @return The \"result\" object\n   */\n\n\n  aabbQuery(aabb, result) {\n    this.data; // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n\n    this.children; // for (let i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    const queue = [this];\n\n    while (queue.length) {\n      const node = queue.pop();\n\n      if (node.aabb.overlaps(aabb)) {\n        Array.prototype.push.apply(result, node.data);\n      }\n\n      Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n  }\n  /**\n   * Get all data, potentially intersected by a ray.\n   * @return The \"result\" object\n   */\n\n\n  rayQuery(ray, treeTransform, result) {\n    // Use aabb query for now.\n\n    /** @todo implement real ray query which needs less lookups */\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n    return result;\n  }\n  /**\n   * removeEmptyNodes\n   */\n\n\n  removeEmptyNodes() {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      this.children[i].removeEmptyNodes();\n\n      if (!this.children[i].children.length && !this.children[i].data.length) {\n        this.children.splice(i, 1);\n      }\n    }\n  }\n\n}\n/**\n * Octree\n */\n\n\nclass Octree extends OctreeNode {\n  /**\n   * Maximum subdivision depth\n   * @default 8\n   */\n\n  /**\n   * @param aabb The total AABB of the tree\n   */\n  constructor(aabb, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super({\n      root: null,\n      aabb\n    });\n    this.maxDepth = typeof options.maxDepth !== 'undefined' ? options.maxDepth : 8;\n  }\n\n}\nconst halfDiagonal = new Vec3();\nconst tmpAABB = new AABB();\n\n/**\n * Trimesh.\n * @example\n *     // How to make a mesh with a single triangle\n *     const vertices = [\n *         0, 0, 0, // vertex 0\n *         1, 0, 0, // vertex 1\n *         0, 1, 0  // vertex 2\n *     ]\n *     const indices = [\n *         0, 1, 2  // triangle 0\n *     ]\n *     const trimeshShape = new CANNON.Trimesh(vertices, indices)\n */\nclass Trimesh extends Shape {\n  /**\n   * vertices\n   */\n\n  /**\n   * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\n   */\n\n  /**\n   * The normals data.\n   */\n\n  /**\n   * The local AABB of the mesh.\n   */\n\n  /**\n   * References to vertex pairs, making up all unique edges in the trimesh.\n   */\n\n  /**\n   * Local scaling of the mesh. Use .setScale() to set it.\n   */\n\n  /**\n   * The indexed triangles. Use .updateTree() to update it.\n   */\n  constructor(vertices, indices) {\n    super({\n      type: Shape.types.TRIMESH\n    });\n    this.vertices = new Float32Array(vertices);\n    this.indices = new Int16Array(indices);\n    this.normals = new Float32Array(indices.length);\n    this.aabb = new AABB();\n    this.edges = null;\n    this.scale = new Vec3(1, 1, 1);\n    this.tree = new Octree();\n    this.updateEdges();\n    this.updateNormals();\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n    this.updateTree();\n  }\n  /**\n   * updateTree\n   */\n\n\n  updateTree() {\n    const tree = this.tree;\n    tree.reset();\n    tree.aabb.copy(this.aabb);\n    const scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\n\n    tree.aabb.lowerBound.x *= 1 / scale.x;\n    tree.aabb.lowerBound.y *= 1 / scale.y;\n    tree.aabb.lowerBound.z *= 1 / scale.z;\n    tree.aabb.upperBound.x *= 1 / scale.x;\n    tree.aabb.upperBound.y *= 1 / scale.y;\n    tree.aabb.upperBound.z *= 1 / scale.z; // Insert all triangles\n\n    const triangleAABB = new AABB();\n    const a = new Vec3();\n    const b = new Vec3();\n    const c = new Vec3();\n    const points = [a, b, c];\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      //this.getTriangleVertices(i, a, b, c);\n      // Get unscaled triangle verts\n      const i3 = i * 3;\n\n      this._getUnscaledVertex(this.indices[i3], a);\n\n      this._getUnscaledVertex(this.indices[i3 + 1], b);\n\n      this._getUnscaledVertex(this.indices[i3 + 2], c);\n\n      triangleAABB.setFromPoints(points);\n      tree.insert(triangleAABB, i);\n    }\n\n    tree.removeEmptyNodes();\n  }\n  /**\n   * Get triangles in a local AABB from the trimesh.\n   * @param result An array of integers, referencing the queried triangles.\n   */\n\n\n  getTrianglesInAABB(aabb, result) {\n    unscaledAABB.copy(aabb); // Scale it to local\n\n    const scale = this.scale;\n    const isx = scale.x;\n    const isy = scale.y;\n    const isz = scale.z;\n    const l = unscaledAABB.lowerBound;\n    const u = unscaledAABB.upperBound;\n    l.x /= isx;\n    l.y /= isy;\n    l.z /= isz;\n    u.x /= isx;\n    u.y /= isy;\n    u.z /= isz;\n    return this.tree.aabbQuery(unscaledAABB, result);\n  }\n  /**\n   * setScale\n   */\n\n\n  setScale(scale) {\n    const wasUniform = this.scale.x === this.scale.y && this.scale.y === this.scale.z;\n    const isUniform = scale.x === scale.y && scale.y === scale.z;\n\n    if (!(wasUniform && isUniform)) {\n      // Non-uniform scaling. Need to update normals.\n      this.updateNormals();\n    }\n\n    this.scale.copy(scale);\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n  }\n  /**\n   * Compute the normals of the faces. Will save in the `.normals` array.\n   */\n\n\n  updateNormals() {\n    const n = computeNormals_n; // Generate normals\n\n    const normals = this.normals;\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      const i3 = i * 3;\n      const a = this.indices[i3];\n      const b = this.indices[i3 + 1];\n      const c = this.indices[i3 + 2];\n      this.getVertex(a, va);\n      this.getVertex(b, vb);\n      this.getVertex(c, vc);\n      Trimesh.computeNormal(vb, va, vc, n);\n      normals[i3] = n.x;\n      normals[i3 + 1] = n.y;\n      normals[i3 + 2] = n.z;\n    }\n  }\n  /**\n   * Update the `.edges` property\n   */\n\n\n  updateEdges() {\n    const edges = {};\n\n    const add = (a, b) => {\n      const key = a < b ? `${a}_${b}` : `${b}_${a}`;\n      edges[key] = true;\n    };\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      const i3 = i * 3;\n      const a = this.indices[i3];\n      const b = this.indices[i3 + 1];\n      const c = this.indices[i3 + 2];\n      add(a, b);\n      add(b, c);\n      add(c, a);\n    }\n\n    const keys = Object.keys(edges);\n    this.edges = new Int16Array(keys.length * 2);\n\n    for (let i = 0; i < keys.length; i++) {\n      const indices = keys[i].split('_');\n      this.edges[2 * i] = parseInt(indices[0], 10);\n      this.edges[2 * i + 1] = parseInt(indices[1], 10);\n    }\n  }\n  /**\n   * Get an edge vertex\n   * @param firstOrSecond 0 or 1, depending on which one of the vertices you need.\n   * @param vertexStore Where to store the result\n   */\n\n\n  getEdgeVertex(edgeIndex, firstOrSecond, vertexStore) {\n    const vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\n    this.getVertex(vertexIndex, vertexStore);\n  }\n  /**\n   * Get a vector along an edge.\n   */\n\n\n  getEdgeVector(edgeIndex, vectorStore) {\n    const va = getEdgeVector_va;\n    const vb = getEdgeVector_vb;\n    this.getEdgeVertex(edgeIndex, 0, va);\n    this.getEdgeVertex(edgeIndex, 1, vb);\n    vb.vsub(va, vectorStore);\n  }\n  /**\n   * Get face normal given 3 vertices\n   */\n\n\n  static computeNormal(va, vb, vc, target) {\n    vb.vsub(va, ab);\n    vc.vsub(vb, cb);\n    cb.cross(ab, target);\n\n    if (!target.isZero()) {\n      target.normalize();\n    }\n  }\n  /**\n   * Get vertex i.\n   * @return The \"out\" vector object\n   */\n\n\n  getVertex(i, out) {\n    const scale = this.scale;\n\n    this._getUnscaledVertex(i, out);\n\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  }\n  /**\n   * Get raw vertex i\n   * @return The \"out\" vector object\n   */\n\n\n  _getUnscaledVertex(i, out) {\n    const i3 = i * 3;\n    const vertices = this.vertices;\n    return out.set(vertices[i3], vertices[i3 + 1], vertices[i3 + 2]);\n  }\n  /**\n   * Get a vertex from the trimesh,transformed by the given position and quaternion.\n   * @return The \"out\" vector object\n   */\n\n\n  getWorldVertex(i, pos, quat, out) {\n    this.getVertex(i, out);\n    Transform.pointToWorldFrame(pos, quat, out, out);\n    return out;\n  }\n  /**\n   * Get the three vertices for triangle i.\n   */\n\n\n  getTriangleVertices(i, a, b, c) {\n    const i3 = i * 3;\n    this.getVertex(this.indices[i3], a);\n    this.getVertex(this.indices[i3 + 1], b);\n    this.getVertex(this.indices[i3 + 2], c);\n  }\n  /**\n   * Compute the normal of triangle i.\n   * @return The \"target\" vector object\n   */\n\n\n  getNormal(i, target) {\n    const i3 = i * 3;\n    return target.set(this.normals[i3], this.normals[i3 + 1], this.normals[i3 + 2]);\n  }\n  /**\n   * @return The \"target\" vector object\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabb);\n    const x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x;\n    const y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y;\n    const z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\n    return target.set(1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x));\n  }\n  /**\n   * Compute the local AABB for the trimesh\n   */\n\n\n  computeLocalAABB(aabb) {\n    const l = aabb.lowerBound;\n    const u = aabb.upperBound;\n    const n = this.vertices.length;\n    this.vertices;\n    const v = computeLocalAABB_worldVert;\n    this.getVertex(0, v);\n    l.copy(v);\n    u.copy(v);\n\n    for (let i = 0; i !== n; i++) {\n      this.getVertex(i, v);\n\n      if (v.x < l.x) {\n        l.x = v.x;\n      } else if (v.x > u.x) {\n        u.x = v.x;\n      }\n\n      if (v.y < l.y) {\n        l.y = v.y;\n      } else if (v.y > u.y) {\n        u.y = v.y;\n      }\n\n      if (v.z < l.z) {\n        l.z = v.z;\n      } else if (v.z > u.z) {\n        u.z = v.z;\n      }\n    }\n  }\n  /**\n   * Update the `.aabb` property\n   */\n\n\n  updateAABB() {\n    this.computeLocalAABB(this.aabb);\n  }\n  /**\n   * Will update the `.boundingSphereRadius` property\n   */\n\n\n  updateBoundingSphereRadius() {\n    // Assume points are distributed with local (0,0,0) as center\n    let max2 = 0;\n    const vertices = this.vertices;\n    const v = new Vec3();\n\n    for (let i = 0, N = vertices.length / 3; i !== N; i++) {\n      this.getVertex(i, v);\n      const norm2 = v.lengthSquared();\n\n      if (norm2 > max2) {\n        max2 = norm2;\n      }\n    }\n\n    this.boundingSphereRadius = Math.sqrt(max2);\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    /*\n        const n = this.vertices.length / 3,\n            verts = this.vertices;\n        const minx,miny,minz,maxx,maxy,maxz;\n         const v = tempWorldVertex;\n        for(let i=0; i<n; i++){\n            this.getVertex(i, v);\n            quat.vmult(v, v);\n            pos.vadd(v, v);\n            if (v.x < minx || minx===undefined){\n                minx = v.x;\n            } else if(v.x > maxx || maxx===undefined){\n                maxx = v.x;\n            }\n             if (v.y < miny || miny===undefined){\n                miny = v.y;\n            } else if(v.y > maxy || maxy===undefined){\n                maxy = v.y;\n            }\n             if (v.z < minz || minz===undefined){\n                minz = v.z;\n            } else if(v.z > maxz || maxz===undefined){\n                maxz = v.z;\n            }\n        }\n        min.set(minx,miny,minz);\n        max.set(maxx,maxy,maxz);\n        */\n    // Faster approximation using local AABB\n    const frame = calculateWorldAABB_frame;\n    const result = calculateWorldAABB_aabb;\n    frame.position = pos;\n    frame.quaternion = quat;\n    this.aabb.toWorldFrame(frame, result);\n    min.copy(result.lowerBound);\n    max.copy(result.upperBound);\n  }\n  /**\n   * Get approximate volume\n   */\n\n\n  volume() {\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n  }\n  /**\n   * Create a Trimesh instance, shaped as a torus.\n   */\n\n\n  static createTorus(radius, tube, radialSegments, tubularSegments, arc) {\n    if (radius === void 0) {\n      radius = 1;\n    }\n\n    if (tube === void 0) {\n      tube = 0.5;\n    }\n\n    if (radialSegments === void 0) {\n      radialSegments = 8;\n    }\n\n    if (tubularSegments === void 0) {\n      tubularSegments = 6;\n    }\n\n    if (arc === void 0) {\n      arc = Math.PI * 2;\n    }\n\n    const vertices = [];\n    const indices = [];\n\n    for (let j = 0; j <= radialSegments; j++) {\n      for (let i = 0; i <= tubularSegments; i++) {\n        const u = i / tubularSegments * arc;\n        const v = j / radialSegments * Math.PI * 2;\n        const x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        const y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        const z = tube * Math.sin(v);\n        vertices.push(x, y, z);\n      }\n    }\n\n    for (let j = 1; j <= radialSegments; j++) {\n      for (let i = 1; i <= tubularSegments; i++) {\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    return new Trimesh(vertices, indices);\n  }\n\n}\nconst computeNormals_n = new Vec3();\nconst unscaledAABB = new AABB();\nconst getEdgeVector_va = new Vec3();\nconst getEdgeVector_vb = new Vec3();\nconst cb = new Vec3();\nconst ab = new Vec3();\nconst va = new Vec3();\nconst vb = new Vec3();\nconst vc = new Vec3();\nconst cli_aabb = new AABB();\nconst computeLocalAABB_worldVert = new Vec3();\nconst calculateWorldAABB_frame = new Transform();\nconst calculateWorldAABB_aabb = new AABB();\n\n/**\n * Constraint equation solver base class.\n */\nclass Solver {\n  /**\n   * All equations to be solved\n   */\n\n  /**\n   * @todo remove useless constructor\n   */\n  constructor() {\n    this.equations = [];\n  }\n  /**\n   * Should be implemented in subclasses!\n   * @todo use abstract\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    return (// Should return the number of iterations done!\n      0\n    );\n  }\n  /**\n   * Add an equation\n   */\n\n\n  addEquation(eq) {\n    if (eq.enabled && !eq.bi.isTrigger && !eq.bj.isTrigger) {\n      this.equations.push(eq);\n    }\n  }\n  /**\n   * Remove an equation\n   */\n\n\n  removeEquation(eq) {\n    const eqs = this.equations;\n    const i = eqs.indexOf(eq);\n\n    if (i !== -1) {\n      eqs.splice(i, 1);\n    }\n  }\n  /**\n   * Add all equations\n   */\n\n\n  removeAllEquations() {\n    this.equations.length = 0;\n  }\n\n}\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n */\nclass GSSolver extends Solver {\n  /**\n   * The number of solver iterations determines quality of the constraints in the world.\n   * The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n   */\n\n  /**\n   * When tolerance is reached, the system is assumed to be converged.\n   */\n\n  /**\n   * @todo remove useless constructor\n   */\n  constructor() {\n    super();\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n  }\n  /**\n   * Solve\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    let iter = 0;\n    const maxIter = this.iterations;\n    const tolSquared = this.tolerance * this.tolerance;\n    const equations = this.equations;\n    const Neq = equations.length;\n    const bodies = world.bodies;\n    const Nbodies = bodies.length;\n    const h = dt;\n    let B;\n    let invC;\n    let deltalambda;\n    let deltalambdaTot;\n    let GWlambda;\n    let lambdaj; // Update solve mass\n\n    if (Neq !== 0) {\n      for (let i = 0; i !== Nbodies; i++) {\n        bodies[i].updateSolveMassProperties();\n      }\n    } // Things that do not change during iteration can be computed once\n\n\n    const invCs = GSSolver_solve_invCs;\n    const Bs = GSSolver_solve_Bs;\n    const lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n\n    for (let i = 0; i !== Neq; i++) {\n      const c = equations[i];\n      lambda[i] = 0.0;\n      Bs[i] = c.computeB(h);\n      invCs[i] = 1.0 / c.computeC();\n    }\n\n    if (Neq !== 0) {\n      // Reset vlambda\n      for (let i = 0; i !== Nbodies; i++) {\n        const b = bodies[i];\n        const vlambda = b.vlambda;\n        const wlambda = b.wlambda;\n        vlambda.set(0, 0, 0);\n        wlambda.set(0, 0, 0);\n      } // Iterate over equations\n\n\n      for (iter = 0; iter !== maxIter; iter++) {\n        // Accumulate the total error for each iteration.\n        deltalambdaTot = 0.0;\n\n        for (let j = 0; j !== Neq; j++) {\n          const c = equations[j]; // Compute iteration\n\n          B = Bs[j];\n          invC = invCs[j];\n          lambdaj = lambda[j];\n          GWlambda = c.computeGWlambda();\n          deltalambda = invC * (B - GWlambda - c.eps * lambdaj); // Clamp if we are not within the min/max interval\n\n          if (lambdaj + deltalambda < c.minForce) {\n            deltalambda = c.minForce - lambdaj;\n          } else if (lambdaj + deltalambda > c.maxForce) {\n            deltalambda = c.maxForce - lambdaj;\n          }\n\n          lambda[j] += deltalambda;\n          deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n          c.addToWlambda(deltalambda);\n        } // If the total error is small enough - stop iterate\n\n\n        if (deltalambdaTot * deltalambdaTot < tolSquared) {\n          break;\n        }\n      } // Add result to velocity\n\n\n      for (let i = 0; i !== Nbodies; i++) {\n        const b = bodies[i];\n        const v = b.velocity;\n        const w = b.angularVelocity;\n        b.vlambda.vmul(b.linearFactor, b.vlambda);\n        v.vadd(b.vlambda, v);\n        b.wlambda.vmul(b.angularFactor, b.wlambda);\n        w.vadd(b.wlambda, w);\n      } // Set the `.multiplier` property of each equation\n\n\n      let l = equations.length;\n      const invDt = 1 / h;\n\n      while (l--) {\n        equations[l].multiplier = lambda[l] * invDt;\n      }\n    }\n\n    return iter;\n  }\n\n} // Just temporary number holders that we want to reuse each iteration.\n\nconst GSSolver_solve_lambda = [];\nconst GSSolver_solve_invCs = [];\nconst GSSolver_solve_Bs = [];\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n */\nclass SplitSolver extends Solver {\n  /**\n   * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n   */\n\n  /**\n   * When tolerance is reached, the system is assumed to be converged.\n   */\n\n  /** subsolver */\n  constructor(subsolver) {\n    super();\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = []; // Create needed nodes, reuse if possible\n\n    while (this.nodePool.length < 128) {\n      this.nodePool.push(this.createNode());\n    }\n  }\n  /**\n   * createNode\n   */\n\n\n  createNode() {\n    return {\n      body: null,\n      children: [],\n      eqs: [],\n      visited: false\n    };\n  }\n  /**\n   * Solve the subsystems\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    const nodes = SplitSolver_solve_nodes;\n    const nodePool = this.nodePool;\n    const bodies = world.bodies;\n    const equations = this.equations;\n    const Neq = equations.length;\n    const Nbodies = bodies.length;\n    const subsolver = this.subsolver; // Create needed nodes, reuse if possible\n\n    while (nodePool.length < Nbodies) {\n      nodePool.push(this.createNode());\n    }\n\n    nodes.length = Nbodies;\n\n    for (let i = 0; i < Nbodies; i++) {\n      nodes[i] = nodePool[i];\n    } // Reset node values\n\n\n    for (let i = 0; i !== Nbodies; i++) {\n      const node = nodes[i];\n      node.body = bodies[i];\n      node.children.length = 0;\n      node.eqs.length = 0;\n      node.visited = false;\n    }\n\n    for (let k = 0; k !== Neq; k++) {\n      const eq = equations[k];\n      const i = bodies.indexOf(eq.bi);\n      const j = bodies.indexOf(eq.bj);\n      const ni = nodes[i];\n      const nj = nodes[j];\n      ni.children.push(nj);\n      ni.eqs.push(eq);\n      nj.children.push(ni);\n      nj.eqs.push(eq);\n    }\n\n    let child;\n    let n = 0;\n    let eqs = SplitSolver_solve_eqs;\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n    const dummyWorld = SplitSolver_solve_dummyWorld;\n\n    while (child = getUnvisitedNode(nodes)) {\n      eqs.length = 0;\n      dummyWorld.bodies.length = 0;\n      bfs(child, visitFunc, dummyWorld.bodies, eqs);\n      const Neqs = eqs.length;\n      eqs = eqs.sort(sortById);\n\n      for (let i = 0; i !== Neqs; i++) {\n        subsolver.addEquation(eqs[i]);\n      }\n\n      subsolver.solve(dt, dummyWorld);\n      subsolver.removeAllEquations();\n      n++;\n    }\n\n    return n;\n  }\n\n} // Returns the number of subsystems\n\nconst SplitSolver_solve_nodes = []; // All allocated node objects\n\nconst SplitSolver_solve_eqs = []; // Temp array\n\nconst SplitSolver_solve_dummyWorld = {\n  bodies: []\n}; // Temp object\n\nconst STATIC = Body.STATIC;\n\nfunction getUnvisitedNode(nodes) {\n  const Nnodes = nodes.length;\n\n  for (let i = 0; i !== Nnodes; i++) {\n    const node = nodes[i];\n\n    if (!node.visited && !(node.body.type & STATIC)) {\n      return node;\n    }\n  }\n\n  return false;\n}\n\nconst queue = [];\n\nfunction bfs(root, visitFunc, bds, eqs) {\n  queue.push(root);\n  root.visited = true;\n  visitFunc(root, bds, eqs);\n\n  while (queue.length) {\n    const node = queue.pop(); // Loop over unvisited child nodes\n\n    let child;\n\n    while (child = getUnvisitedNode(node.children)) {\n      child.visited = true;\n      visitFunc(child, bds, eqs);\n      queue.push(child);\n    }\n  }\n}\n\nfunction visitFunc(node, bds, eqs) {\n  bds.push(node.body);\n  const Neqs = node.eqs.length;\n\n  for (let i = 0; i !== Neqs; i++) {\n    const eq = node.eqs[i];\n\n    if (!eqs.includes(eq)) {\n      eqs.push(eq);\n    }\n  }\n}\n\nfunction sortById(a, b) {\n  return b.id - a.id;\n}\n\n/**\n * For pooling objects that can be reused.\n */\nclass Pool {\n  constructor() {\n    this.objects = [];\n    this.type = Object;\n  }\n\n  /**\n   * Release an object after use\n   */\n  release() {\n    const Nargs = arguments.length;\n\n    for (let i = 0; i !== Nargs; i++) {\n      this.objects.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    }\n\n    return this;\n  }\n  /**\n   * Get an object\n   */\n\n\n  get() {\n    if (this.objects.length === 0) {\n      return this.constructObject();\n    } else {\n      return this.objects.pop();\n    }\n  }\n  /**\n   * Construct an object. Should be implemented in each subclass.\n   */\n\n\n  constructObject() {\n    throw new Error('constructObject() not implemented in this Pool subclass yet!');\n  }\n  /**\n   * @return Self, for chaining\n   */\n\n\n  resize(size) {\n    const objects = this.objects;\n\n    while (objects.length > size) {\n      objects.pop();\n    }\n\n    while (objects.length < size) {\n      objects.push(this.constructObject());\n    }\n\n    return this;\n  }\n\n}\n\n/**\n * Vec3Pool\n */\n\nclass Vec3Pool extends Pool {\n  constructor() {\n    super(...arguments);\n    this.type = Vec3;\n  }\n\n  /**\n   * Construct a vector\n   */\n  constructObject() {\n    return new Vec3();\n  }\n\n}\n\n// Naming rule: based of the order in SHAPE_TYPES,\n// the first part of the method is formed by the\n// shape type that comes before, in the second part\n// there is the shape type that comes after in the SHAPE_TYPES list\nconst COLLISION_TYPES = {\n  sphereSphere: Shape.types.SPHERE,\n  spherePlane: Shape.types.SPHERE | Shape.types.PLANE,\n  boxBox: Shape.types.BOX | Shape.types.BOX,\n  sphereBox: Shape.types.SPHERE | Shape.types.BOX,\n  planeBox: Shape.types.PLANE | Shape.types.BOX,\n  convexConvex: Shape.types.CONVEXPOLYHEDRON,\n  sphereConvex: Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON,\n  planeConvex: Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON,\n  boxConvex: Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON,\n  sphereHeightfield: Shape.types.SPHERE | Shape.types.HEIGHTFIELD,\n  boxHeightfield: Shape.types.BOX | Shape.types.HEIGHTFIELD,\n  convexHeightfield: Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD,\n  sphereParticle: Shape.types.PARTICLE | Shape.types.SPHERE,\n  planeParticle: Shape.types.PLANE | Shape.types.PARTICLE,\n  boxParticle: Shape.types.BOX | Shape.types.PARTICLE,\n  convexParticle: Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON,\n  cylinderCylinder: Shape.types.CYLINDER,\n  sphereCylinder: Shape.types.SPHERE | Shape.types.CYLINDER,\n  planeCylinder: Shape.types.PLANE | Shape.types.CYLINDER,\n  boxCylinder: Shape.types.BOX | Shape.types.CYLINDER,\n  convexCylinder: Shape.types.CONVEXPOLYHEDRON | Shape.types.CYLINDER,\n  heightfieldCylinder: Shape.types.HEIGHTFIELD | Shape.types.CYLINDER,\n  particleCylinder: Shape.types.PARTICLE | Shape.types.CYLINDER,\n  sphereTrimesh: Shape.types.SPHERE | Shape.types.TRIMESH,\n  planeTrimesh: Shape.types.PLANE | Shape.types.TRIMESH\n};\n\n/**\n * Helper class for the World. Generates ContactEquations.\n * @todo Sphere-ConvexPolyhedron contacts\n * @todo Contact reduction\n * @todo should move methods to prototype\n */\nclass Narrowphase {\n  /**\n   * Internal storage of pooled contact points.\n   */\n\n  /**\n   * Pooled vectors.\n   */\n  get [COLLISION_TYPES.sphereSphere]() {\n    return this.sphereSphere;\n  }\n\n  get [COLLISION_TYPES.spherePlane]() {\n    return this.spherePlane;\n  }\n\n  get [COLLISION_TYPES.boxBox]() {\n    return this.boxBox;\n  }\n\n  get [COLLISION_TYPES.sphereBox]() {\n    return this.sphereBox;\n  }\n\n  get [COLLISION_TYPES.planeBox]() {\n    return this.planeBox;\n  }\n\n  get [COLLISION_TYPES.convexConvex]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.sphereConvex]() {\n    return this.sphereConvex;\n  }\n\n  get [COLLISION_TYPES.planeConvex]() {\n    return this.planeConvex;\n  }\n\n  get [COLLISION_TYPES.boxConvex]() {\n    return this.boxConvex;\n  }\n\n  get [COLLISION_TYPES.sphereHeightfield]() {\n    return this.sphereHeightfield;\n  }\n\n  get [COLLISION_TYPES.boxHeightfield]() {\n    return this.boxHeightfield;\n  }\n\n  get [COLLISION_TYPES.convexHeightfield]() {\n    return this.convexHeightfield;\n  }\n\n  get [COLLISION_TYPES.sphereParticle]() {\n    return this.sphereParticle;\n  }\n\n  get [COLLISION_TYPES.planeParticle]() {\n    return this.planeParticle;\n  }\n\n  get [COLLISION_TYPES.boxParticle]() {\n    return this.boxParticle;\n  }\n\n  get [COLLISION_TYPES.convexParticle]() {\n    return this.convexParticle;\n  }\n\n  get [COLLISION_TYPES.cylinderCylinder]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.sphereCylinder]() {\n    return this.sphereConvex;\n  }\n\n  get [COLLISION_TYPES.planeCylinder]() {\n    return this.planeConvex;\n  }\n\n  get [COLLISION_TYPES.boxCylinder]() {\n    return this.boxConvex;\n  }\n\n  get [COLLISION_TYPES.convexCylinder]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.heightfieldCylinder]() {\n    return this.heightfieldCylinder;\n  }\n\n  get [COLLISION_TYPES.particleCylinder]() {\n    return this.particleCylinder;\n  }\n\n  get [COLLISION_TYPES.sphereTrimesh]() {\n    return this.sphereTrimesh;\n  }\n\n  get [COLLISION_TYPES.planeTrimesh]() {\n    return this.planeTrimesh;\n  } // get [COLLISION_TYPES.convexTrimesh]() {\n  //   return this.convexTrimesh\n  // }\n\n\n  constructor(world) {\n    this.contactPointPool = [];\n    this.frictionEquationPool = [];\n    this.result = [];\n    this.frictionResult = [];\n    this.v3pool = new Vec3Pool();\n    this.world = world;\n    this.currentContactMaterial = world.defaultContactMaterial;\n    this.enableFrictionReduction = false;\n  }\n  /**\n   * Make a contact object, by using the internal pool or creating a new one.\n   */\n\n\n  createContactEquation(bi, bj, si, sj, overrideShapeA, overrideShapeB) {\n    let c;\n\n    if (this.contactPointPool.length) {\n      c = this.contactPointPool.pop();\n      c.bi = bi;\n      c.bj = bj;\n    } else {\n      c = new ContactEquation(bi, bj);\n    }\n\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n    const cm = this.currentContactMaterial;\n    c.restitution = cm.restitution;\n    c.setSpookParams(cm.contactEquationStiffness, cm.contactEquationRelaxation, this.world.dt);\n    const matA = si.material || bi.material;\n    const matB = sj.material || bj.material;\n\n    if (matA && matB && matA.restitution >= 0 && matB.restitution >= 0) {\n      c.restitution = matA.restitution * matB.restitution;\n    }\n\n    c.si = overrideShapeA || si;\n    c.sj = overrideShapeB || sj;\n    return c;\n  }\n\n  createFrictionEquationsFromContact(contactEquation, outArray) {\n    const bodyA = contactEquation.bi;\n    const bodyB = contactEquation.bj;\n    const shapeA = contactEquation.si;\n    const shapeB = contactEquation.sj;\n    const world = this.world;\n    const cm = this.currentContactMaterial; // If friction or restitution were specified in the material, use them\n\n    let friction = cm.friction;\n    const matA = shapeA.material || bodyA.material;\n    const matB = shapeB.material || bodyB.material;\n\n    if (matA && matB && matA.friction >= 0 && matB.friction >= 0) {\n      friction = matA.friction * matB.friction;\n    }\n\n    if (friction > 0) {\n      // Create 2 tangent equations\n      // Users may provide a force different from global gravity to use when computing contact friction.\n      const mug = friction * (world.frictionGravity || world.gravity).length();\n      let reducedMass = bodyA.invMass + bodyB.invMass;\n\n      if (reducedMass > 0) {\n        reducedMass = 1 / reducedMass;\n      }\n\n      const pool = this.frictionEquationPool;\n      const c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n      const c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n      c1.bi = c2.bi = bodyA;\n      c1.bj = c2.bj = bodyB;\n      c1.minForce = c2.minForce = -mug * reducedMass;\n      c1.maxForce = c2.maxForce = mug * reducedMass; // Copy over the relative vectors\n\n      c1.ri.copy(contactEquation.ri);\n      c1.rj.copy(contactEquation.rj);\n      c2.ri.copy(contactEquation.ri);\n      c2.rj.copy(contactEquation.rj); // Construct tangents\n\n      contactEquation.ni.tangents(c1.t, c2.t); // Set spook params\n\n      c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n      c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n      c1.enabled = c2.enabled = contactEquation.enabled;\n      outArray.push(c1, c2);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Take the average N latest contact point on the plane.\n   */\n\n\n  createFrictionFromAverage(numContacts) {\n    // The last contactEquation\n    let c = this.result[this.result.length - 1]; // Create the result: two \"average\" friction equations\n\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\n      return;\n    }\n\n    const f1 = this.frictionResult[this.frictionResult.length - 2];\n    const f2 = this.frictionResult[this.frictionResult.length - 1];\n    averageNormal.setZero();\n    averageContactPointA.setZero();\n    averageContactPointB.setZero();\n    const bodyA = c.bi;\n    c.bj;\n\n    for (let i = 0; i !== numContacts; i++) {\n      c = this.result[this.result.length - 1 - i];\n\n      if (c.bi !== bodyA) {\n        averageNormal.vadd(c.ni, averageNormal);\n        averageContactPointA.vadd(c.ri, averageContactPointA);\n        averageContactPointB.vadd(c.rj, averageContactPointB);\n      } else {\n        averageNormal.vsub(c.ni, averageNormal);\n        averageContactPointA.vadd(c.rj, averageContactPointA);\n        averageContactPointB.vadd(c.ri, averageContactPointB);\n      }\n    }\n\n    const invNumContacts = 1 / numContacts;\n    averageContactPointA.scale(invNumContacts, f1.ri);\n    averageContactPointB.scale(invNumContacts, f1.rj);\n    f2.ri.copy(f1.ri); // Should be the same\n\n    f2.rj.copy(f1.rj);\n    averageNormal.normalize();\n    averageNormal.tangents(f1.t, f2.t); // return eq;\n  }\n  /**\n   * Generate all contacts between a list of body pairs\n   * @param p1 Array of body indices\n   * @param p2 Array of body indices\n   * @param result Array to store generated contacts\n   * @param oldcontacts Optional. Array of reusable contact objects\n   */\n\n\n  getContacts(p1, p2, world, result, oldcontacts, frictionResult, frictionPool) {\n    // Save old contact objects\n    this.contactPointPool = oldcontacts;\n    this.frictionEquationPool = frictionPool;\n    this.result = result;\n    this.frictionResult = frictionResult;\n    const qi = tmpQuat1;\n    const qj = tmpQuat2;\n    const xi = tmpVec1;\n    const xj = tmpVec2;\n\n    for (let k = 0, N = p1.length; k !== N; k++) {\n      // Get current collision bodies\n      const bi = p1[k];\n      const bj = p2[k]; // Get contact material\n\n      let bodyContactMaterial = null;\n\n      if (bi.material && bj.material) {\n        bodyContactMaterial = world.getContactMaterial(bi.material, bj.material) || null;\n      }\n\n      const justTest = bi.type & Body.KINEMATIC && bj.type & Body.STATIC || bi.type & Body.STATIC && bj.type & Body.KINEMATIC || bi.type & Body.KINEMATIC && bj.type & Body.KINEMATIC;\n\n      for (let i = 0; i < bi.shapes.length; i++) {\n        bi.quaternion.mult(bi.shapeOrientations[i], qi);\n        bi.quaternion.vmult(bi.shapeOffsets[i], xi);\n        xi.vadd(bi.position, xi);\n        const si = bi.shapes[i];\n\n        for (let j = 0; j < bj.shapes.length; j++) {\n          // Compute world transform of shapes\n          bj.quaternion.mult(bj.shapeOrientations[j], qj);\n          bj.quaternion.vmult(bj.shapeOffsets[j], xj);\n          xj.vadd(bj.position, xj);\n          const sj = bj.shapes[j];\n\n          if (!(si.collisionFilterMask & sj.collisionFilterGroup && sj.collisionFilterMask & si.collisionFilterGroup)) {\n            continue;\n          }\n\n          if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n            continue;\n          } // Get collision material\n\n\n          let shapeContactMaterial = null;\n\n          if (si.material && sj.material) {\n            shapeContactMaterial = world.getContactMaterial(si.material, sj.material) || null;\n          }\n\n          this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial; // Get contacts\n\n          const resolverIndex = si.type | sj.type;\n          const resolver = this[resolverIndex];\n\n          if (resolver) {\n            let retval = false; // TO DO: investigate why sphereParticle and convexParticle\n            // resolvers expect si and sj shapes to be in reverse order\n            // (i.e. larger integer value type first instead of smaller first)\n\n            if (si.type < sj.type) {\n              retval = resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n            } else {\n              retval = resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj, justTest);\n            }\n\n            if (retval && justTest) {\n              // Register overlap\n              world.shapeOverlapKeeper.set(si.id, sj.id);\n              world.bodyOverlapKeeper.set(bi.id, bj.id);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  sphereSphere(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    if (justTest) {\n      return xi.distanceSquared(xj) < (si.radius + sj.radius) ** 2;\n    } // We will have only one contact in this case\n\n\n    const contactEq = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n    xj.vsub(xi, contactEq.ni);\n    contactEq.ni.normalize(); // Contact point locations\n\n    contactEq.ri.copy(contactEq.ni);\n    contactEq.rj.copy(contactEq.ni);\n    contactEq.ri.scale(si.radius, contactEq.ri);\n    contactEq.rj.scale(-sj.radius, contactEq.rj);\n    contactEq.ri.vadd(xi, contactEq.ri);\n    contactEq.ri.vsub(bi.position, contactEq.ri);\n    contactEq.rj.vadd(xj, contactEq.rj);\n    contactEq.rj.vsub(bj.position, contactEq.rj);\n    this.result.push(contactEq);\n    this.createFrictionEquationsFromContact(contactEq, this.frictionResult);\n  }\n\n  spherePlane(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    // We will have one contact in this case\n    const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n    r.ni.set(0, 0, 1);\n    qj.vmult(r.ni, r.ni);\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\n\n    r.ni.normalize(); // Needed?\n    // Vector from sphere center to contact point\n\n    r.ni.scale(si.radius, r.ri); // Project down sphere on plane\n\n    xi.vsub(xj, point_on_plane_to_sphere);\n    r.ni.scale(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho, r.rj); // The sphere position projected to plane\n\n    if (-point_on_plane_to_sphere.dot(r.ni) <= si.radius) {\n      if (justTest) {\n        return true;\n      } // Make it relative to the body\n\n\n      const ri = r.ri;\n      const rj = r.rj;\n      ri.vadd(xi, ri);\n      ri.vsub(bi.position, ri);\n      rj.vadd(xj, rj);\n      rj.vsub(bj.position, rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  boxBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  sphereBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    const v3pool = this.v3pool; // we refer to the box as body j\n\n    const sides = sphereBox_sides;\n    xi.vsub(xj, box_to_sphere);\n    sj.getSideNormals(sides, qj);\n    const R = si.radius;\n\n    let found = false; // Store the resulting side penetration info\n\n    const side_ns = sphereBox_side_ns;\n    const side_ns1 = sphereBox_side_ns1;\n    const side_ns2 = sphereBox_side_ns2;\n    let side_h = null;\n    let side_penetrations = 0;\n    let side_dot1 = 0;\n    let side_dot2 = 0;\n    let side_distance = null;\n\n    for (let idx = 0, nsides = sides.length; idx !== nsides && found === false; idx++) {\n      // Get the plane side normal (ns)\n      const ns = sphereBox_ns;\n      ns.copy(sides[idx]);\n      const h = ns.length();\n      ns.normalize(); // The normal/distance dot product tells which side of the plane we are\n\n      const dot = box_to_sphere.dot(ns);\n\n      if (dot < h + R && dot > 0) {\n        // Intersects plane. Now check the other two dimensions\n        const ns1 = sphereBox_ns1;\n        const ns2 = sphereBox_ns2;\n        ns1.copy(sides[(idx + 1) % 3]);\n        ns2.copy(sides[(idx + 2) % 3]);\n        const h1 = ns1.length();\n        const h2 = ns2.length();\n        ns1.normalize();\n        ns2.normalize();\n        const dot1 = box_to_sphere.dot(ns1);\n        const dot2 = box_to_sphere.dot(ns2);\n\n        if (dot1 < h1 && dot1 > -h1 && dot2 < h2 && dot2 > -h2) {\n          const dist = Math.abs(dot - h - R);\n\n          if (side_distance === null || dist < side_distance) {\n            side_distance = dist;\n            side_dot1 = dot1;\n            side_dot2 = dot2;\n            side_h = h;\n            side_ns.copy(ns);\n            side_ns1.copy(ns1);\n            side_ns2.copy(ns2);\n            side_penetrations++;\n\n            if (justTest) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    if (side_penetrations) {\n      found = true;\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      side_ns.scale(-R, r.ri); // Sphere r\n\n      r.ni.copy(side_ns);\n      r.ni.negate(r.ni); // Normal should be out of sphere\n\n      side_ns.scale(side_h, side_ns);\n      side_ns1.scale(side_dot1, side_ns1);\n      side_ns.vadd(side_ns1, side_ns);\n      side_ns2.scale(side_dot2, side_ns2);\n      side_ns.vadd(side_ns2, r.rj); // Make relative to bodies\n\n      r.ri.vadd(xi, r.ri);\n      r.ri.vsub(bi.position, r.ri);\n      r.rj.vadd(xj, r.rj);\n      r.rj.vsub(bj.position, r.rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    } // Check corners\n\n\n    let rj = v3pool.get();\n    const sphere_to_corner = sphereBox_sphere_to_corner;\n\n    for (let j = 0; j !== 2 && !found; j++) {\n      for (let k = 0; k !== 2 && !found; k++) {\n        for (let l = 0; l !== 2 && !found; l++) {\n          rj.set(0, 0, 0);\n\n          if (j) {\n            rj.vadd(sides[0], rj);\n          } else {\n            rj.vsub(sides[0], rj);\n          }\n\n          if (k) {\n            rj.vadd(sides[1], rj);\n          } else {\n            rj.vsub(sides[1], rj);\n          }\n\n          if (l) {\n            rj.vadd(sides[2], rj);\n          } else {\n            rj.vsub(sides[2], rj);\n          } // World position of corner\n\n\n          xj.vadd(rj, sphere_to_corner);\n          sphere_to_corner.vsub(xi, sphere_to_corner);\n\n          if (sphere_to_corner.lengthSquared() < R * R) {\n            if (justTest) {\n              return true;\n            }\n\n            found = true;\n            const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n            r.ri.copy(sphere_to_corner);\n            r.ri.normalize();\n            r.ni.copy(r.ri);\n            r.ri.scale(R, r.ri);\n            r.rj.copy(rj); // Make relative to bodies\n\n            r.ri.vadd(xi, r.ri);\n            r.ri.vsub(bi.position, r.ri);\n            r.rj.vadd(xj, r.rj);\n            r.rj.vsub(bj.position, r.rj);\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n          }\n        }\n      }\n    }\n\n    v3pool.release(rj);\n    rj = null; // Check edges\n\n    const edgeTangent = v3pool.get();\n    const edgeCenter = v3pool.get();\n    const r = v3pool.get(); // r = edge center to sphere center\n\n    const orthogonal = v3pool.get();\n    const dist = v3pool.get();\n    const Nsides = sides.length;\n\n    for (let j = 0; j !== Nsides && !found; j++) {\n      for (let k = 0; k !== Nsides && !found; k++) {\n        if (j % 3 !== k % 3) {\n          // Get edge tangent\n          sides[k].cross(sides[j], edgeTangent);\n          edgeTangent.normalize();\n          sides[j].vadd(sides[k], edgeCenter);\n          r.copy(xi);\n          r.vsub(edgeCenter, r);\n          r.vsub(xj, r);\n          const orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\n\n          edgeTangent.scale(orthonorm, orthogonal); // Vector from edge center to sphere center in the tangent direction\n          // Find the third side orthogonal to this one\n\n          let l = 0;\n\n          while (l === j % 3 || l === k % 3) {\n            l++;\n          } // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\n\n\n          dist.copy(xi);\n          dist.vsub(orthogonal, dist);\n          dist.vsub(edgeCenter, dist);\n          dist.vsub(xj, dist); // Distances in tangent direction and distance in the plane orthogonal to it\n\n          const tdist = Math.abs(orthonorm);\n          const ndist = dist.length();\n\n          if (tdist < sides[l].length() && ndist < R) {\n            if (justTest) {\n              return true;\n            }\n\n            found = true;\n            const res = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n            edgeCenter.vadd(orthogonal, res.rj); // box rj\n\n            res.rj.copy(res.rj);\n            dist.negate(res.ni);\n            res.ni.normalize();\n            res.ri.copy(res.rj);\n            res.ri.vadd(xj, res.ri);\n            res.ri.vsub(xi, res.ri);\n            res.ri.normalize();\n            res.ri.scale(R, res.ri); // Make relative to bodies\n\n            res.ri.vadd(xi, res.ri);\n            res.ri.vsub(bi.position, res.ri);\n            res.rj.vadd(xj, res.rj);\n            res.rj.vsub(bj.position, res.rj);\n            this.result.push(res);\n            this.createFrictionEquationsFromContact(res, this.frictionResult);\n          }\n        }\n      }\n    }\n\n    v3pool.release(edgeTangent, edgeCenter, r, orthogonal, dist);\n  }\n\n  planeBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    sj.convexPolyhedronRepresentation.id = sj.id;\n    return this.planeConvex(si, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest, faceListA, faceListB) {\n    const sepAxis = convexConvex_sepAxis;\n\n    if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n      return;\n    }\n\n    if (si.findSeparatingAxis(sj, xi, qi, xj, qj, sepAxis, faceListA, faceListB)) {\n      const res = [];\n      const q = convexConvex_q;\n      si.clipAgainstHull(xi, qi, sj, xj, qj, sepAxis, -100, 100, res);\n      let numContacts = 0;\n\n      for (let j = 0; j !== res.length; j++) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        const ri = r.ri;\n        const rj = r.rj;\n        sepAxis.negate(r.ni);\n        res[j].normal.negate(q);\n        q.scale(res[j].depth, q);\n        res[j].point.vadd(q, ri);\n        rj.copy(res[j].point); // Contact points are in world coordinates. Transform back to relative\n\n        ri.vsub(xi, ri);\n        rj.vsub(xj, rj); // Make relative to bodies\n\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n        this.result.push(r);\n        numContacts++;\n\n        if (!this.enableFrictionReduction) {\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n\n      if (this.enableFrictionReduction && numContacts) {\n        this.createFrictionFromAverage(numContacts);\n      }\n    }\n  }\n\n  sphereConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    const v3pool = this.v3pool;\n    xi.vsub(xj, convex_to_sphere);\n    const normals = sj.faceNormals;\n    const faces = sj.faces;\n    const verts = sj.vertices;\n    const R = si.radius;\n    //     return;\n    // }\n\n    let found = false; // Check corners\n\n    for (let i = 0; i !== verts.length; i++) {\n      const v = verts[i]; // World position of corner\n\n      const worldCorner = sphereConvex_worldCorner;\n      qj.vmult(v, worldCorner);\n      xj.vadd(worldCorner, worldCorner);\n      const sphere_to_corner = sphereConvex_sphereToCorner;\n      worldCorner.vsub(xi, sphere_to_corner);\n\n      if (sphere_to_corner.lengthSquared() < R * R) {\n        if (justTest) {\n          return true;\n        }\n\n        found = true;\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        r.ri.copy(sphere_to_corner);\n        r.ri.normalize();\n        r.ni.copy(r.ri);\n        r.ri.scale(R, r.ri);\n        worldCorner.vsub(xj, r.rj); // Should be relative to the body.\n\n        r.ri.vadd(xi, r.ri);\n        r.ri.vsub(bi.position, r.ri); // Should be relative to the body.\n\n        r.rj.vadd(xj, r.rj);\n        r.rj.vsub(bj.position, r.rj);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n        return;\n      }\n    } // Check side (plane) intersections\n\n\n    for (let i = 0, nfaces = faces.length; i !== nfaces && found === false; i++) {\n      const normal = normals[i];\n      const face = faces[i]; // Get world-transformed normal of the face\n\n      const worldNormal = sphereConvex_worldNormal;\n      qj.vmult(normal, worldNormal); // Get a world vertex from the face\n\n      const worldPoint = sphereConvex_worldPoint;\n      qj.vmult(verts[face[0]], worldPoint);\n      worldPoint.vadd(xj, worldPoint); // Get a point on the sphere, closest to the face normal\n\n      const worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\n      worldNormal.scale(-R, worldSpherePointClosestToPlane);\n      xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane); // Vector from a face point to the closest point on the sphere\n\n      const penetrationVec = sphereConvex_penetrationVec;\n      worldSpherePointClosestToPlane.vsub(worldPoint, penetrationVec); // The penetration. Negative value means overlap.\n\n      const penetration = penetrationVec.dot(worldNormal);\n      const worldPointToSphere = sphereConvex_sphereToWorldPoint;\n      xi.vsub(worldPoint, worldPointToSphere);\n\n      if (penetration < 0 && worldPointToSphere.dot(worldNormal) > 0) {\n        // Intersects plane. Now check if the sphere is inside the face polygon\n        const faceVerts = []; // Face vertices, in world coords\n\n        for (let j = 0, Nverts = face.length; j !== Nverts; j++) {\n          const worldVertex = v3pool.get();\n          qj.vmult(verts[face[j]], worldVertex);\n          xj.vadd(worldVertex, worldVertex);\n          faceVerts.push(worldVertex);\n        }\n\n        if (pointInPolygon(faceVerts, worldNormal, xi)) {\n          // Is the sphere center in the face polygon?\n          if (justTest) {\n            return true;\n          }\n\n          found = true;\n          const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n          worldNormal.scale(-R, r.ri); // Contact offset, from sphere center to contact\n\n          worldNormal.negate(r.ni); // Normal pointing out of sphere\n\n          const penetrationVec2 = v3pool.get();\n          worldNormal.scale(-penetration, penetrationVec2);\n          const penetrationSpherePoint = v3pool.get();\n          worldNormal.scale(-R, penetrationSpherePoint); //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\n\n          xi.vsub(xj, r.rj);\n          r.rj.vadd(penetrationSpherePoint, r.rj);\n          r.rj.vadd(penetrationVec2, r.rj); // Should be relative to the body.\n\n          r.rj.vadd(xj, r.rj);\n          r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n          r.ri.vadd(xi, r.ri);\n          r.ri.vsub(bi.position, r.ri);\n          v3pool.release(penetrationVec2);\n          v3pool.release(penetrationSpherePoint);\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n          for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n            v3pool.release(faceVerts[j]);\n          }\n\n          return; // We only expect *one* face contact\n        } else {\n          // Edge?\n          for (let j = 0; j !== face.length; j++) {\n            // Get two world transformed vertices\n            const v1 = v3pool.get();\n            const v2 = v3pool.get();\n            qj.vmult(verts[face[(j + 1) % face.length]], v1);\n            qj.vmult(verts[face[(j + 2) % face.length]], v2);\n            xj.vadd(v1, v1);\n            xj.vadd(v2, v2); // Construct edge vector\n\n            const edge = sphereConvex_edge;\n            v2.vsub(v1, edge); // Construct the same vector, but normalized\n\n            const edgeUnit = sphereConvex_edgeUnit;\n            edge.unit(edgeUnit); // p is xi projected onto the edge\n\n            const p = v3pool.get();\n            const v1_to_xi = v3pool.get();\n            xi.vsub(v1, v1_to_xi);\n            const dot = v1_to_xi.dot(edgeUnit);\n            edgeUnit.scale(dot, p);\n            p.vadd(v1, p); // Compute a vector from p to the center of the sphere\n\n            const xi_to_p = v3pool.get();\n            p.vsub(xi, xi_to_p); // Collision if the edge-sphere distance is less than the radius\n            // AND if p is in between v1 and v2\n\n            if (dot > 0 && dot * dot < edge.lengthSquared() && xi_to_p.lengthSquared() < R * R) {\n              // Collision if the edge-sphere distance is less than the radius\n              // Edge contact!\n              if (justTest) {\n                return true;\n              }\n\n              const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n              p.vsub(xj, r.rj);\n              p.vsub(xi, r.ni);\n              r.ni.normalize();\n              r.ni.scale(R, r.ri); // Should be relative to the body.\n\n              r.rj.vadd(xj, r.rj);\n              r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n              r.ri.vadd(xi, r.ri);\n              r.ri.vsub(bi.position, r.ri);\n              this.result.push(r);\n              this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n              for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n                v3pool.release(faceVerts[j]);\n              }\n\n              v3pool.release(v1);\n              v3pool.release(v2);\n              v3pool.release(p);\n              v3pool.release(xi_to_p);\n              v3pool.release(v1_to_xi);\n              return;\n            }\n\n            v3pool.release(v1);\n            v3pool.release(v2);\n            v3pool.release(p);\n            v3pool.release(xi_to_p);\n            v3pool.release(v1_to_xi);\n          }\n        } // Release world vertices\n\n\n        for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n          v3pool.release(faceVerts[j]);\n        }\n      }\n    }\n  }\n\n  planeConvex(planeShape, convexShape, planePosition, convexPosition, planeQuat, convexQuat, planeBody, convexBody, si, sj, justTest) {\n    // Simply return the points behind the plane.\n    const worldVertex = planeConvex_v;\n    const worldNormal = planeConvex_normal;\n    worldNormal.set(0, 0, 1);\n    planeQuat.vmult(worldNormal, worldNormal); // Turn normal according to plane orientation\n\n    let numContacts = 0;\n    const relpos = planeConvex_relpos;\n\n    for (let i = 0; i !== convexShape.vertices.length; i++) {\n      // Get world convex vertex\n      worldVertex.copy(convexShape.vertices[i]);\n      convexQuat.vmult(worldVertex, worldVertex);\n      convexPosition.vadd(worldVertex, worldVertex);\n      worldVertex.vsub(planePosition, relpos);\n      const dot = worldNormal.dot(relpos);\n\n      if (dot <= 0.0) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape, si, sj); // Get vertex position projected on plane\n\n        const projected = planeConvex_projected;\n        worldNormal.scale(worldNormal.dot(relpos), projected);\n        worldVertex.vsub(projected, projected);\n        projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\n\n        r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\n        // rj is now just the vector from the convex center to the vertex\n\n        worldVertex.vsub(convexPosition, r.rj); // Make it relative to the body\n\n        r.ri.vadd(planePosition, r.ri);\n        r.ri.vsub(planeBody.position, r.ri);\n        r.rj.vadd(convexPosition, r.rj);\n        r.rj.vsub(convexBody.position, r.rj);\n        this.result.push(r);\n        numContacts++;\n\n        if (!this.enableFrictionReduction) {\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    }\n\n    if (this.enableFrictionReduction && numContacts) {\n      this.createFrictionFromAverage(numContacts);\n    }\n  }\n\n  boxConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  sphereHeightfield(sphereShape, hfShape, spherePos, hfPos, sphereQuat, hfQuat, sphereBody, hfBody, rsi, rsj, justTest) {\n    const data = hfShape.data;\n    const radius = sphereShape.radius;\n    const w = hfShape.elementSize;\n    const worldPillarOffset = sphereHeightfield_tmp2; // Get sphere position to heightfield local!\n\n    const localSpherePos = sphereHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos); // Get the index of the data points to test against\n\n    let iMinX = Math.floor((localSpherePos.x - radius) / w) - 1;\n    let iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1;\n    let iMinY = Math.floor((localSpherePos.y - radius) / w) - 1;\n    let iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\n      return;\n    } // Clamp index to edges\n\n\n    if (iMinX < 0) {\n      iMinX = 0;\n    }\n\n    if (iMaxX < 0) {\n      iMaxX = 0;\n    }\n\n    if (iMinY < 0) {\n      iMinY = 0;\n    }\n\n    if (iMaxY < 0) {\n      iMaxY = 0;\n    }\n\n    if (iMinX >= data.length) {\n      iMinX = data.length - 1;\n    }\n\n    if (iMaxX >= data.length) {\n      iMaxX = data.length - 1;\n    }\n\n    if (iMaxY >= data[0].length) {\n      iMaxY = data[0].length - 1;\n    }\n\n    if (iMinY >= data[0].length) {\n      iMinY = data[0].length - 1;\n    }\n\n    const minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    const min = minMax[0];\n    const max = minMax[1]; // Bail out if we can't touch the bounding height box\n\n    if (localSpherePos.z - radius > max || localSpherePos.z + radius < min) {\n      return;\n    }\n\n    const result = this.result;\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        const numContactsBefore = result.length;\n        let intersecting = false; // Lower triangle\n\n        hfShape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        } // Upper triangle\n\n\n        hfShape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        }\n\n        const numContacts = result.length - numContactsBefore;\n\n        if (numContacts > 2) {\n          return;\n        }\n        /*\n          // Skip all but 1\n          for (let k = 0; k < numContacts - 1; k++) {\n              result.pop();\n          }\n        */\n\n      }\n    }\n  }\n\n  boxHeightfield(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexHeightfield(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest) {\n    const data = hfShape.data;\n    const w = hfShape.elementSize;\n    const radius = convexShape.boundingSphereRadius;\n    const worldPillarOffset = convexHeightfield_tmp2;\n    const faceList = convexHeightfield_faceList; // Get sphere position to heightfield local!\n\n    const localConvexPos = convexHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos); // Get the index of the data points to test against\n\n    let iMinX = Math.floor((localConvexPos.x - radius) / w) - 1;\n    let iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1;\n    let iMinY = Math.floor((localConvexPos.y - radius) / w) - 1;\n    let iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\n      return;\n    } // Clamp index to edges\n\n\n    if (iMinX < 0) {\n      iMinX = 0;\n    }\n\n    if (iMaxX < 0) {\n      iMaxX = 0;\n    }\n\n    if (iMinY < 0) {\n      iMinY = 0;\n    }\n\n    if (iMaxY < 0) {\n      iMaxY = 0;\n    }\n\n    if (iMinX >= data.length) {\n      iMinX = data.length - 1;\n    }\n\n    if (iMaxX >= data.length) {\n      iMaxX = data.length - 1;\n    }\n\n    if (iMaxY >= data[0].length) {\n      iMaxY = data[0].length - 1;\n    }\n\n    if (iMinY >= data[0].length) {\n      iMinY = data[0].length - 1;\n    }\n\n    const minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    const min = minMax[0];\n    const max = minMax[1]; // Bail out if we're cant touch the bounding height box\n\n    if (localConvexPos.z - radius > max || localConvexPos.z + radius < min) {\n      return;\n    }\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        let intersecting = false; // Lower triangle\n\n        hfShape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        } // Upper triangle\n\n\n        hfShape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        }\n      }\n    }\n  }\n\n  sphereParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    // The normal is the unit vector from sphere center to particle center\n    const normal = particleSphere_normal;\n    normal.set(0, 0, 1);\n    xi.vsub(xj, normal);\n    const lengthSquared = normal.lengthSquared();\n\n    if (lengthSquared <= sj.radius * sj.radius) {\n      if (justTest) {\n        return true;\n      }\n\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      normal.normalize();\n      r.rj.copy(normal);\n      r.rj.scale(sj.radius, r.rj);\n      r.ni.copy(normal); // Contact normal\n\n      r.ni.negate(r.ni);\n      r.ri.set(0, 0, 0); // Center of particle\n\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  planeParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    const normal = particlePlane_normal;\n    normal.set(0, 0, 1);\n    bj.quaternion.vmult(normal, normal); // Turn normal according to plane orientation\n\n    const relpos = particlePlane_relpos;\n    xi.vsub(bj.position, relpos);\n    const dot = normal.dot(relpos);\n\n    if (dot <= 0.0) {\n      if (justTest) {\n        return true;\n      }\n\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      r.ni.copy(normal); // Contact normal is the plane normal\n\n      r.ni.negate(r.ni);\n      r.ri.set(0, 0, 0); // Center of particle\n      // Get particle position projected on plane\n\n      const projected = particlePlane_projected;\n      normal.scale(normal.dot(xi), projected);\n      xi.vsub(projected, projected); //projected.vadd(bj.position,projected);\n      // rj is now the projected world position minus plane position\n\n      r.rj.copy(projected);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  boxParticle(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexParticle(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    let penetratedFaceIndex = -1;\n    const penetratedFaceNormal = convexParticle_penetratedFaceNormal;\n    const worldPenetrationVec = convexParticle_worldPenetrationVec;\n    let minPenetration = null;\n\n    const local = convexParticle_local;\n    local.copy(xi);\n    local.vsub(xj, local); // Convert position to relative the convex origin\n\n    qj.conjugate(cqj);\n    cqj.vmult(local, local);\n\n    if (sj.pointIsInside(local)) {\n      if (sj.worldVerticesNeedsUpdate) {\n        sj.computeWorldVertices(xj, qj);\n      }\n\n      if (sj.worldFaceNormalsNeedsUpdate) {\n        sj.computeWorldFaceNormals(qj);\n      } // For each world polygon in the polyhedra\n\n\n      for (let i = 0, nfaces = sj.faces.length; i !== nfaces; i++) {\n        // Construct world face vertices\n        const verts = [sj.worldVertices[sj.faces[i][0]]];\n        const normal = sj.worldFaceNormals[i]; // Check how much the particle penetrates the polygon plane.\n\n        xi.vsub(verts[0], convexParticle_vertexToParticle);\n        const penetration = -normal.dot(convexParticle_vertexToParticle);\n\n        if (minPenetration === null || Math.abs(penetration) < Math.abs(minPenetration)) {\n          if (justTest) {\n            return true;\n          }\n\n          minPenetration = penetration;\n          penetratedFaceIndex = i;\n          penetratedFaceNormal.copy(normal);\n        }\n      }\n\n      if (penetratedFaceIndex !== -1) {\n        // Setup contact\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        penetratedFaceNormal.scale(minPenetration, worldPenetrationVec); // rj is the particle position projected to the face\n\n        worldPenetrationVec.vadd(xi, worldPenetrationVec);\n        worldPenetrationVec.vsub(xj, worldPenetrationVec);\n        r.rj.copy(worldPenetrationVec); //const projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\n        //projectedToFace.copy(r.rj);\n        //qj.vmult(r.rj,r.rj);\n\n        penetratedFaceNormal.negate(r.ni); // Contact normal\n\n        r.ri.set(0, 0, 0); // Center of particle\n\n        const ri = r.ri;\n        const rj = r.rj; // Make relative to bodies\n\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      } else {\n        console.warn('Point found inside convex, but did not find penetrating face!');\n      }\n    }\n  }\n\n  heightfieldCylinder(hfShape, convexShape, hfPos, convexPos, hfQuat, convexQuat, hfBody, convexBody, rsi, rsj, justTest) {\n    return this.convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest);\n  }\n\n  particleCylinder(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    return this.convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest);\n  }\n\n  sphereTrimesh(sphereShape, trimeshShape, spherePos, trimeshPos, sphereQuat, trimeshQuat, sphereBody, trimeshBody, rsi, rsj, justTest) {\n    const edgeVertexA = sphereTrimesh_edgeVertexA;\n    const edgeVertexB = sphereTrimesh_edgeVertexB;\n    const edgeVector = sphereTrimesh_edgeVector;\n    const edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\n    const localSpherePos = sphereTrimesh_localSpherePos;\n    const tmp = sphereTrimesh_tmp;\n    const localSphereAABB = sphereTrimesh_localSphereAABB;\n    const v2 = sphereTrimesh_v2;\n    const relpos = sphereTrimesh_relpos;\n    const triangles = sphereTrimesh_triangles; // Convert sphere position to local in the trimesh\n\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos); // Get the aabb of the sphere locally in the trimesh\n\n    const sphereRadius = sphereShape.radius;\n    localSphereAABB.lowerBound.set(localSpherePos.x - sphereRadius, localSpherePos.y - sphereRadius, localSpherePos.z - sphereRadius);\n    localSphereAABB.upperBound.set(localSpherePos.x + sphereRadius, localSpherePos.y + sphereRadius, localSpherePos.z + sphereRadius);\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles); //for (let i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\n    // Vertices\n\n    const v = sphereTrimesh_v;\n    const radiusSquared = sphereShape.radius * sphereShape.radius;\n\n    for (let i = 0; i < triangles.length; i++) {\n      for (let j = 0; j < 3; j++) {\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v); // Check vertex overlap in sphere\n\n        v.vsub(localSpherePos, relpos);\n\n        if (relpos.lengthSquared() <= radiusSquared) {\n          // Safe up\n          v2.copy(v);\n          Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n          v.vsub(spherePos, relpos);\n\n          if (justTest) {\n            return true;\n          }\n\n          let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n          r.ni.copy(relpos);\n          r.ni.normalize(); // ri is the vector from sphere center to the sphere surface\n\n          r.ri.copy(r.ni);\n          r.ri.scale(sphereShape.radius, r.ri);\n          r.ri.vadd(spherePos, r.ri);\n          r.ri.vsub(sphereBody.position, r.ri);\n          r.rj.copy(v);\n          r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    } // Check all edges\n\n\n    for (let i = 0; i < triangles.length; i++) {\n      for (let j = 0; j < 3; j++) {\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + (j + 1) % 3], edgeVertexB);\n        edgeVertexB.vsub(edgeVertexA, edgeVector); // Project sphere position to the edge\n\n        localSpherePos.vsub(edgeVertexB, tmp);\n        const positionAlongEdgeB = tmp.dot(edgeVector);\n        localSpherePos.vsub(edgeVertexA, tmp);\n        let positionAlongEdgeA = tmp.dot(edgeVector);\n\n        if (positionAlongEdgeA > 0 && positionAlongEdgeB < 0) {\n          // Now check the orthogonal distance from edge to sphere center\n          localSpherePos.vsub(edgeVertexA, tmp);\n          edgeVectorUnit.copy(edgeVector);\n          edgeVectorUnit.normalize();\n          positionAlongEdgeA = tmp.dot(edgeVectorUnit);\n          edgeVectorUnit.scale(positionAlongEdgeA, tmp);\n          tmp.vadd(edgeVertexA, tmp); // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\n\n          const dist = tmp.distanceTo(localSpherePos);\n\n          if (dist < sphereShape.radius) {\n            if (justTest) {\n              return true;\n            }\n\n            const r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n            tmp.vsub(localSpherePos, r.ni);\n            r.ni.normalize();\n            r.ni.scale(sphereShape.radius, r.ri);\n            r.ri.vadd(spherePos, r.ri);\n            r.ri.vsub(sphereBody.position, r.ri);\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n            tmp.vsub(trimeshBody.position, r.rj);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n          }\n        }\n      }\n    } // Triangle faces\n\n\n    const va = sphereTrimesh_va;\n    const vb = sphereTrimesh_vb;\n    const vc = sphereTrimesh_vc;\n    const normal = sphereTrimesh_normal;\n\n    for (let i = 0, N = triangles.length; i !== N; i++) {\n      trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\n      trimeshShape.getNormal(triangles[i], normal);\n      localSpherePos.vsub(va, tmp);\n      let dist = tmp.dot(normal);\n      normal.scale(dist, tmp);\n      localSpherePos.vsub(tmp, tmp); // tmp is now the sphere position projected to the triangle plane\n\n      dist = tmp.distanceTo(localSpherePos);\n\n      if (Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius) {\n        if (justTest) {\n          return true;\n        }\n\n        let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n        tmp.vsub(localSpherePos, r.ni);\n        r.ni.normalize();\n        r.ni.scale(sphereShape.radius, r.ri);\n        r.ri.vadd(spherePos, r.ri);\n        r.ri.vsub(sphereBody.position, r.ri);\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n        tmp.vsub(trimeshBody.position, r.rj);\n        Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n        Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n\n    triangles.length = 0;\n  }\n\n  planeTrimesh(planeShape, trimeshShape, planePos, trimeshPos, planeQuat, trimeshQuat, planeBody, trimeshBody, rsi, rsj, justTest) {\n    // Make contacts!\n    const v = new Vec3();\n    const normal = planeTrimesh_normal;\n    normal.set(0, 0, 1);\n    planeQuat.vmult(normal, normal); // Turn normal according to plane\n\n    for (let i = 0; i < trimeshShape.vertices.length / 3; i++) {\n      // Get world vertex from trimesh\n      trimeshShape.getVertex(i, v); // Safe up\n\n      const v2 = new Vec3();\n      v2.copy(v);\n      Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v); // Check plane side\n\n      const relpos = planeTrimesh_relpos;\n      v.vsub(planePos, relpos);\n      const dot = normal.dot(relpos);\n\n      if (dot <= 0.0) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(planeBody, trimeshBody, planeShape, trimeshShape, rsi, rsj);\n        r.ni.copy(normal); // Contact normal is the plane normal\n        // Get vertex position projected on plane\n\n        const projected = planeTrimesh_projected;\n        normal.scale(relpos.dot(normal), projected);\n        v.vsub(projected, projected); // ri is the projected world position minus plane position\n\n        r.ri.copy(projected);\n        r.ri.vsub(planeBody.position, r.ri);\n        r.rj.copy(v);\n        r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n  } // convexTrimesh(\n  //   si: ConvexPolyhedron, sj: Trimesh, xi: Vec3, xj: Vec3, qi: Quaternion, qj: Quaternion,\n  //   bi: Body, bj: Body, rsi?: Shape | null, rsj?: Shape | null,\n  //   faceListA?: number[] | null, faceListB?: number[] | null,\n  // ) {\n  //   const sepAxis = convexConvex_sepAxis;\n  //   if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n  //       return;\n  //   }\n  //   // Construct a temp hull for each triangle\n  //   const hullB = new ConvexPolyhedron();\n  //   hullB.faces = [[0,1,2]];\n  //   const va = new Vec3();\n  //   const vb = new Vec3();\n  //   const vc = new Vec3();\n  //   hullB.vertices = [\n  //       va,\n  //       vb,\n  //       vc\n  //   ];\n  //   for (let i = 0; i < sj.indices.length / 3; i++) {\n  //       const triangleNormal = new Vec3();\n  //       sj.getNormal(i, triangleNormal);\n  //       hullB.faceNormals = [triangleNormal];\n  //       sj.getTriangleVertices(i, va, vb, vc);\n  //       let d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n  //       if(!d){\n  //           triangleNormal.scale(-1, triangleNormal);\n  //           d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n  //           if(!d){\n  //               continue;\n  //           }\n  //       }\n  //       const res: ConvexPolyhedronContactPoint[] = [];\n  //       const q = convexConvex_q;\n  //       si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\n  //       for(let j = 0; j !== res.length; j++){\n  //           const r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n  //               ri = r.ri,\n  //               rj = r.rj;\n  //           r.ni.copy(triangleNormal);\n  //           r.ni.negate(r.ni);\n  //           res[j].normal.negate(q);\n  //           q.mult(res[j].depth, q);\n  //           res[j].point.vadd(q, ri);\n  //           rj.copy(res[j].point);\n  //           // Contact points are in world coordinates. Transform back to relative\n  //           ri.vsub(xi,ri);\n  //           rj.vsub(xj,rj);\n  //           // Make relative to bodies\n  //           ri.vadd(xi, ri);\n  //           ri.vsub(bi.position, ri);\n  //           rj.vadd(xj, rj);\n  //           rj.vsub(bj.position, rj);\n  //           result.push(r);\n  //       }\n  //   }\n  // }\n\n\n}\nconst averageNormal = new Vec3();\nconst averageContactPointA = new Vec3();\nconst averageContactPointB = new Vec3();\nconst tmpVec1 = new Vec3();\nconst tmpVec2 = new Vec3();\nconst tmpQuat1 = new Quaternion();\nconst tmpQuat2 = new Quaternion();\n\nconst planeTrimesh_normal = new Vec3();\nconst planeTrimesh_relpos = new Vec3();\nconst planeTrimesh_projected = new Vec3();\nconst sphereTrimesh_normal = new Vec3();\nconst sphereTrimesh_relpos = new Vec3();\nnew Vec3();\nconst sphereTrimesh_v = new Vec3();\nconst sphereTrimesh_v2 = new Vec3();\nconst sphereTrimesh_edgeVertexA = new Vec3();\nconst sphereTrimesh_edgeVertexB = new Vec3();\nconst sphereTrimesh_edgeVector = new Vec3();\nconst sphereTrimesh_edgeVectorUnit = new Vec3();\nconst sphereTrimesh_localSpherePos = new Vec3();\nconst sphereTrimesh_tmp = new Vec3();\nconst sphereTrimesh_va = new Vec3();\nconst sphereTrimesh_vb = new Vec3();\nconst sphereTrimesh_vc = new Vec3();\nconst sphereTrimesh_localSphereAABB = new AABB();\nconst sphereTrimesh_triangles = [];\nconst point_on_plane_to_sphere = new Vec3();\nconst plane_to_sphere_ortho = new Vec3(); // See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\n\nconst pointInPolygon_edge = new Vec3();\nconst pointInPolygon_edge_x_normal = new Vec3();\nconst pointInPolygon_vtp = new Vec3();\n\nfunction pointInPolygon(verts, normal, p) {\n  let positiveResult = null;\n  const N = verts.length;\n\n  for (let i = 0; i !== N; i++) {\n    const v = verts[i]; // Get edge to the next vertex\n\n    const edge = pointInPolygon_edge;\n    verts[(i + 1) % N].vsub(v, edge); // Get cross product between polygon normal and the edge\n\n    const edge_x_normal = pointInPolygon_edge_x_normal; //const edge_x_normal = new Vec3();\n\n    edge.cross(normal, edge_x_normal); // Get vector between point and current vertex\n\n    const vertex_to_p = pointInPolygon_vtp;\n    p.vsub(v, vertex_to_p); // This dot product determines which side of the edge the point is\n\n    const r = edge_x_normal.dot(vertex_to_p); // If all such dot products have same sign, we are inside the polygon.\n\n    if (positiveResult === null || r > 0 && positiveResult === true || r <= 0 && positiveResult === false) {\n      if (positiveResult === null) {\n        positiveResult = r > 0;\n      }\n\n      continue;\n    } else {\n      return false; // Encountered some other sign. Exit.\n    }\n  } // If we got here, all dot products were of the same sign.\n\n\n  return true;\n}\n\nconst box_to_sphere = new Vec3();\nconst sphereBox_ns = new Vec3();\nconst sphereBox_ns1 = new Vec3();\nconst sphereBox_ns2 = new Vec3();\nconst sphereBox_sides = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\nconst sphereBox_sphere_to_corner = new Vec3();\nconst sphereBox_side_ns = new Vec3();\nconst sphereBox_side_ns1 = new Vec3();\nconst sphereBox_side_ns2 = new Vec3();\nconst convex_to_sphere = new Vec3();\nconst sphereConvex_edge = new Vec3();\nconst sphereConvex_edgeUnit = new Vec3();\nconst sphereConvex_sphereToCorner = new Vec3();\nconst sphereConvex_worldCorner = new Vec3();\nconst sphereConvex_worldNormal = new Vec3();\nconst sphereConvex_worldPoint = new Vec3();\nconst sphereConvex_worldSpherePointClosestToPlane = new Vec3();\nconst sphereConvex_penetrationVec = new Vec3();\nconst sphereConvex_sphereToWorldPoint = new Vec3();\nnew Vec3();\nnew Vec3();\nconst planeConvex_v = new Vec3();\nconst planeConvex_normal = new Vec3();\nconst planeConvex_relpos = new Vec3();\nconst planeConvex_projected = new Vec3();\nconst convexConvex_sepAxis = new Vec3();\nconst convexConvex_q = new Vec3();\nconst particlePlane_normal = new Vec3();\nconst particlePlane_relpos = new Vec3();\nconst particlePlane_projected = new Vec3();\nconst particleSphere_normal = new Vec3(); // WIP\n\nconst cqj = new Quaternion();\nconst convexParticle_local = new Vec3();\nnew Vec3();\nconst convexParticle_penetratedFaceNormal = new Vec3();\nconst convexParticle_vertexToParticle = new Vec3();\nconst convexParticle_worldPenetrationVec = new Vec3();\nconst convexHeightfield_tmp1 = new Vec3();\nconst convexHeightfield_tmp2 = new Vec3();\nconst convexHeightfield_faceList = [0];\nconst sphereHeightfield_tmp1 = new Vec3();\nconst sphereHeightfield_tmp2 = new Vec3();\n\nclass OverlapKeeper {\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    this.current = [];\n    this.previous = [];\n  }\n  /**\n   * getKey\n   */\n\n\n  getKey(i, j) {\n    if (j < i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return i << 16 | j;\n  }\n  /**\n   * set\n   */\n\n\n  set(i, j) {\n    // Insertion sort. This way the diff will have linear complexity.\n    const key = this.getKey(i, j);\n    const current = this.current;\n    let index = 0;\n\n    while (key > current[index]) {\n      index++;\n    }\n\n    if (key === current[index]) {\n      return; // Pair was already added\n    }\n\n    for (let j = current.length - 1; j >= index; j--) {\n      current[j + 1] = current[j];\n    }\n\n    current[index] = key;\n  }\n  /**\n   * tick\n   */\n\n\n  tick() {\n    const tmp = this.current;\n    this.current = this.previous;\n    this.previous = tmp;\n    this.current.length = 0;\n  }\n  /**\n   * getDiff\n   */\n\n\n  getDiff(additions, removals) {\n    const a = this.current;\n    const b = this.previous;\n    const al = a.length;\n    const bl = b.length;\n    let j = 0;\n\n    for (let i = 0; i < al; i++) {\n      let found = false;\n      const keyA = a[i];\n\n      while (keyA > b[j]) {\n        j++;\n      }\n\n      found = keyA === b[j];\n\n      if (!found) {\n        unpackAndPush(additions, keyA);\n      }\n    }\n\n    j = 0;\n\n    for (let i = 0; i < bl; i++) {\n      let found = false;\n      const keyB = b[i];\n\n      while (keyB > a[j]) {\n        j++;\n      }\n\n      found = a[j] === keyB;\n\n      if (!found) {\n        unpackAndPush(removals, keyB);\n      }\n    }\n  }\n\n}\n\nfunction unpackAndPush(array, key) {\n  array.push((key & 0xffff0000) >> 16, key & 0x0000ffff);\n}\n\nconst getKey = (i, j) => i < j ? `${i}-${j}` : `${j}-${i}`;\n/**\n * TupleDictionary\n */\n\n\nclass TupleDictionary {\n  constructor() {\n    this.data = {\n      keys: []\n    };\n  }\n\n  /** get */\n  get(i, j) {\n    const key = getKey(i, j);\n    return this.data[key];\n  }\n  /** set */\n\n\n  set(i, j, value) {\n    const key = getKey(i, j); // Check if key already exists\n\n    if (!this.get(i, j)) {\n      this.data.keys.push(key);\n    }\n\n    this.data[key] = value;\n  }\n  /** delete */\n\n\n  delete(i, j) {\n    const key = getKey(i, j);\n    const index = this.data.keys.indexOf(key);\n\n    if (index !== -1) {\n      this.data.keys.splice(index, 1);\n    }\n\n    delete this.data[key];\n  }\n  /** reset */\n\n\n  reset() {\n    const data = this.data;\n    const keys = data.keys;\n\n    while (keys.length > 0) {\n      const key = keys.pop();\n      delete data[key];\n    }\n  }\n\n}\n\n/**\n * The physics world\n */\nclass World extends EventTarget {\n  /**\n   * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\n   */\n\n  /**\n   * Makes bodies go to sleep when they've been inactive.\n   * @default false\n   */\n\n  /**\n   * All the current contacts (instances of ContactEquation) in the world.\n   */\n\n  /**\n   * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\n   * @default 0\n   */\n\n  /**\n   * Set to true to use fast quaternion normalization. It is often enough accurate to use.\n   * If bodies tend to explode, set to false.\n   * @default false\n   */\n\n  /**\n   * The wall-clock time since simulation start.\n   */\n\n  /**\n   * Number of timesteps taken since start.\n   */\n\n  /**\n   * Default and last timestep sizes.\n   */\n\n  /**\n   * The gravity of the world.\n   */\n\n  /**\n   * Gravity to use when approximating the friction max force (mu*mass*gravity).\n   * If undefined, global gravity will be used.\n   * Use to enable friction in a World with a null gravity vector (no gravity).\n   */\n\n  /**\n   * The broadphase algorithm to use.\n   * @default NaiveBroadphase\n   */\n\n  /**\n   * All bodies in this world\n   */\n\n  /**\n   * True if any bodies are not sleeping, false if every body is sleeping.\n   */\n\n  /**\n   * The solver algorithm to use.\n   * @default GSSolver\n   */\n\n  /**\n   * collisionMatrix\n   */\n\n  /**\n   * CollisionMatrix from the previous step.\n   */\n\n  /**\n   * All added contactmaterials.\n   */\n\n  /**\n   * Used to look up a ContactMaterial given two instances of Material.\n   */\n\n  /**\n   * The default material of the bodies.\n   */\n\n  /**\n   * This contact material is used if no suitable contactmaterial is found for a contact.\n   */\n\n  /**\n   * Time accumulator for interpolation.\n   * @see https://gafferongames.com/game-physics/fix-your-timestep/\n   */\n\n  /**\n   * Dispatched after a body has been added to the world.\n   */\n\n  /**\n   * Dispatched after a body has been removed from the world.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super();\n    this.dt = -1;\n    this.allowSleep = !!options.allowSleep;\n    this.contacts = [];\n    this.frictionEquations = [];\n    this.quatNormalizeSkip = options.quatNormalizeSkip !== undefined ? options.quatNormalizeSkip : 0;\n    this.quatNormalizeFast = options.quatNormalizeFast !== undefined ? options.quatNormalizeFast : false;\n    this.time = 0.0;\n    this.stepnumber = 0;\n    this.default_dt = 1 / 60;\n    this.nextId = 0;\n    this.gravity = new Vec3();\n\n    if (options.gravity) {\n      this.gravity.copy(options.gravity);\n    }\n\n    if (options.frictionGravity) {\n      this.frictionGravity = new Vec3();\n      this.frictionGravity.copy(options.frictionGravity);\n    }\n\n    this.broadphase = options.broadphase !== undefined ? options.broadphase : new NaiveBroadphase();\n    this.bodies = [];\n    this.hasActiveBodies = false;\n    this.solver = options.solver !== undefined ? options.solver : new GSSolver();\n    this.constraints = [];\n    this.narrowphase = new Narrowphase(this);\n    this.collisionMatrix = new ArrayCollisionMatrix();\n    this.collisionMatrixPrevious = new ArrayCollisionMatrix();\n    this.bodyOverlapKeeper = new OverlapKeeper();\n    this.shapeOverlapKeeper = new OverlapKeeper();\n    this.contactmaterials = [];\n    this.contactMaterialTable = new TupleDictionary();\n    this.defaultMaterial = new Material('default');\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, {\n      friction: 0.3,\n      restitution: 0.0\n    });\n    this.doProfiling = false;\n    this.profile = {\n      solve: 0,\n      makeContactConstraints: 0,\n      broadphase: 0,\n      integrate: 0,\n      narrowphase: 0\n    };\n    this.accumulator = 0;\n    this.subsystems = [];\n    this.addBodyEvent = {\n      type: 'addBody',\n      body: null\n    };\n    this.removeBodyEvent = {\n      type: 'removeBody',\n      body: null\n    };\n    this.idToBodyMap = {};\n    this.broadphase.setWorld(this);\n  }\n  /**\n   * Get the contact material between materials m1 and m2\n   * @return The contact material if it was found.\n   */\n\n\n  getContactMaterial(m1, m2) {\n    return this.contactMaterialTable.get(m1.id, m2.id);\n  }\n  /**\n   * Store old collision state info\n   */\n\n\n  collisionMatrixTick() {\n    const temp = this.collisionMatrixPrevious;\n    this.collisionMatrixPrevious = this.collisionMatrix;\n    this.collisionMatrix = temp;\n    this.collisionMatrix.reset();\n    this.bodyOverlapKeeper.tick();\n    this.shapeOverlapKeeper.tick();\n  }\n  /**\n   * Add a constraint to the simulation.\n   */\n\n\n  addConstraint(c) {\n    this.constraints.push(c);\n  }\n  /**\n   * Removes a constraint\n   */\n\n\n  removeConstraint(c) {\n    const idx = this.constraints.indexOf(c);\n\n    if (idx !== -1) {\n      this.constraints.splice(idx, 1);\n    }\n  }\n  /**\n   * Raycast test\n   * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\n   */\n\n\n  rayTest(from, to, result) {\n    if (result instanceof RaycastResult) {\n      // Do raycastClosest\n      this.raycastClosest(from, to, {\n        skipBackfaces: true\n      }, result);\n    } else {\n      // Do raycastAll\n      this.raycastAll(from, to, {\n        skipBackfaces: true\n      }, result);\n    }\n  }\n  /**\n   * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\n   * @return True if any body was hit.\n   */\n\n\n  raycastAll(from, to, options, callback) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.ALL;\n    options.from = from;\n    options.to = to;\n    options.callback = callback;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\n   * @return True if any body was hit.\n   */\n\n\n  raycastAny(from, to, options, result) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.ANY;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Ray cast, and return information of the closest hit.\n   * @return True if any body was hit.\n   */\n\n\n  raycastClosest(from, to, options, result) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.CLOSEST;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Add a rigid body to the simulation.\n   * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\n   * @todo Adding an array of bodies should be possible. This would save some loops too\n   */\n\n\n  addBody(body) {\n    if (this.bodies.includes(body)) {\n      return;\n    }\n\n    body.index = this.bodies.length;\n    this.bodies.push(body);\n    body.world = this;\n    body.initPosition.copy(body.position);\n    body.initVelocity.copy(body.velocity);\n    body.timeLastSleepy = this.time;\n\n    if (body instanceof Body) {\n      body.initAngularVelocity.copy(body.angularVelocity);\n      body.initQuaternion.copy(body.quaternion);\n    }\n\n    this.collisionMatrix.setNumObjects(this.bodies.length);\n    this.addBodyEvent.body = body;\n    this.idToBodyMap[body.id] = body;\n    this.dispatchEvent(this.addBodyEvent);\n  }\n  /**\n   * Remove a rigid body from the simulation.\n   */\n\n\n  removeBody(body) {\n    body.world = null;\n    const n = this.bodies.length - 1;\n    const bodies = this.bodies;\n    const idx = bodies.indexOf(body);\n\n    if (idx !== -1) {\n      bodies.splice(idx, 1); // Todo: should use a garbage free method\n      // Recompute index\n\n      for (let i = 0; i !== bodies.length; i++) {\n        bodies[i].index = i;\n      }\n\n      this.collisionMatrix.setNumObjects(n);\n      this.removeBodyEvent.body = body;\n      delete this.idToBodyMap[body.id];\n      this.dispatchEvent(this.removeBodyEvent);\n    }\n  }\n\n  getBodyById(id) {\n    return this.idToBodyMap[id];\n  }\n  /**\n   * @todo Make a faster map\n   */\n\n\n  getShapeById(id) {\n    const bodies = this.bodies;\n\n    for (let i = 0; i < bodies.length; i++) {\n      const shapes = bodies[i].shapes;\n\n      for (let j = 0; j < shapes.length; j++) {\n        const shape = shapes[j];\n\n        if (shape.id === id) {\n          return shape;\n        }\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Adds a contact material to the World\n   */\n\n\n  addContactMaterial(cmat) {\n    // Add contact material\n    this.contactmaterials.push(cmat); // Add current contact material to the material table\n\n    this.contactMaterialTable.set(cmat.materials[0].id, cmat.materials[1].id, cmat);\n  }\n  /**\n   * Removes a contact material from the World.\n   */\n\n\n  removeContactMaterial(cmat) {\n    const idx = this.contactmaterials.indexOf(cmat);\n\n    if (idx === -1) {\n      return;\n    }\n\n    this.contactmaterials.splice(idx, 1);\n    this.contactMaterialTable.delete(cmat.materials[0].id, cmat.materials[1].id);\n  }\n  /**\n   * Step the simulation forward keeping track of last called time\n   * to be able to step the world at a fixed rate, independently of framerate.\n   *\n   * @param dt The fixed time step size to use (default: 1 / 60).\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\n   * @see https://gafferongames.com/post/fix_your_timestep/\n   * @example\n   *     // Run the simulation independently of framerate every 1 / 60 ms\n   *     world.fixedStep()\n   */\n\n\n  fixedStep(dt, maxSubSteps) {\n    if (dt === void 0) {\n      dt = 1 / 60;\n    }\n\n    if (maxSubSteps === void 0) {\n      maxSubSteps = 10;\n    }\n\n    const time = performance.now() / 1000; // seconds\n\n    if (!this.lastCallTime) {\n      this.step(dt, undefined, maxSubSteps);\n    } else {\n      const timeSinceLastCalled = time - this.lastCallTime;\n      this.step(dt, timeSinceLastCalled, maxSubSteps);\n    }\n\n    this.lastCallTime = time;\n  }\n  /**\n   * Step the physics world forward in time.\n   *\n   * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\n   *\n   * @param dt The fixed time step size to use.\n   * @param timeSinceLastCalled The time elapsed since the function was last called.\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\n   * @see https://web.archive.org/web/20180426154531/http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World#What_do_the_parameters_to_btDynamicsWorld::stepSimulation_mean.3F\n   * @example\n   *     // fixed timestepping without interpolation\n   *     world.step(1 / 60)\n   */\n\n\n  step(dt, timeSinceLastCalled, maxSubSteps) {\n    if (maxSubSteps === void 0) {\n      maxSubSteps = 10;\n    }\n\n    if (timeSinceLastCalled === undefined) {\n      // Fixed, simple stepping\n      this.internalStep(dt); // Increment time\n\n      this.time += dt;\n    } else {\n      this.accumulator += timeSinceLastCalled;\n      const t0 = performance.now();\n      let substeps = 0;\n\n      while (this.accumulator >= dt && substeps < maxSubSteps) {\n        // Do fixed steps to catch up\n        this.internalStep(dt);\n        this.accumulator -= dt;\n        substeps++;\n\n        if (performance.now() - t0 > dt * 1000) {\n          // The framerate is not interactive anymore.\n          // We are below the target framerate.\n          // Better bail out.\n          break;\n        }\n      } // Remove the excess accumulator, since we may not\n      // have had enough substeps available to catch up\n\n\n      this.accumulator = this.accumulator % dt;\n      const t = this.accumulator / dt;\n\n      for (let j = 0; j !== this.bodies.length; j++) {\n        const b = this.bodies[j];\n        b.previousPosition.lerp(b.position, t, b.interpolatedPosition);\n        b.previousQuaternion.slerp(b.quaternion, t, b.interpolatedQuaternion);\n        b.previousQuaternion.normalize();\n      }\n\n      this.time += timeSinceLastCalled;\n    }\n  }\n\n  internalStep(dt) {\n    this.dt = dt;\n    const contacts = this.contacts;\n    const p1 = World_step_p1;\n    const p2 = World_step_p2;\n    const N = this.bodies.length;\n    const bodies = this.bodies;\n    const solver = this.solver;\n    const gravity = this.gravity;\n    const doProfiling = this.doProfiling;\n    const profile = this.profile;\n    const DYNAMIC = Body.DYNAMIC;\n    let profilingStart = -Infinity;\n    const constraints = this.constraints;\n    const frictionEquationPool = World_step_frictionEquationPool;\n    gravity.length();\n    const gx = gravity.x;\n    const gy = gravity.y;\n    const gz = gravity.z;\n    let i = 0;\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    } // Add gravity to all objects\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.type === DYNAMIC) {\n        // Only for dynamic bodies\n        const f = bi.force;\n        const m = bi.mass;\n        f.x += m * gx;\n        f.y += m * gy;\n        f.z += m * gz;\n      }\n    } // Update subsystems\n\n\n    for (let i = 0, Nsubsystems = this.subsystems.length; i !== Nsubsystems; i++) {\n      this.subsystems[i].update();\n    } // Collision detection\n\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    p1.length = 0; // Clean up pair arrays from last step\n\n    p2.length = 0;\n    this.broadphase.collisionPairs(this, p1, p2);\n\n    if (doProfiling) {\n      profile.broadphase = performance.now() - profilingStart;\n    } // Remove constrained pairs with collideConnected == false\n\n\n    let Nconstraints = constraints.length;\n\n    for (i = 0; i !== Nconstraints; i++) {\n      const c = constraints[i];\n\n      if (!c.collideConnected) {\n        for (let j = p1.length - 1; j >= 0; j -= 1) {\n          if (c.bodyA === p1[j] && c.bodyB === p2[j] || c.bodyB === p1[j] && c.bodyA === p2[j]) {\n            p1.splice(j, 1);\n            p2.splice(j, 1);\n          }\n        }\n      }\n    }\n\n    this.collisionMatrixTick(); // Generate contacts\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    const oldcontacts = World_step_oldContacts;\n    const NoldContacts = contacts.length;\n\n    for (i = 0; i !== NoldContacts; i++) {\n      oldcontacts.push(contacts[i]);\n    }\n\n    contacts.length = 0; // Transfer FrictionEquation from current list to the pool for reuse\n\n    const NoldFrictionEquations = this.frictionEquations.length;\n\n    for (i = 0; i !== NoldFrictionEquations; i++) {\n      frictionEquationPool.push(this.frictionEquations[i]);\n    }\n\n    this.frictionEquations.length = 0;\n    this.narrowphase.getContacts(p1, p2, this, contacts, oldcontacts, // To be reused\n    this.frictionEquations, frictionEquationPool);\n\n    if (doProfiling) {\n      profile.narrowphase = performance.now() - profilingStart;\n    } // Loop over all collisions\n\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    } // Add all friction eqs\n\n\n    for (i = 0; i < this.frictionEquations.length; i++) {\n      solver.addEquation(this.frictionEquations[i]);\n    }\n\n    const ncontacts = contacts.length;\n\n    for (let k = 0; k !== ncontacts; k++) {\n      // Current contact\n      const c = contacts[k]; // Get current collision indeces\n\n      const bi = c.bi;\n      const bj = c.bj;\n      const si = c.si;\n      const sj = c.sj; // Get collision properties\n\n      let cm;\n\n      if (bi.material && bj.material) {\n        cm = this.getContactMaterial(bi.material, bj.material) || this.defaultContactMaterial;\n      } else {\n        cm = this.defaultContactMaterial;\n      } // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n\n      cm.friction; // c.restitution = cm.restitution;\n      // If friction or restitution were specified in the material, use them\n\n      if (bi.material && bj.material) {\n        if (bi.material.friction >= 0 && bj.material.friction >= 0) {\n          bi.material.friction * bj.material.friction;\n        }\n\n        if (bi.material.restitution >= 0 && bj.material.restitution >= 0) {\n          c.restitution = bi.material.restitution * bj.material.restitution;\n        }\n      } // c.setSpookParams(\n      //           cm.contactEquationStiffness,\n      //           cm.contactEquationRelaxation,\n      //           dt\n      //       );\n\n\n      solver.addEquation(c); // // Add friction constraint equation\n      // if(mu > 0){\n      // \t// Create 2 tangent equations\n      // \tconst mug = mu * gnorm;\n      // \tconst reducedMass = (bi.invMass + bj.invMass);\n      // \tif(reducedMass > 0){\n      // \t\treducedMass = 1/reducedMass;\n      // \t}\n      // \tconst pool = frictionEquationPool;\n      // \tconst c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n      // \tconst c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n      // \tthis.frictionEquations.push(c1, c2);\n      // \tc1.bi = c2.bi = bi;\n      // \tc1.bj = c2.bj = bj;\n      // \tc1.minForce = c2.minForce = -mug*reducedMass;\n      // \tc1.maxForce = c2.maxForce = mug*reducedMass;\n      // \t// Copy over the relative vectors\n      // \tc1.ri.copy(c.ri);\n      // \tc1.rj.copy(c.rj);\n      // \tc2.ri.copy(c.ri);\n      // \tc2.rj.copy(c.rj);\n      // \t// Construct tangents\n      // \tc.ni.tangents(c1.t, c2.t);\n      //           // Set spook params\n      //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n      //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n      //           c1.enabled = c2.enabled = c.enabled;\n      // \t// Add equations to solver\n      // \tsolver.addEquation(c1);\n      // \tsolver.addEquation(c2);\n      // }\n\n      if (bi.allowSleep && bi.type === Body.DYNAMIC && bi.sleepState === Body.SLEEPING && bj.sleepState === Body.AWAKE && bj.type !== Body.STATIC) {\n        const speedSquaredB = bj.velocity.lengthSquared() + bj.angularVelocity.lengthSquared();\n        const speedLimitSquaredB = bj.sleepSpeedLimit ** 2;\n\n        if (speedSquaredB >= speedLimitSquaredB * 2) {\n          bi.wakeUpAfterNarrowphase = true;\n        }\n      }\n\n      if (bj.allowSleep && bj.type === Body.DYNAMIC && bj.sleepState === Body.SLEEPING && bi.sleepState === Body.AWAKE && bi.type !== Body.STATIC) {\n        const speedSquaredA = bi.velocity.lengthSquared() + bi.angularVelocity.lengthSquared();\n        const speedLimitSquaredA = bi.sleepSpeedLimit ** 2;\n\n        if (speedSquaredA >= speedLimitSquaredA * 2) {\n          bj.wakeUpAfterNarrowphase = true;\n        }\n      } // Now we know that i and j are in contact. Set collision matrix state\n\n\n      this.collisionMatrix.set(bi, bj, true);\n\n      if (!this.collisionMatrixPrevious.get(bi, bj)) {\n        // First contact!\n        // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\n        World_step_collideEvent.body = bj;\n        World_step_collideEvent.contact = c;\n        bi.dispatchEvent(World_step_collideEvent);\n        World_step_collideEvent.body = bi;\n        bj.dispatchEvent(World_step_collideEvent);\n      }\n\n      this.bodyOverlapKeeper.set(bi.id, bj.id);\n      this.shapeOverlapKeeper.set(si.id, sj.id);\n    }\n\n    this.emitContactEvents();\n\n    if (doProfiling) {\n      profile.makeContactConstraints = performance.now() - profilingStart;\n      profilingStart = performance.now();\n    } // Wake up bodies\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.wakeUpAfterNarrowphase) {\n        bi.wakeUp();\n        bi.wakeUpAfterNarrowphase = false;\n      }\n    } // Add user-added constraints\n\n\n    Nconstraints = constraints.length;\n\n    for (i = 0; i !== Nconstraints; i++) {\n      const c = constraints[i];\n      c.update();\n\n      for (let j = 0, Neq = c.equations.length; j !== Neq; j++) {\n        const eq = c.equations[j];\n        solver.addEquation(eq);\n      }\n    } // Solve the constrained system\n\n\n    solver.solve(dt, this);\n\n    if (doProfiling) {\n      profile.solve = performance.now() - profilingStart;\n    } // Remove all contacts from solver\n\n\n    solver.removeAllEquations(); // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\n\n    const pow = Math.pow;\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.type & DYNAMIC) {\n        // Only for dynamic bodies\n        const ld = pow(1.0 - bi.linearDamping, dt);\n        const v = bi.velocity;\n        v.scale(ld, v);\n        const av = bi.angularVelocity;\n\n        if (av) {\n          const ad = pow(1.0 - bi.angularDamping, dt);\n          av.scale(ad, av);\n        }\n      }\n    }\n\n    this.dispatchEvent(World_step_preStepEvent); // Leap frog\n    // vnew = v + h*f/m\n    // xnew = x + h*vnew\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    const stepnumber = this.stepnumber;\n    const quatNormalize = stepnumber % (this.quatNormalizeSkip + 1) === 0;\n    const quatNormalizeFast = this.quatNormalizeFast;\n\n    for (i = 0; i !== N; i++) {\n      bodies[i].integrate(dt, quatNormalize, quatNormalizeFast);\n    }\n\n    this.clearForces();\n    this.broadphase.dirty = true;\n\n    if (doProfiling) {\n      profile.integrate = performance.now() - profilingStart;\n    } // Update step number\n\n\n    this.stepnumber += 1;\n    this.dispatchEvent(World_step_postStepEvent); // Sleeping update\n\n    let hasActiveBodies = true;\n\n    if (this.allowSleep) {\n      hasActiveBodies = false;\n\n      for (i = 0; i !== N; i++) {\n        const bi = bodies[i];\n        bi.sleepTick(this.time);\n\n        if (bi.sleepState !== Body.SLEEPING) {\n          hasActiveBodies = true;\n        }\n      }\n    }\n\n    this.hasActiveBodies = hasActiveBodies;\n  }\n\n  emitContactEvents() {\n    const hasBeginContact = this.hasAnyEventListener('beginContact');\n    const hasEndContact = this.hasAnyEventListener('endContact');\n\n    if (hasBeginContact || hasEndContact) {\n      this.bodyOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginContact) {\n      for (let i = 0, l = additions.length; i < l; i += 2) {\n        beginContactEvent.bodyA = this.getBodyById(additions[i]);\n        beginContactEvent.bodyB = this.getBodyById(additions[i + 1]);\n        this.dispatchEvent(beginContactEvent);\n      }\n\n      beginContactEvent.bodyA = beginContactEvent.bodyB = null;\n    }\n\n    if (hasEndContact) {\n      for (let i = 0, l = removals.length; i < l; i += 2) {\n        endContactEvent.bodyA = this.getBodyById(removals[i]);\n        endContactEvent.bodyB = this.getBodyById(removals[i + 1]);\n        this.dispatchEvent(endContactEvent);\n      }\n\n      endContactEvent.bodyA = endContactEvent.bodyB = null;\n    }\n\n    additions.length = removals.length = 0;\n    const hasBeginShapeContact = this.hasAnyEventListener('beginShapeContact');\n    const hasEndShapeContact = this.hasAnyEventListener('endShapeContact');\n\n    if (hasBeginShapeContact || hasEndShapeContact) {\n      this.shapeOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginShapeContact) {\n      for (let i = 0, l = additions.length; i < l; i += 2) {\n        const shapeA = this.getShapeById(additions[i]);\n        const shapeB = this.getShapeById(additions[i + 1]);\n        beginShapeContactEvent.shapeA = shapeA;\n        beginShapeContactEvent.shapeB = shapeB;\n        if (shapeA) beginShapeContactEvent.bodyA = shapeA.body;\n        if (shapeB) beginShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(beginShapeContactEvent);\n      }\n\n      beginShapeContactEvent.bodyA = beginShapeContactEvent.bodyB = beginShapeContactEvent.shapeA = beginShapeContactEvent.shapeB = null;\n    }\n\n    if (hasEndShapeContact) {\n      for (let i = 0, l = removals.length; i < l; i += 2) {\n        const shapeA = this.getShapeById(removals[i]);\n        const shapeB = this.getShapeById(removals[i + 1]);\n        endShapeContactEvent.shapeA = shapeA;\n        endShapeContactEvent.shapeB = shapeB;\n        if (shapeA) endShapeContactEvent.bodyA = shapeA.body;\n        if (shapeB) endShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(endShapeContactEvent);\n      }\n\n      endShapeContactEvent.bodyA = endShapeContactEvent.bodyB = endShapeContactEvent.shapeA = endShapeContactEvent.shapeB = null;\n    }\n  }\n  /**\n   * Sets all body forces in the world to zero.\n   */\n\n\n  clearForces() {\n    const bodies = this.bodies;\n    const N = bodies.length;\n\n    for (let i = 0; i !== N; i++) {\n      const b = bodies[i];\n      b.force;\n      b.torque;\n      b.force.set(0, 0, 0);\n      b.torque.set(0, 0, 0);\n    }\n  }\n\n} // Temp stuff\n\nnew AABB();\nconst tmpRay = new Ray(); // performance.now() fallback on Date.now()\n\nconst performance = globalThis.performance || {};\n\nif (!performance.now) {\n  let nowOffset = Date.now();\n\n  if (performance.timing && performance.timing.navigationStart) {\n    nowOffset = performance.timing.navigationStart;\n  }\n\n  performance.now = () => Date.now() - nowOffset;\n}\n\nnew Vec3(); // Dispatched after the world has stepped forward in time.\n// Reusable event objects to save memory.\n\nconst World_step_postStepEvent = {\n  type: 'postStep'\n}; // Dispatched before the world steps forward in time.\n\nconst World_step_preStepEvent = {\n  type: 'preStep'\n};\nconst World_step_collideEvent = {\n  type: Body.COLLIDE_EVENT_NAME,\n  body: null,\n  contact: null\n}; // Pools for unused objects\n\nconst World_step_oldContacts = [];\nconst World_step_frictionEquationPool = []; // Reusable arrays for collision pairs\n\nconst World_step_p1 = [];\nconst World_step_p2 = []; // Stuff for emitContactEvents\n\nconst additions = [];\nconst removals = [];\nconst beginContactEvent = {\n  type: 'beginContact',\n  bodyA: null,\n  bodyB: null\n};\nconst endContactEvent = {\n  type: 'endContact',\n  bodyA: null,\n  bodyB: null\n};\nconst beginShapeContactEvent = {\n  type: 'beginShapeContact',\n  bodyA: null,\n  bodyB: null,\n  shapeA: null,\n  shapeB: null\n};\nconst endShapeContactEvent = {\n  type: 'endShapeContact',\n  bodyA: null,\n  bodyB: null,\n  shapeA: null,\n  shapeB: null\n};\n\nexport { AABB, ArrayCollisionMatrix, BODY_SLEEP_STATES, BODY_TYPES, Body, Box, Broadphase, COLLISION_TYPES, ConeTwistConstraint, Constraint, ContactEquation, ContactMaterial, ConvexPolyhedron, Cylinder, DistanceConstraint, Equation, EventTarget, FrictionEquation, GSSolver, GridBroadphase, Heightfield, HingeConstraint, JacobianElement, LockConstraint, Mat3, Material, NaiveBroadphase, Narrowphase, ObjectCollisionMatrix, Particle, Plane, PointToPointConstraint, Pool, Quaternion, RAY_MODES, Ray, RaycastResult, RaycastVehicle, RigidVehicle, RotationalEquation, RotationalMotorEquation, SAPBroadphase, SHAPE_TYPES, SPHSystem, Shape, Solver, Sphere, SplitSolver, Spring, Transform, Trimesh, Vec3, Vec3Pool, WheelInfo, World };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import { Vec3, Quaternion, Shape } from 'cannon-es';\nimport { MeshBasicMaterial, SphereGeometry, BoxGeometry, PlaneGeometry, Mesh, CylinderGeometry, BufferGeometry, Float32BufferAttribute } from 'three';\n\nfunction CannonDebugger(scene, world, _temp) {\n  let {\n    color = 0x00ff00,\n    scale = 1,\n    onInit,\n    onUpdate\n  } = _temp === void 0 ? {} : _temp;\n  const _meshes = [];\n\n  const _material = new MeshBasicMaterial({\n    color: color != null ? color : 0x00ff00,\n    wireframe: true\n  });\n\n  const _tempVec0 = new Vec3();\n\n  const _tempVec1 = new Vec3();\n\n  const _tempVec2 = new Vec3();\n\n  const _tempQuat0 = new Quaternion();\n\n  const _sphereGeometry = new SphereGeometry(1);\n\n  const _boxGeometry = new BoxGeometry(1, 1, 1);\n\n  const _planeGeometry = new PlaneGeometry(10, 10, 10, 10); // Move the planeGeometry forward a little bit to prevent z-fighting\n\n\n  _planeGeometry.translate(0, 0, 0.0001);\n\n  function createConvexPolyhedronGeometry(shape) {\n    const geometry = new BufferGeometry(); // Add vertices\n\n    const positions = [];\n\n    for (let i = 0; i < shape.vertices.length; i++) {\n      const vertex = shape.vertices[i];\n      positions.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3)); // Add faces\n\n    const indices = [];\n\n    for (let i = 0; i < shape.faces.length; i++) {\n      const face = shape.faces[i];\n      const a = face[0];\n\n      for (let j = 1; j < face.length - 1; j++) {\n        const b = face[j];\n        const c = face[j + 1];\n        indices.push(a, b, c);\n      }\n    }\n\n    geometry.setIndex(indices);\n    geometry.computeBoundingSphere();\n    geometry.computeVertexNormals();\n    return geometry;\n  }\n\n  function createTrimeshGeometry(shape) {\n    const geometry = new BufferGeometry();\n    const positions = [];\n    const v0 = _tempVec0;\n    const v1 = _tempVec1;\n    const v2 = _tempVec2;\n\n    for (let i = 0; i < shape.indices.length / 3; i++) {\n      shape.getTriangleVertices(i, v0, v1, v2);\n      positions.push(v0.x, v0.y, v0.z);\n      positions.push(v1.x, v1.y, v1.z);\n      positions.push(v2.x, v2.y, v2.z);\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    geometry.computeVertexNormals();\n    return geometry;\n  }\n\n  function createHeightfieldGeometry(shape) {\n    const geometry = new BufferGeometry();\n    const s = shape.elementSize || 1; // assumes square heightfield, else i*x, j*y\n\n    const positions = shape.data.flatMap((row, i) => row.flatMap((z, j) => [i * s, j * s, z]));\n    const indices = [];\n\n    for (let xi = 0; xi < shape.data.length - 1; xi++) {\n      for (let yi = 0; yi < shape.data[xi].length - 1; yi++) {\n        const stride = shape.data[xi].length;\n        const index = xi * stride + yi;\n        indices.push(index + 1, index + stride, index + stride + 1);\n        indices.push(index + stride, index + 1, index);\n      }\n    }\n\n    geometry.setIndex(indices);\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    geometry.computeVertexNormals();\n    return geometry;\n  }\n\n  function createMesh(shape) {\n    let mesh = new Mesh();\n    const {\n      SPHERE,\n      BOX,\n      PLANE,\n      CYLINDER,\n      CONVEXPOLYHEDRON,\n      TRIMESH,\n      HEIGHTFIELD\n    } = Shape.types;\n\n    switch (shape.type) {\n      case SPHERE:\n        {\n          mesh = new Mesh(_sphereGeometry, _material);\n          break;\n        }\n\n      case BOX:\n        {\n          mesh = new Mesh(_boxGeometry, _material);\n          break;\n        }\n\n      case PLANE:\n        {\n          mesh = new Mesh(_planeGeometry, _material);\n          break;\n        }\n\n      case CYLINDER:\n        {\n          const geometry = new CylinderGeometry(shape.radiusTop, shape.radiusBottom, shape.height, shape.numSegments);\n          mesh = new Mesh(geometry, _material);\n          shape.geometryId = geometry.id;\n          break;\n        }\n\n      case CONVEXPOLYHEDRON:\n        {\n          const geometry = createConvexPolyhedronGeometry(shape);\n          mesh = new Mesh(geometry, _material);\n          shape.geometryId = geometry.id;\n          break;\n        }\n\n      case TRIMESH:\n        {\n          const geometry = createTrimeshGeometry(shape);\n          mesh = new Mesh(geometry, _material);\n          shape.geometryId = geometry.id;\n          break;\n        }\n\n      case HEIGHTFIELD:\n        {\n          const geometry = createHeightfieldGeometry(shape);\n          mesh = new Mesh(geometry, _material);\n          shape.geometryId = geometry.id;\n          break;\n        }\n    }\n\n    scene.add(mesh);\n    return mesh;\n  }\n\n  function scaleMesh(mesh, shape) {\n    const {\n      SPHERE,\n      BOX,\n      PLANE,\n      CYLINDER,\n      CONVEXPOLYHEDRON,\n      TRIMESH,\n      HEIGHTFIELD\n    } = Shape.types;\n\n    switch (shape.type) {\n      case SPHERE:\n        {\n          const {\n            radius\n          } = shape;\n          mesh.scale.set(radius * scale, radius * scale, radius * scale);\n          break;\n        }\n\n      case BOX:\n        {\n          mesh.scale.copy(shape.halfExtents);\n          mesh.scale.multiplyScalar(2 * scale);\n          break;\n        }\n\n      case PLANE:\n        {\n          break;\n        }\n\n      case CYLINDER:\n        {\n          mesh.scale.set(1 * scale, 1 * scale, 1 * scale);\n          break;\n        }\n\n      case CONVEXPOLYHEDRON:\n        {\n          mesh.scale.set(1 * scale, 1 * scale, 1 * scale);\n          break;\n        }\n\n      case TRIMESH:\n        {\n          mesh.scale.copy(shape.scale).multiplyScalar(scale);\n          break;\n        }\n\n      case HEIGHTFIELD:\n        {\n          mesh.scale.set(1 * scale, 1 * scale, 1 * scale);\n          break;\n        }\n    }\n  }\n\n  function typeMatch(mesh, shape) {\n    if (!mesh) return false;\n    const {\n      geometry\n    } = mesh;\n    return geometry instanceof SphereGeometry && shape.type === Shape.types.SPHERE || geometry instanceof BoxGeometry && shape.type === Shape.types.BOX || geometry instanceof PlaneGeometry && shape.type === Shape.types.PLANE || geometry.id === shape.geometryId && shape.type === Shape.types.CYLINDER || geometry.id === shape.geometryId && shape.type === Shape.types.CONVEXPOLYHEDRON || geometry.id === shape.geometryId && shape.type === Shape.types.TRIMESH || geometry.id === shape.geometryId && shape.type === Shape.types.HEIGHTFIELD;\n  }\n\n  function updateMesh(index, shape) {\n    let mesh = _meshes[index];\n    let didCreateNewMesh = false;\n\n    if (!typeMatch(mesh, shape)) {\n      if (mesh) scene.remove(mesh);\n      _meshes[index] = mesh = createMesh(shape);\n      didCreateNewMesh = true;\n    }\n\n    scaleMesh(mesh, shape);\n    return didCreateNewMesh;\n  }\n\n  function update() {\n    const meshes = _meshes;\n    const shapeWorldPosition = _tempVec0;\n    const shapeWorldQuaternion = _tempQuat0;\n    let meshIndex = 0;\n\n    for (const body of world.bodies) {\n      for (let i = 0; i !== body.shapes.length; i++) {\n        const shape = body.shapes[i];\n        const didCreateNewMesh = updateMesh(meshIndex, shape);\n        const mesh = meshes[meshIndex];\n\n        if (mesh) {\n          // Get world position\n          body.quaternion.vmult(body.shapeOffsets[i], shapeWorldPosition);\n          body.position.vadd(shapeWorldPosition, shapeWorldPosition); // Get world quaternion\n\n          body.quaternion.mult(body.shapeOrientations[i], shapeWorldQuaternion); // Copy to meshes\n\n          mesh.position.copy(shapeWorldPosition);\n          mesh.quaternion.copy(shapeWorldQuaternion);\n          if (didCreateNewMesh && onInit instanceof Function) onInit(body, mesh, shape);\n          if (!didCreateNewMesh && onUpdate instanceof Function) onUpdate(body, mesh, shape);\n        }\n\n        meshIndex++;\n      }\n    }\n\n    for (let i = meshIndex; i < meshes.length; i++) {\n      const mesh = meshes[i];\n      if (mesh) scene.remove(mesh);\n    }\n\n    meshes.length = meshIndex;\n  }\n\n  return {\n    update\n  };\n}\n\nexport { CannonDebugger as default };\n","var streamer = function (input) {\n  let position = 0;\n  let line = 1;\n  let column = 0;\n\n  const next = () => {\n    const character = input.charAt(position);\n    position += 1;\n    if (character === '\\n') {\n      line += 1;\n      column = 0;\n    } else {\n      column += 1;\n    }\n    return character;\n  };\n\n  const lookAhead = () => {\n    const character = input.charAt(position + 1);\n    return character;\n  };\n\n  const peek = () => input.charAt(position);\n\n  const eof = () => (peek() === '');\n\n  const fail = (msg) => {\n    throw new Error(`${msg} (${line}:${column})`);\n  };\n\n  return {\n    next,\n    lookAhead,\n    peek,\n    eof,\n    fail\n  };\n};\n\nconst KEYWORDS = ['if', 'else', 'fn', 'true', 'false'];\nconst OPERATORS = ['+', '-', '*', '/', '%', '=', '&', '|', '<', '>', '!'];\nconst PUNCTUATIONS = ['', ',', ';', '(', ')', '{', '}', '[', ']', '', '$'];\nconst WHITESPACE = [' ', '\\t', '\\n'];\n\nconst NON_STARTING_IDENTIFIERS = ['?', '!', '-', '<', '>', '=', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nfunction isKeyword(x) {\n  const keywords = ` ${KEYWORDS.join(' ')} `;\n  return keywords.indexOf(` ${x} `) >= 0;\n}\n\nfunction isDigit(character) {\n  return /[0-9]/i.test(character);\n}\n\nfunction isIDStart(character) {\n  return /[a-z]/i.test(character);\n}\n\nfunction isID(character) {\n  return isIDStart(character) || NON_STARTING_IDENTIFIERS.join('').indexOf(character) >= 0;\n}\n\nfunction isOpChar(character) {\n  return OPERATORS.join('').indexOf(character) >= 0;\n}\n\nfunction isPunc(character) {\n  return PUNCTUATIONS.join('').indexOf(character) >= 0;\n}\n\nfunction isWhitespace(character) {\n  return WHITESPACE.join('').indexOf(character) >= 0;\n}\n\nfunction readWhile(input, predicate, str = '') {\n  if (!input.eof() && predicate(input.peek())) {\n    const concatenated = str + input.next();\n\n    return readWhile(input, predicate, concatenated);\n  }\n  return str;\n}\n\nfunction readNumber(input) {\n  let hasDot = false;\n  const number = readWhile(input, (character) => {\n    if (character === '.') {\n      if (hasDot) {\n        return false;\n      }\n      hasDot = true;\n      return true;\n    }\n    return isDigit(character);\n  });\n\n  return {\n    type: 'num',\n    value: parseFloat(number)\n  };\n}\n\nfunction readIdent(input) {\n  const id = readWhile(input, isID);\n  const type = isKeyword(id) ? 'keyword' : 'const';\n\n  return {\n    type,\n    value: id\n  };\n}\n\nconst isTemplateExpression = input => (input.peek() === '$' && input.lookAhead() === '{');\n\nfunction readEscaped(input, end, string = '', expressions = [], quasis = []) {\n  let escaped = false;\n  input.next();\n\n  while (!input.eof()) {\n    const character = input.next();\n    if (isTemplateExpression(input)) {\n      quasis.push({ type: 'str', value: string + character });\n      input.next();\n      input.next();\n      const id = readIdent(input);\n      expressions.push(id);\n\n      return readEscaped(input, '\"', '', expressions, quasis);\n    }\n    if (escaped) {\n      // eslint-disable-next-line no-param-reassign\n      string += character;\n      escaped = false;\n    } else if (character === '\\\\') {\n      escaped = true;\n    } else if (character === end) {\n      break;\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      string += character;\n    }\n  }\n  if (expressions.length > 0 || quasis.length > 0) {\n    quasis.push({ type: 'str', value: string });\n    return {\n      expressions,\n      quasis\n    };\n  }\n  return string;\n}\n\nfunction readString(input) {\n  const value = readEscaped(input, '\"');\n  const type = (typeof value === 'string') ? 'str' : 'template';\n\n  return {\n    type,\n    value\n  };\n}\n\nfunction skipComment(input) {\n  readWhile(input, character => character !== '\\n');\n  input.next();\n}\n\nfunction readNext(input) {\n  readWhile(input, isWhitespace);\n  if (input.eof()) {\n    return null;\n  }\n  const character = input.peek();\n\n  if (character === '#') {\n    skipComment(input);\n    return readNext(input);\n  }\n\n  if (character === '\"') {\n    return readString(input);\n  }\n\n  if (isDigit(character)) {\n    return readNumber(input);\n  }\n\n  if (isIDStart(character)) {\n    return readIdent(input);\n  }\n\n  if (isPunc(character)) {\n    return {\n      type: 'punc',\n      value: input.next()\n    };\n  }\n\n  if (isOpChar(character)) {\n    return {\n      type: 'op',\n      value: readWhile(input, isOpChar)\n    };\n  }\n\n  return input.fail(`Unable to process character: ${character}`);\n}\n\nfunction lexer(input) {\n  let current = null;\n\n  function peek() {\n    return current || (current = readNext(input));\n  }\n\n  function next() {\n    const token = current;\n    current = null;\n    return token || readNext(input);\n  }\n\n  function eof() {\n    return peek() === null;\n  }\n\n  return {\n    next,\n    peek,\n    eof,\n    fail: input.fail\n  };\n}\n\nfunction isPunc$1(input, character) {\n  const token = input.peek();\n  if (token && token.type === 'punc' && (!character || token.value === character)) {\n    return token;\n  }\n  return false;\n}\n\nfunction isKeyword$1(input, keyword) {\n  const token = input.peek();\n  if (token && token.type === 'keyword' && (!keyword || token.value === keyword)) {\n    return token;\n  }\n  return false;\n}\n\nfunction isOperator(input, operator) {\n  const token = input.peek();\n  if (token && token.type === 'op' && (!operator || token.value === operator)) {\n    return token;\n  }\n  return false;\n}\n\nfunction skipPunc(input, character) {\n  if (isPunc$1(input, character)) {\n    input.next();\n  } else {\n    input.fail(`Expecting punctuation: ${character}`);\n  }\n}\n\nfunction skipKeyword(input, keyword) {\n  if (isKeyword$1(input, keyword)) {\n    input.next();\n  } else {\n    input.fail(`Expecting keyword: \"${keyword}\"`);\n  }\n}\n\n\n\nfunction unexpected(input) {\n  input.fail(`Unexpected token: ${JSON.stringify(input.peek())}`);\n}\n\n/* eslint no-use-before-define: [\"error\", { \"functions\": false }] */\n\nconst PRECEDENCE = {\n  '=': 1,\n  '||': 2,\n  '&&': 3,\n  '<': 7,\n  '>': 7,\n  '<=': 7,\n  '>=': 7,\n  '==': 7,\n  '!=': 7,\n  '|>': 8,\n  '+': 10,\n  '-': 10,\n  '*': 20,\n  '/': 20,\n  '%': 20,\n  '**': 30\n};\n\nconst FALSE = {\n  type: 'bool',\n  value: false\n};\n\nfunction delimited(input, start, stop, separator, parser) {\n  const a = [];\n  let first = true;\n  skipPunc(input, start);\n  while (!input.eof()) {\n    if (isPunc$1(input, stop)) {\n      break;\n    }\n    if (first) {\n      first = false;\n    } else {\n      skipPunc(input, separator);\n    }\n    if (isPunc$1(input, stop)) {\n      break;\n    }\n    a.push(parser(input));\n  }\n  skipPunc(input, stop);\n  return a;\n}\n\nfunction parseConstName(input) {\n  const name = input.next();\n  if (name.type !== 'const') {\n    input.fail('Expecting constant name');\n  }\n  return name.value;\n}\n\nfunction parseCall(input, func) {\n  const args = delimited(input, '(', ')', ',', parseExpression);\n  return {\n    type: 'call',\n    func,\n    args\n  };\n}\n\nfunction parseBool(input) {\n  const value = (input.next().value === 'true');\n  return {\n    type: 'bool',\n    value\n  };\n}\n\nfunction maybeCall(input, expression) {\n  const exp = expression();\n  return isPunc$1(input, '(') ? parseCall(input, exp) : exp;\n}\n\nfunction parseLambda(input) {\n  const constants = delimited(input, '(', ')', ',', parseConstName);\n  const body = parseExpression(input);\n  return {\n    type: 'fn',\n    constants,\n    body\n  };\n}\n\nfunction parseIf(input) {\n  skipKeyword(input, 'if');\n  const condition = parseExpression(input);\n  const then = parseExpression(input);\n  const conditional = {\n    type: 'if',\n    condition,\n    then\n  };\n  if (isKeyword$1(input, 'else')) {\n    input.next();\n    return Object.assign({}, conditional, {\n      else: parseExpression(input)\n    });\n  }\n  return conditional;\n}\n\nfunction parseProg(input) {\n  const prog = delimited(input, '{', '}', ';', parseExpression);\n  if (prog.length === 0) {\n    return FALSE;\n  }\n  if (prog.length === 1) {\n    return prog[0];\n  }\n  return {\n    type: 'prog',\n    prog\n  };\n}\n\nfunction parseTemplate(input) {\n  const { expressions, quasis } = input.value;\n\n  return {\n    type: 'string-template',\n    expressions,\n    quasis\n  };\n}\n\nfunction parseAtom(input, fn) {\n  return fn(input, () => {\n    if (isPunc$1(input, '(')) {\n      input.next();\n      const expression = parseExpression(input);\n      skipPunc(input, ')');\n      return expression;\n    }\n    if (isPunc$1(input, '{')) {\n      return parseProg(input);\n    }\n    if (isKeyword$1(input, 'if')) {\n      return parseIf(input);\n    }\n    if (isKeyword$1(input, 'true') || isKeyword$1(input, 'false')) {\n      return parseBool(input);\n    }\n    if (isKeyword$1(input, 'fn')) {\n      input.next();\n      return parseLambda(input);\n    }\n    const token = input.next();\n    if (token.type === 'template') {\n      return parseTemplate(token);\n    }\n    if (token.type === 'const' || token.type === 'num' || token.type === 'str') {\n      return token;\n    }\n    return unexpected(input);\n  });\n}\n\nfunction maybeBinary(input, left, precedence) {\n  const token = isOperator(input);\n  if (token) {\n    const newPrecedence = PRECEDENCE[token.value];\n    if (newPrecedence > precedence) {\n      input.next();\n      const type = token.value === '=' ? 'assign' : 'binary';\n      const right = maybeBinary(input, parseAtom(input, maybeCall), newPrecedence);\n      return maybeBinary(input, {\n        type,\n        left,\n        operator: token.value,\n        right\n      }, precedence);\n    }\n  }\n  return left;\n}\n\nfunction makeTopLevel(input, currentLines) {\n  if (input.eof()) {\n    return currentLines;\n  }\n  const newLines = currentLines.concat([parseExpression(input)]);\n  skipPunc(input, ';');\n\n  return makeTopLevel(input, newLines);\n}\n\nfunction parseExpression(input) {\n  return maybeCall(input, () => maybeBinary(input, parseAtom(input, maybeCall), 0));\n}\n\nfunction parse(input, makeTopLevelFunc = makeTopLevel) {\n  const prog = makeTopLevelFunc(input, []);\n\n  return {\n    type: 'prog',\n    prog\n  };\n}\n\nvar standardLib = function (world) {\n  // eslint-disable-next-line no-console\n  world.set('log', val => console.log(val));\n};\n\nfunction checkScope(scope, name) {\n  if (name in scope.constants) {\n    return scope;\n  }\n  if (typeof scope.parent !== 'undefined') {\n    return checkScope(scope.parent, name);\n  }\n\n  return false;\n}\n\nclass World {\n  constructor(parent) {\n    this.constants = Object.create(null);\n    this.parent = parent;\n    standardLib(this);\n  }\n\n  extend() {\n    const kepler = new World(this);\n    return kepler;\n  }\n\n  lookup(name) {\n    const scope = checkScope(this, name);\n    return scope;\n  }\n\n  get(name) {\n    const scope = this.lookup(name);\n    if (scope !== false) {\n      return scope.constants[name];\n    }\n    throw new Error(`Undefined constant: \"${name}\"`);\n  }\n\n  set(name, value) {\n    if (this.constants[name]) {\n      throw new Error(`Attempting to reassign constant: \"${name}\"`);\n    }\n    this.constants[name] = value;\n    return this;\n  }\n}\n\nconst num = (x) => {\n  if (typeof x !== 'number') {\n    throw new Error(`Expected number but got: \"${x}\"`);\n  }\n  return x;\n};\n\nconst div = (x) => {\n  if (num(x) === 0) {\n    throw new Error('Unable to divide number by zero');\n  }\n  return x;\n};\n\nfunction applyOperator(operator, left, right) {\n  switch (operator) {\n    case '+': {\n      return num(left) + num(right);\n    }\n    case '-': {\n      return num(left) - num(right);\n    }\n    case '*': {\n      return num(left) * num(right);\n    }\n    case '/': {\n      return num(left) / div(right);\n    }\n    case '%': {\n      return num(left) % div(right);\n    }\n    case '**': {\n      return num(left) ** num(right);\n    }\n    case '&&': {\n      return left !== false && right;\n    }\n    case '||': {\n      return left !== false ? left : right;\n    }\n    case '<': {\n      return num(left) < num(right);\n    }\n    case '>': {\n      return num(left) > num(right);\n    }\n    case '<=': {\n      return num(left) <= num(right);\n    }\n    case '>=': {\n      return num(left) >= num(right);\n    }\n    case '==': {\n      return left === right;\n    }\n    case '!=': {\n      return left !== right;\n    }\n    case '|>': {\n      return right(left);\n    }\n    default: {\n      throw new Error(`Unable to process operator ${operator}`);\n    }\n  }\n}\n\nfunction makeFunction(env, expression, evaluateFn) {\n  const names = expression.constants;\n  const kepler = env.extend();\n\n  return function fn(...args) {\n    let i = 0;\n\n    names.forEach((name) => {\n      kepler.set(name, (i < args.length) ? args[i] : false);\n      i += 1;\n    });\n\n    return evaluateFn(expression.body, kepler);\n  };\n}\n\nfunction makeTemplateString(world, expressions, quasis, evaluateFn) {\n  return quasis.map((string, index) => {\n    const evaluated = (typeof expressions[index] === 'undefined') ? '' : evaluateFn(expressions[index], world);\n    return string.value + evaluated;\n  }).join('');\n}\n\nfunction evaluate(expression, world) {\n  switch (expression.type) {\n    case 'num':\n    case 'str':\n    case 'bool': {\n      return expression.value;\n    }\n    case 'const': {\n      return world.get(expression.value);\n    }\n    case 'assign': {\n      if (expression.left.type !== 'const') {\n        throw new Error(`Cannot assign to ${JSON.stringify(expression.left)}`);\n      }\n      return world.set(expression.left.value, evaluate(expression.right, world));\n    }\n    case 'binary': {\n      const left = evaluate(expression.left, world);\n      const right = evaluate(expression.right, world);\n      return applyOperator(expression.operator, left, right);\n    }\n    case 'string-template': {\n      const { expressions, quasis } = expression;\n      return makeTemplateString(world, expressions, quasis, evaluate);\n    }\n    case 'fn': {\n      return makeFunction(world, expression, evaluate);\n    }\n    case 'if': {\n      const condition = evaluate(expression.condition, world);\n      if (condition !== false) {\n        return evaluate(expression.then, world);\n      }\n      return expression.else ? evaluate(expression.else, world) : false;\n    }\n    case 'prog': {\n      let val = false;\n      expression.prog.forEach((exp) => {\n        val = evaluate(exp, world);\n      });\n      return val;\n    }\n    case 'call': {\n      const func = evaluate(expression.func, world);\n      return func(...expression.args.map(arg => evaluate(arg, world)));\n    }\n    default: {\n      throw new Error(`Unable to process expression: ${expression.type}`);\n    }\n  }\n}\n\nconst world = new World();\n\nfunction run(script) {\n  const stream = streamer(script);\n  const tokenized = lexer(stream);\n  const ast = parse(tokenized);\n\n  evaluate(ast, world);\n}\n\nexport default run;\n","import * as THREE from 'three';\r\nimport * as CANNON from 'cannon-es'\r\nimport {OrbitControls} from './node_modules/three/examples/jsm/controls/OrbitControls.js';\r\nimport CannonDebugger from 'cannon-es-debugger'\r\n\r\n      const plane = require('plane.js')\r\n\r\n      let camera, scene, renderer\r\n      let movementPlane\r\n      let clickMarker\r\n      let raycaster\r\n      let cubeMesh\r\n\r\n      // cannon.js variables\r\n      let world\r\n      let jointBody\r\n      let jointConstraint \r\n      let cubeBody\r\n\r\n      let isDragging = false\r\n\r\n      // To be synced\r\n      const meshes = []\r\n      const bodies = []\r\n\r\n      initThree()\r\n      const controls = new OrbitControls( camera, renderer.domElement );\r\n      initCannon()\r\n      const cannonDebugger = new CannonDebugger(scene, world)\r\n\r\n      animate()\r\n\r\n      function initThree() {\r\n        // Camera\r\n        camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 0.5, 1000)\r\n        camera.position.set(0, 2, 10)\r\n\r\n        // Scene\r\n        scene = new THREE.Scene()\r\n        scene.fog = new THREE.Fog(0x000000, 500, 1000)\r\n\r\n        // Renderer\r\n        renderer = new THREE.WebGLRenderer({ antialias: true })\r\n        renderer.setSize(window.innerWidth, window.innerHeight)\r\n        renderer.setClearColor(scene.fog.color)\r\n\r\n        renderer.outputEncoding = THREE.sRGBEncoding\r\n\r\n        renderer.shadowMap.enabled = true\r\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n\r\n        document.body.appendChild(renderer.domElement)\r\n\r\n        // Lights\r\n        const ambientLight = new THREE.AmbientLight(0x666666)\r\n        scene.add(ambientLight)\r\n\r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1.2)\r\n        const distance = 20\r\n        directionalLight.position.set(-distance, distance, distance)\r\n\r\n        directionalLight.castShadow = true\r\n\r\n        directionalLight.shadow.mapSize.width = 2048\r\n        directionalLight.shadow.mapSize.height = 2048\r\n\r\n        directionalLight.shadow.camera.left = -distance\r\n        directionalLight.shadow.camera.right = distance\r\n        directionalLight.shadow.camera.top = distance\r\n        directionalLight.shadow.camera.bottom = -distance\r\n\r\n        directionalLight.shadow.camera.far = 3 * distance\r\n        directionalLight.shadow.camera.near = distance\r\n\r\n        scene.add(directionalLight)\r\n\r\n        // Raycaster for mouse interaction\r\n        raycaster = new THREE.Raycaster()\r\n\r\n        // Floor\r\n        const floorGeometry = new THREE.PlaneBufferGeometry(40, 40, 1, 1)\r\n        floorGeometry.rotateX(-Math.PI / 2)\r\n        const floorMaterial = new THREE.MeshLambertMaterial({ color: 0x555577 })\r\n        const floor = new THREE.Mesh(floorGeometry, floorMaterial)\r\n        floor.position.set(0, -10, 0)\r\n        floor.receiveShadow = true\r\n        scene.add(floor)\r\n\r\n        // Click marker to be shown on interaction\r\n        const markerGeometry = new THREE.SphereBufferGeometry(0.1, 8, 8)\r\n        const markerMaterial = new THREE.MeshLambertMaterial({ color: 0xff0000 })\r\n        clickMarker = new THREE.Mesh(markerGeometry, markerMaterial)\r\n        clickMarker.visible = false // Hide it..\r\n        scene.add(clickMarker)\r\n\r\n        // Cube\r\n        const cubeGeometry = new THREE.BoxBufferGeometry(1, 1, 1, 10, 10)\r\n        const cubeMaterial = new THREE.MeshPhongMaterial({ color: 0x999999 })\r\n        cubeMesh = new THREE.Mesh(cubeGeometry, cubeMaterial)\r\n        cubeMesh.castShadow = true\r\n        meshes.push(cubeMesh)\r\n        scene.add(cubeMesh)\r\n\r\n        // Movement plane when dragging\r\n        const planeGeometry = new THREE.PlaneBufferGeometry(100, 100)\r\n        movementPlane = new THREE.Mesh(planeGeometry, floorMaterial)\r\n        movementPlane.visible = false // Hide it..\r\n        scene.add(movementPlane)\r\n\r\n        window.addEventListener('resize', onWindowResize)\r\n      }\r\n\r\n      function onWindowResize() {\r\n        camera.aspect = window.innerWidth / window.innerHeight\r\n        camera.updateProjectionMatrix()\r\n        renderer.setSize(window.innerWidth, window.innerHeight)\r\n      }\r\n\r\n      function initCannon() {\r\n        // Setup world\r\n        world = new CANNON.World()\r\n        world.gravity.set(0, -10, 0)\r\n\r\n        // Floor\r\n        const floorShape0 = new CANNON.Plane()\r\n        const floorBody0 = new CANNON.Body({ mass: 0 })\r\n        floorBody0.addShape(floorShape0)\r\n        floorBody0.quaternion.setFromEuler(-Math.PI / 2, 0, 0)\r\n        floorBody0.position.set(0, -10, 0)\r\n        world.addBody(floorBody0)\r\n\r\n        const floorShape10 = new CANNON.Plane()\r\n        const floorBody10 = new CANNON.Body({ mass: 0 })\r\n        floorBody10.addShape(floorShape10)\r\n        floorBody10.quaternion.setFromEuler(Math.PI / 2, 0, 0)\r\n        floorBody10.position.set(0, 30, 0)\r\n        world.addBody(floorBody10)\r\n\r\n        const floorShape1 = new CANNON.Plane()\r\n        const floorBody1 = new CANNON.Body({ mass: 0 })\r\n        floorBody1.addShape(floorShape1)\r\n        floorBody1.quaternion.setFromEuler(0, -Math.PI / 2, 0)\r\n        floorBody1.position.set(20, 10, 0)\r\n\r\n        world.addBody(floorBody1)\r\n\r\n        const floorShape12 = new CANNON.Plane()\r\n        const floorBody12 = new CANNON.Body({ mass: 0 })\r\n        floorBody12.addShape(floorShape12)\r\n        floorBody12.quaternion.setFromEuler(0, Math.PI / 2, 0)\r\n        floorBody12.position.set(-20, 10, 0)\r\n\r\n        world.addBody(floorBody12)\r\n\r\n\r\n        const floorShape21 = new CANNON.Plane()\r\n        const floorBody21 = new CANNON.Body({ mass: 0 })\r\n        floorBody21.addShape(floorShape21)\r\n        floorBody21.quaternion.setFromEuler(0, 0, 0)\r\n        floorBody21.position.set(0, 10, -20)\r\n\r\n        world.addBody(floorBody21)\r\n\r\n        const floorShape22 = new CANNON.Plane()\r\n        const floorBody22 = new CANNON.Body({ mass: 0 })\r\n        floorBody22.addShape(floorShape22)\r\n        floorBody22.quaternion.setFromEuler(0, -Math.PI, 0 )\r\n        floorBody22.position.set(0, 10, 20)\r\n\r\n        world.addBody(floorBody22)\r\n\r\n        // Cube body\r\n        const cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5))\r\n        cubeBody = new CANNON.Body({ mass: 100 })\r\n        cubeBody.addShape(cubeShape)\r\n        cubeBody.position.set(0, 2, 0)\r\n        bodies.push(cubeBody)\r\n        world.addBody(cubeBody)\r\n\r\n        // Joint body, to later constraint the cube\r\n        const jointShape = new CANNON.Sphere(0.1)\r\n        jointBody = new CANNON.Body({ mass: 0 })\r\n        jointBody.addShape(jointShape)\r\n        jointBody.collisionFilterGroup = 0\r\n        jointBody.collisionFilterMask = 0\r\n        world.addBody(jointBody)\r\n      }\r\n\r\n      window.addEventListener('pointerdown', (event) => {\r\n        // Cast a ray from where the mouse is pointing and\r\n        // see if we hit something\r\n        const hitPoint = getHitPoint(event.clientX, event.clientY, cubeMesh, camera)\r\n\r\n        // Return if the cube wasn't hit\r\n        if (!hitPoint) {\r\n          return\r\n        }\r\n        controls.enabled = false\r\n        // Move marker mesh on contact point\r\n        showClickMarker()\r\n        moveClickMarker(hitPoint)\r\n\r\n        // Move the movement plane on the z-plane of the hit\r\n        moveMovementPlane(hitPoint, camera)\r\n\r\n        // Create the constraint between the cube body and the joint body\r\n        addJointConstraint(hitPoint, cubeBody)\r\n\r\n        // Set the flag to trigger pointermove on next frame so the\r\n        // movementPlane has had time to move\r\n        requestAnimationFrame(() => {\r\n          isDragging = true\r\n        })\r\n      })\r\n\r\n      window.addEventListener('pointermove', (event) => {\r\n        if (!isDragging) {\r\n          return\r\n        }\r\n\r\n        // Project the mouse onto the movement plane\r\n        const hitPoint = getHitPoint(event.clientX, event.clientY, movementPlane, camera)\r\n\r\n        if (hitPoint) {\r\n          // Move marker mesh on the contact point\r\n          moveClickMarker(hitPoint)\r\n\r\n          // Move the cannon constraint on the contact point\r\n          moveJoint(hitPoint)\r\n        }\r\n      })\r\n\r\n      window.addEventListener('pointerup', () => {\r\n        isDragging = false\r\n        controls.enabled = true\r\n\r\n        // Hide the marker mesh\r\n        hideClickMarker()\r\n\r\n        // Remove the mouse constraint from the world\r\n        removeJointConstraint()\r\n      })\r\n\r\n      function showClickMarker() {\r\n        clickMarker.visible = true\r\n      }\r\n\r\n      function moveClickMarker(position) {\r\n        clickMarker.position.copy(position)\r\n      }\r\n\r\n      function hideClickMarker() {\r\n        clickMarker.visible = false\r\n      }\r\n\r\n      // This function moves the virtual movement plane for the mouseJoint to move in\r\n      function moveMovementPlane(point, camera) {\r\n        // Center at mouse position\r\n        movementPlane.position.copy(point)\r\n\r\n        // Make it face toward the camera\r\n        movementPlane.quaternion.copy(camera.quaternion)\r\n      }\r\n\r\n      // Returns an hit point if there's a hit with the mesh,\r\n      // otherwise returns undefined\r\n      function getHitPoint(clientX, clientY, mesh, camera) {\r\n        // Get 3D point form the client x y\r\n        const mouse = new THREE.Vector2()\r\n        mouse.x = (clientX / window.innerWidth) * 2 - 1\r\n        mouse.y = -((clientY / window.innerHeight) * 2 - 1)\r\n\r\n        // Get the picking ray from the point\r\n        raycaster.setFromCamera(mouse, camera)\r\n\r\n        // Find out if there's a hit\r\n        const hits = raycaster.intersectObject(mesh)\r\n\r\n        // Return the closest hit or undefined\r\n        return hits.length > 0 ? hits[0].point : undefined\r\n      }\r\n\r\n      // Add a constraint between the cube and the jointBody\r\n      // in the initeraction position\r\n      function addJointConstraint(position, constrainedBody) {\r\n        // Vector that goes from the body to the clicked point\r\n        const vector = new CANNON.Vec3().copy(position).vsub(constrainedBody.position)\r\n\r\n        // Apply anti-quaternion to vector to tranform it into the local body coordinate system\r\n        const antiRotation = constrainedBody.quaternion.inverse()\r\n        const pivot = antiRotation.vmult(vector) // pivot is not in local body coordinates\r\n\r\n        // Move the cannon click marker body to the click position\r\n        jointBody.position.copy(position)\r\n\r\n        // Create a new constraint\r\n        // The pivot for the jointBody is zero\r\n        jointConstraint = new CANNON.PointToPointConstraint(constrainedBody, pivot, jointBody, new CANNON.Vec3(0, 0, 0))\r\n\r\n        // Add the constraint to world\r\n        world.addConstraint(jointConstraint)\r\n      }\r\n\r\n      // This functions moves the joint body to a new postion in space\r\n      // and updates the constraint\r\n      function moveJoint(position) {\r\n        jointBody.position.copy(position)\r\n        jointConstraint.update()\r\n      }\r\n\r\n      // Remove constraint from world\r\n      function removeJointConstraint() {\r\n        world.removeConstraint(jointConstraint)\r\n        jointConstraint = undefined\r\n      }\r\n\r\n      function animate() {\r\n        requestAnimationFrame(animate)\r\n        controls.update()\r\n        // Step the physics world\r\n        world.fixedStep()\r\n        // console.log(cubeMesh.position.distanceTo(camera.position))\r\n        // Sync the three.js meshes with the bodies\r\n        for (let i = 0; i !== meshes.length; i++) {\r\n          meshes[i].position.copy(bodies[i].position)\r\n          meshes[i].quaternion.copy(bodies[i].quaternion)\r\n        }\r\n        cannonDebugger.update()\r\n        // Render three.js\r\n        renderer.render(scene, camera)\r\n      }","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}